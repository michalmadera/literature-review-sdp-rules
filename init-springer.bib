
@article{khuat_evaluation_2020,
	title = {Evaluation of Sampling-Based Ensembles of Classifiers on Imbalanced Data for Software Defect Prediction Problems},
	volume = {1},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-020-0119-4},
	doi = {10.1007/s42979-020-0119-4},
	pages = {108},
	number = {2},
	journaltitle = {{SN} Computer Science},
	shortjournal = {{SN} {COMPUT}. {SCI}.},
	author = {Khuat, Thanh Tung and Le, My Hanh},
	urldate = {2021-07-04},
	date = {2020-03},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\SXQ9YKVC\\Khuat and Le - 2020 - Evaluation of Sampling-Based Ensembles of Classifi.pdf:application/pdf}
}

@article{rathore_empirical_2021,
	title = {An empirical study of ensemble techniques for software fault prediction},
	volume = {51},
	issn = {0924-669X, 1573-7497},
	url = {https://link.springer.com/10.1007/s10489-020-01935-6},
	doi = {10.1007/s10489-020-01935-6},
	pages = {3615--3644},
	number = {6},
	journaltitle = {Applied Intelligence},
	shortjournal = {Appl Intell},
	author = {Rathore, Santosh S. and Kumar, Sandeep},
	urldate = {2021-07-04},
	date = {2021-06},
	langid = {english},
	keywords = {xno}
}

@article{patil_predicting_2020,
	title = {Predicting software defect type using concept-based classification},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-019-09779-6},
	doi = {10.1007/s10664-019-09779-6},
	pages = {1341--1378},
	number = {2},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Patil, Sangameshwar and Ravindran, B.},
	urldate = {2021-07-04},
	date = {2020-03},
	langid = {english},
	keywords = {xno}
}

@article{zhong_learning_2020,
	title = {Learning a graph-based classifier for fault localization},
	volume = {63},
	issn = {1674-733X, 1869-1919},
	url = {https://link.springer.com/10.1007/s11432-019-2720-1},
	doi = {10.1007/s11432-019-2720-1},
	pages = {162101},
	number = {6},
	journaltitle = {Science China Information Sciences},
	shortjournal = {Sci. China Inf. Sci.},
	author = {Zhong, Hao and Mei, Hong},
	urldate = {2021-07-04},
	date = {2020-06},
	langid = {english},
	keywords = {xno}
}

@article{rathore_software_2021,
	title = {Software fault prediction based on the dynamic selection of learning technique: findings from the eclipse project study},
	issn = {0924-669X, 1573-7497},
	url = {https://link.springer.com/10.1007/s10489-021-02346-x},
	doi = {10.1007/s10489-021-02346-x},
	shorttitle = {Software fault prediction based on the dynamic selection of learning technique},
	journaltitle = {Applied Intelligence},
	shortjournal = {Appl Intell},
	author = {Rathore, Santosh S. and Kumar, Sandeep},
	urldate = {2021-07-04},
	date = {2021-04-16},
	langid = {english},
	keywords = {xno}
}

@article{rhmann_cross_2020,
	title = {Cross project defect prediction using hybrid search based algorithms},
	volume = {12},
	issn = {2511-2104, 2511-2112},
	url = {http://link.springer.com/10.1007/s41870-018-0244-7},
	doi = {10.1007/s41870-018-0244-7},
	pages = {531--538},
	number = {2},
	journaltitle = {International Journal of Information Technology},
	shortjournal = {Int. j. inf. tecnol.},
	author = {Rhmann, Wasiur},
	urldate = {2021-07-04},
	date = {2020-06},
	langid = {english},
	keywords = {xno}
}

@article{titcheu_chekam_selecting_2020,
	title = {Selecting fault revealing mutants},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-019-09778-7},
	doi = {10.1007/s10664-019-09778-7},
	abstract = {Abstract
            
              Mutant selection refers to the problem of choosing, among a large number of mutants, the (few) ones that should be used by the testers. In view of this, we investigate the problem of selecting the fault revealing mutants, i.e., the mutants that are killable and lead to test cases that uncover unknown program faults. We formulate two variants of this problem: the fault revealing mutant selection and the fault revealing mutant prioritization. We argue and show that these problems can be tackled through a set of ‘static’ program features and propose a machine learning approach, named
              {FaRM}
              , that learns to select and rank killable and fault revealing mutants. Experimental results involving 1,692 real faults show the practical benefits of our approach in both examined problems. Our results show that
              {FaRM}
              achieves a good trade-off between application cost and effectiveness (measured in terms of faults revealed). We also show that
              {FaRM}
              outperforms all the existing mutant selection methods, i.e., the random mutant sampling, the selective mutation and defect prediction (mutating the code areas pointed by defect prediction). In particular, our results show that with respect to mutant selection, our approach reveals 23\% to 34\% more faults than any of the baseline methods, while, with respect to mutant prioritization, it achieves higher average percentage of revealed faults with a median difference between 4\% and 9\% (from the random mutant orderings).},
	pages = {434--487},
	number = {1},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Titcheu Chekam, Thierry and Papadakis, Mike and Bissyandé, Tegawendé F. and Le Traon, Yves and Sen, Koushik},
	urldate = {2021-07-04},
	date = {2020-01},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\SQ6YE2NK\\Titcheu Chekam et al. - 2020 - Selecting fault revealing mutants.pdf:application/pdf}
}

@article{suresh_kumar_bootstrap_2021,
	title = {Bootstrap aggregation ensemble learning-based reliable approach for software defect prediction by using characterized code feature},
	issn = {1614-5046, 1614-5054},
	url = {https://link.springer.com/10.1007/s11334-021-00399-2},
	doi = {10.1007/s11334-021-00399-2},
	journaltitle = {Innovations in Systems and Software Engineering},
	shortjournal = {Innovations Syst Softw Eng},
	author = {Suresh Kumar, P. and Behera, H. S. and Nayak, Janmenjoy and Naik, Bighnaraj},
	urldate = {2021-07-04},
	date = {2021-05-19},
	langid = {english},
	keywords = {xno}
}

@article{wang_software_2021,
	title = {Software defect prediction model based on {LASSO}–{SVM}},
	volume = {33},
	issn = {0941-0643, 1433-3058},
	url = {https://link.springer.com/10.1007/s00521-020-04960-1},
	doi = {10.1007/s00521-020-04960-1},
	pages = {8249--8259},
	number = {14},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Wang, Kechao and Liu, Lin and Yuan, Chengjun and Wang, Zhifei},
	urldate = {2021-07-04},
	date = {2021-07},
	langid = {english},
	keywords = {xno}
}

@article{mustaqeem_principal_2021,
	title = {Principal component based support vector machine ({PC}-{SVM}): a hybrid technique for software defect detection},
	issn = {1386-7857, 1573-7543},
	url = {https://link.springer.com/10.1007/s10586-021-03282-8},
	doi = {10.1007/s10586-021-03282-8},
	shorttitle = {Principal component based support vector machine ({PC}-{SVM})},
	journaltitle = {Cluster Computing},
	shortjournal = {Cluster Comput},
	author = {Mustaqeem, Mohd. and Saqib, Mohd.},
	urldate = {2021-07-04},
	date = {2021-04-16},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\SSCYTH5Z\\Mustaqeem and Saqib - 2021 - Principal component based support vector machine (.pdf:application/pdf}
}

@article{malhotra_empirical_2020,
	title = {An empirical study on predictability of software maintainability using imbalanced data},
	volume = {28},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-020-09525-y},
	doi = {10.1007/s11219-020-09525-y},
	pages = {1581--1614},
	number = {4},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Malhotra, Ruchika and Lata, Kusum},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno}
}

@article{ulan_weighted_2021,
	title = {Weighted software metrics aggregation and its application to defect prediction},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-09984-2},
	doi = {10.1007/s10664-021-09984-2},
	abstract = {Abstract
            It is a well-known practice in software engineering to aggregate software metrics to assess software artifacts for various purposes, such as their maintainability or their proneness to contain bugs. For different purposes, different metrics might be relevant. However, weighting these software metrics according to their contribution to the respective purpose is a challenging task. Manual approaches based on experts do not scale with the number of metrics. Also, experts get confused if the metrics are not independent, which is rarely the case. Automated approaches based on supervised learning require reliable and generalizable training data, a ground truth, which is rarely available. We propose an automated approach to weighted metrics aggregation that is based on unsupervised learning. It sets metrics scores and their weights based on probability theory and aggregates them. To evaluate the effectiveness, we conducted two empirical studies on defect prediction, one on ca. 200 000 code changes, and another ca. 5 000 software classes. The results show that our approach can be used as an agnostic unsupervised predictor in the absence of a ground truth.},
	pages = {86},
	number = {5},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Ulan, Maria and Löwe, Welf and Ericsson, Morgan and Wingkvist, Anna},
	urldate = {2021-07-04},
	date = {2021-09},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\HE29XJGB\\Ulan et al. - 2021 - Weighted software metrics aggregation and its appl.pdf:application/pdf}
}

@article{mehta_improved_2021,
	title = {Improved prediction of software defects using ensemble machine learning techniques},
	issn = {0941-0643, 1433-3058},
	url = {http://link.springer.com/10.1007/s00521-021-05811-3},
	doi = {10.1007/s00521-021-05811-3},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Mehta, Sweta and Patnaik, K. Sridhar},
	urldate = {2021-07-04},
	date = {2021-03-02},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\45MQWK7V\\Mehta and Patnaik - 2021 - Improved prediction of software defects using ense.pdf:application/pdf}
}

@article{rodriguez-perez_how_2020,
	title = {How bugs are born: a model to identify how bugs are introduced in software components},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-019-09781-y},
	doi = {10.1007/s10664-019-09781-y},
	shorttitle = {How bugs are born},
	abstract = {Abstract
            
              When identifying the origin of software bugs, many studies assume that “a bug was introduced by the lines of code that were modified to fix it”. However, this assumption does not always hold and at least in some cases, these modified lines are not responsible for introducing the bug. For example, when the bug was caused by a change in an external {API}. The lack of empirical evidence makes it impossible to assess how important these cases are and therefore, to which extent the assumption is valid. To advance in this direction, and better understand how bugs “are born”, we propose a model for defining criteria to identify the first snapshot of an evolving software system that exhibits a bug. This model, based on the
              perfect test
              idea, decides whether a bug is observed after a change to the software. Furthermore, we studied the model’s criteria by carefully analyzing how 116 bugs were introduced in two different open source software projects. The manual analysis helped classify the root cause of those bugs and created manually curated datasets with bug-introducing changes and with bugs that were not introduced by any change in the source code. Finally, we used these datasets to evaluate the performance of four existing {SZZ}-based algorithms for detecting bug-introducing changes. We found that {SZZ}-based algorithms are not very accurate, especially when multiple commits are found; the F-Score varies from 0.44 to 0.77, while the percentage of true positives does not exceed 63\%. Our results show empirical evidence that the prevalent assumption, “a bug was introduced by the lines of code that were modified to fix it”, is just one case of how bugs are introduced in a software system. Finding what introduced a bug is not trivial: bugs can be introduced by the developers and be in the code, or be created irrespective of the code. Thus, further research towards a better understanding of the origin of bugs in software projects could help to improve design integration tests and to design other procedures to make software development more robust.},
	pages = {1294--1340},
	number = {2},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Rodríguez-Pérez, Gema and Robles, Gregorio and Serebrenik, Alexander and Zaidman, Andy and Germán, Daniel M. and Gonzalez-Barahona, Jesus M.},
	urldate = {2021-07-04},
	date = {2020-03},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\HQGZEWBS\\Rodríguez-Pérez et al. - 2020 - How bugs are born a model to identify how bugs ar.pdf:application/pdf}
}

@article{nevendra_defect_2021,
	title = {Defect count prediction via metric-based convolutional neural network},
	issn = {0941-0643, 1433-3058},
	url = {https://link.springer.com/10.1007/s00521-021-06158-5},
	doi = {10.1007/s00521-021-06158-5},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Nevendra, Meetesh and Singh, Pradeep},
	urldate = {2021-07-04},
	date = {2021-06-08},
	langid = {english},
	keywords = {xno}
}

@article{van_nguyen_automated_2021,
	title = {An automated fault detection system for communication networks and distributed systems},
	issn = {0924-669X, 1573-7497},
	url = {http://link.springer.com/10.1007/s10489-020-02026-2},
	doi = {10.1007/s10489-020-02026-2},
	journaltitle = {Applied Intelligence},
	shortjournal = {Appl Intell},
	author = {Van Nguyen, Sinh and Tran, Ha Manh},
	urldate = {2021-07-04},
	date = {2021-01-08},
	langid = {english},
	keywords = {xno}
}

@article{mohd_amiruddin_neural_2020,
	title = {Neural network applications in fault diagnosis and detection: an overview of implementations in engineering-related systems},
	volume = {32},
	issn = {0941-0643, 1433-3058},
	url = {http://link.springer.com/10.1007/s00521-018-3911-5},
	doi = {10.1007/s00521-018-3911-5},
	shorttitle = {Neural network applications in fault diagnosis and detection},
	pages = {447--472},
	number = {2},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Mohd Amiruddin, Ahmad Azharuddin Azhari and Zabiri, Haslinda and Taqvi, Syed Ali Ammar and Tufa, Lemma Dendena},
	urldate = {2021-07-04},
	date = {2020-01},
	langid = {english},
	keywords = {xno}
}

@article{ribeiro_junior_fault_2020,
	title = {Fault classification in three-phase motors based on vibration signal analysis and artificial neural networks},
	volume = {32},
	issn = {0941-0643, 1433-3058},
	url = {http://link.springer.com/10.1007/s00521-020-04868-w},
	doi = {10.1007/s00521-020-04868-w},
	pages = {15171--15189},
	number = {18},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Ribeiro Junior, Ronny Francis and de Almeida, Fabrício Alves and Gomes, Guilherme Ferreira},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xno}
}

@article{vegas_misperceptions_2020,
	title = {On (Mis)perceptions of testing effectiveness: an empirical study},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-020-09805-y},
	doi = {10.1007/s10664-020-09805-y},
	shorttitle = {On (Mis)perceptions of testing effectiveness},
	pages = {2844--2896},
	number = {4},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Vegas, Sira and Riofrío, Patricia and Marcos, Esperanza and Juristo, Natalia},
	urldate = {2021-07-04},
	date = {2020-07},
	langid = {english},
	keywords = {xno}
}

@article{nezhadshokouhi_software_2020,
	title = {Software defect prediction using over-sampling and feature extraction based on Mahalanobis distance},
	volume = {76},
	issn = {0920-8542, 1573-0484},
	url = {http://link.springer.com/10.1007/s11227-019-03051-w},
	doi = {10.1007/s11227-019-03051-w},
	pages = {602--635},
	number = {1},
	journaltitle = {The Journal of Supercomputing},
	shortjournal = {J Supercomput},
	author = {{NezhadShokouhi}, Mohammad Mahdi and Majidi, Mohammad Ali and Rasoolzadegan, Abbas},
	urldate = {2021-07-04},
	date = {2020-01},
	langid = {english},
	keywords = {xno}
}

@article{pecorelli_relation_2021,
	title = {The Relation of Test-Related Factors to Software Quality: A Case Study on Apache Systems},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09891-y},
	doi = {10.1007/s10664-020-09891-y},
	shorttitle = {The Relation of Test-Related Factors to Software Quality},
	abstract = {Abstract
            
              Testing represents a crucial activity to ensure software quality. Recent studies have shown that test-related factors (e.g., code coverage) can be reliable predictors of software code quality, as measured by post-release defects. While these studies provided initial compelling evidence on the relation between tests and post-release defects, they considered different test-related factors separately: as a consequence, there is still a lack of knowledge of whether these factors are still good predictors when considering all together. In this paper, we propose a comprehensive case study on how test-related factors relate to production code quality in
              Apache
              systems. We first investigated how the presence of tests relates to post-release defects; then, we analyzed the role played by the test-related factors previously shown as significantly related to post-release defects. The key findings of the study show that, when controlling for other metrics (e.g., size of the production class), test-related factors have a limited connection to post-release defects.},
	pages = {18},
	number = {2},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Pecorelli, Fabiano and Palomba, Fabio and De Lucia, Andrea},
	urldate = {2021-07-04},
	date = {2021-03},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\DZLJZJ4L\\Pecorelli et al. - 2021 - The Relation of Test-Related Factors to Software Q.pdf:application/pdf}
}

@article{mhawish_predicting_2020,
	title = {Predicting Code Smells and Analysis of Predictions: Using Machine Learning Techniques and Software Metrics},
	volume = {35},
	issn = {1000-9000, 1860-4749},
	url = {http://link.springer.com/10.1007/s11390-020-0323-7},
	doi = {10.1007/s11390-020-0323-7},
	shorttitle = {Predicting Code Smells and Analysis of Predictions},
	pages = {1428--1445},
	number = {6},
	journaltitle = {Journal of Computer Science and Technology},
	shortjournal = {J. Comput. Sci. Technol.},
	author = {Mhawish, Mohammad Y. and Gupta, Manjari},
	urldate = {2021-07-04},
	date = {2020-11},
	langid = {english},
	keywords = {xyes}
}

@article{krishna_learning_2020,
	title = {Learning actionable analytics from multiple software projects},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09843-6},
	doi = {10.1007/s10664-020-09843-6},
	pages = {3468--3500},
	number = {5},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Krishna, Rahul and Menzies, Tim},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xyes},
	file = {Submitted Version:C\:\\Users\\michalm\\Zotero\\storage\\PBNRDJEQ\\Krishna and Menzies - 2020 - Learning actionable analytics from multiple softwa.pdf:application/pdf}
}

@article{abid_review_2021,
	title = {A review on fault detection and diagnosis techniques: basics and beyond},
	volume = {54},
	issn = {0269-2821, 1573-7462},
	url = {https://link.springer.com/10.1007/s10462-020-09934-2},
	doi = {10.1007/s10462-020-09934-2},
	shorttitle = {A review on fault detection and diagnosis techniques},
	pages = {3639--3664},
	number = {5},
	journaltitle = {Artificial Intelligence Review},
	shortjournal = {Artif Intell Rev},
	author = {Abid, Anam and Khan, Muhammad Tahir and Iqbal, Javaid},
	urldate = {2021-07-04},
	date = {2021-06},
	langid = {english},
	keywords = {xno}
}

@article{falessi_need_2020,
	title = {On the need of preserving order of data when validating within-project defect classifiers},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09868-x},
	doi = {10.1007/s10664-020-09868-x},
	abstract = {Abstract
            We are in the shoes of a practitioner who uses previous project releases’ data to predict which classes of the current release are defect-prone. In this scenario, the practitioner would like to use the most accurate classifier among the many available ones. A validation technique, hereinafter “technique”, defines how to measure the prediction accuracy of a classifier. Several previous research efforts analyzed several techniques. However, no previous study compared validation techniques in the within-project across-release class-level context or considered techniques that preserve the order of data. In this paper, we investigate which technique recommends the most accurate classifier. We use the last release of a project as the ground truth to evaluate the classifier’s accuracy and hence the ability of a technique to recommend an accurate classifier. We consider nine classifiers, two industry and 13 open projects, and three validation techniques: namely 10-fold cross-validation (i.e., the most used technique), bootstrap (i.e., the recommended technique), and walk-forward (i.e., a technique preserving the order of data). Our results show that: 1) classifiers differ in accuracy in all datasets regardless of their entity per value, 2) walk-forward outperforms both 10-fold cross-validation and bootstrap statistically in all three accuracy metrics: {AUC} of the selected classifier, bias and absolute bias, 3) surprisingly, all techniques resulted to be more prone to overestimate than to underestimate the performances of classifiers, and 3) the defect rate resulted in changing between the second and first half in both industry projects and 83\% of open-source datasets. This study recommends the use of techniques that preserve the order of data such as walk-forward over 10-fold cross-validation and bootstrap in the within-project across-release class-level context given the above empirical results and that walk-forward is by nature more simple, inexpensive, and stable than the other two techniques.},
	pages = {4805--4830},
	number = {6},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Falessi, Davide and Huang, Jacky and Narayana, Likhita and Thai, Jennifer Fong and Turhan, Burak},
	urldate = {2021-07-04},
	date = {2020-11},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\YT9FYTMW\\Falessi et al. - 2020 - On the need of preserving order of data when valid.pdf:application/pdf}
}

@article{al-hawari_classification_2020,
	title = {Classification of application reviews into software maintenance tasks using data mining techniques},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-020-09529-8},
	doi = {10.1007/s11219-020-09529-8},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Al-Hawari, Assem and Najadat, Hassan and Shatnawi, Raed},
	urldate = {2021-07-04},
	date = {2020-08-28},
	langid = {english},
	keywords = {xno}
}

@article{bahrampour_using_2021,
	title = {Using memetic algorithm for robustness testing of contract-based software models},
	volume = {54},
	issn = {0269-2821, 1573-7462},
	url = {http://link.springer.com/10.1007/s10462-020-09881-y},
	doi = {10.1007/s10462-020-09881-y},
	pages = {877--915},
	number = {2},
	journaltitle = {Artificial Intelligence Review},
	shortjournal = {Artif Intell Rev},
	author = {Bahrampour, Anvar and Rafe, Vahid},
	urldate = {2021-07-04},
	date = {2021-02},
	langid = {english},
	keywords = {xno}
}

@article{lopez-martin_machine_2021,
	title = {Machine learning techniques for software testing effort prediction},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-020-09545-8},
	doi = {10.1007/s11219-020-09545-8},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {López-Martín, Cuauhtémoc},
	urldate = {2021-07-04},
	date = {2021-02-22},
	langid = {english},
	keywords = {xno}
}

@article{guedes_provenance-based_2020,
	title = {Provenance-based fault tolerance technique recommendation for cloud-based scientific workflows: a practical approach},
	volume = {23},
	issn = {1386-7857, 1573-7543},
	url = {http://link.springer.com/10.1007/s10586-019-02920-6},
	doi = {10.1007/s10586-019-02920-6},
	shorttitle = {Provenance-based fault tolerance technique recommendation for cloud-based scientific workflows},
	pages = {123--148},
	number = {1},
	journaltitle = {Cluster Computing},
	shortjournal = {Cluster Comput},
	author = {Guedes, Thaylon and Jesus, Leonardo A. and Ocaña, Kary A. C. S. and Drummond, Lucia M. A. and de Oliveira, Daniel},
	urldate = {2021-07-04},
	date = {2020-03},
	langid = {english},
	keywords = {xno}
}

@article{cinque_empirical_2020,
	title = {An empirical analysis of error propagation in critical software systems},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09801-2},
	doi = {10.1007/s10664-020-09801-2},
	pages = {2450--2484},
	number = {4},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Cinque, Marcello and Della Corte, Raffaele and Pecchia, Antonio},
	urldate = {2021-07-04},
	date = {2020-07},
	langid = {english},
	keywords = {xno}
}

@article{kumbhar_fault_2021,
	title = {Fault size diagnosis of rolling element bearing using artificial neural network and dimension theory},
	issn = {0941-0643, 1433-3058},
	url = {https://link.springer.com/10.1007/s00521-021-06228-8},
	doi = {10.1007/s00521-021-06228-8},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Kumbhar, Surajkumar G. and Desavale, R. G. and Dharwadkar, Nagaraj V.},
	urldate = {2021-07-04},
	date = {2021-06-22},
	langid = {english},
	keywords = {xno}
}

@article{hsieh_improving_2021,
	title = {Improving the fault-tolerance of software-defined networks with dynamic overlay agreement},
	issn = {1386-7857, 1573-7543},
	url = {https://link.springer.com/10.1007/s10586-020-03224-w},
	doi = {10.1007/s10586-020-03224-w},
	journaltitle = {Cluster Computing},
	shortjournal = {Cluster Comput},
	author = {Hsieh, Hui-Ching and Chiang, Mao-Lun and Chang, Tzu-Yang},
	urldate = {2021-07-04},
	date = {2021-04-19},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\QNPJPS3Q\\Hsieh et al. - 2021 - Improving the fault-tolerance of software-defined .pdf:application/pdf}
}

@article{dutta_ftfl_2021,
	title = {{FTFL}: A Fisher’s test-based approach for fault localization},
	issn = {1614-5046, 1614-5054},
	url = {https://link.springer.com/10.1007/s11334-021-00403-9},
	doi = {10.1007/s11334-021-00403-9},
	shorttitle = {{FTFL}},
	journaltitle = {Innovations in Systems and Software Engineering},
	shortjournal = {Innovations Syst Softw Eng},
	author = {Dutta, Arpita and Kunal, Krishna and Srivastava, Saksham Sahai and Shankar, Shubham and Mall, Rajib},
	urldate = {2021-07-04},
	date = {2021-06-17},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\MWLMIIPK\\Dutta et al. - 2021 - FTFL A Fisher’s test-based approach for fault loc.pdf:application/pdf}
}

@article{trautsch_longitudinal_2020,
	title = {A longitudinal study of static analysis warning evolution and the effects of {PMD} on software quality in Apache open source projects},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09880-1},
	doi = {10.1007/s10664-020-09880-1},
	abstract = {Abstract
            Automated static analysis tools ({ASATs}) have become a major part of the software development workflow. Acting on the generated warnings, i.e., changing the code indicated in the warning, should be part of, at latest, the code review phase. Despite this being a best practice in software development, there is still a lack of empirical research regarding the usage of {ASATs} in the wild. In this work, we want to study {ASAT} warning trends in software via the example of {PMD} as an {ASAT} and its usage in open source projects. We analyzed the commit history of 54 projects (with 112,266 commits in total), taking into account 193 {PMD} rules and 61 {PMD} releases. We investigate trends of {ASAT} warnings over up to 17 years for the selected study subjects regarding changes of warning types, short and long term impact of {ASAT} use, and changes in warning severities. We found that large global changes in {ASAT} warnings are mostly due to coding style changes regarding braces and naming conventions. We also found that, surprisingly, the influence of the presence of {PMD} in the build process of the project on warning removal trends for the number of warnings per lines of code is small and not statistically significant. Regardless, if we consider defect density as a proxy for external quality, we see a positive effect if {PMD} is present in the build configuration of our study subjects.},
	pages = {5137--5192},
	number = {6},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Trautsch, Alexander and Herbold, Steffen and Grabowski, Jens},
	urldate = {2021-07-04},
	date = {2020-11},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\BBEBJ3HV\\Trautsch et al. - 2020 - A longitudinal study of static analysis warning ev.pdf:application/pdf}
}

@article{elmidaoui_machine_2020,
	title = {Machine Learning Techniques for Software Maintainability Prediction: Accuracy Analysis},
	volume = {35},
	issn = {1000-9000, 1860-4749},
	url = {http://link.springer.com/10.1007/s11390-020-9668-1},
	doi = {10.1007/s11390-020-9668-1},
	shorttitle = {Machine Learning Techniques for Software Maintainability Prediction},
	pages = {1147--1174},
	number = {5},
	journaltitle = {Journal of Computer Science and Technology},
	shortjournal = {J. Comput. Sci. Technol.},
	author = {Elmidaoui, Sara and Cheikhi, Laila and Idri, Ali and Abran, Alain},
	urldate = {2021-07-04},
	date = {2020-10},
	langid = {english},
	keywords = {xno}
}

@article{gaur_applications_2021,
	title = {Applications of computational intelligence techniques to software engineering problems},
	issn = {1614-5046, 1614-5054},
	url = {http://link.springer.com/10.1007/s11334-021-00394-7},
	doi = {10.1007/s11334-021-00394-7},
	pages = {s11334--021--00394--7},
	journaltitle = {Innovations in Systems and Software Engineering},
	shortjournal = {Innovations Syst Softw Eng},
	author = {Gaur, Loveleen and Singh, Gurinder and Hinchey, Mike and Singh, Gurmeet and Jain, Vishal},
	urldate = {2021-07-04},
	date = {2021-04-02},
	langid = {english},
	keywords = {xno}
}

@article{kermansaravi_investigating_2021,
	title = {Investigating design anti-pattern and design pattern mutations and their change- and fault-proneness},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09900-0},
	doi = {10.1007/s10664-020-09900-0},
	pages = {9},
	number = {1},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Kermansaravi, Zeinab Azadeh and Rahman, Md Saidur and Khomh, Foutse and Jaafar, Fehmi and Guéhéneuc, Yann-Gaël},
	urldate = {2021-07-04},
	date = {2021-01},
	langid = {english},
	keywords = {xno},
	file = {Submitted Version:C\:\\Users\\michalm\\Zotero\\storage\\DFQZR54F\\Kermansaravi et al. - 2021 - Investigating design anti-pattern and design patte.pdf:application/pdf}
}

@article{rahman_as_2020,
	title = {The ‘as code’ activities: development anti-patterns for infrastructure as code},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09841-8},
	doi = {10.1007/s10664-020-09841-8},
	shorttitle = {The ‘as code’ activities},
	pages = {3430--3467},
	number = {5},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Rahman, Akond and Farhana, Effat and Williams, Laurie},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xno},
	file = {Submitted Version:C\:\\Users\\michalm\\Zotero\\storage\\3ASBAWJR\\Rahman et al. - 2020 - The ‘as code’ activities development anti-pattern.pdf:application/pdf}
}

@article{parri_framework_2021,
	title = {A framework for Model-Driven Engineering of resilient software-controlled systems},
	volume = {103},
	issn = {0010-485X, 1436-5057},
	url = {http://link.springer.com/10.1007/s00607-020-00841-6},
	doi = {10.1007/s00607-020-00841-6},
	abstract = {Abstract
            
              Emergent paradigms of Industry 4.0 and Industrial Internet of Things expect cyber-physical systems to reliably provide services overcoming disruptions in operative conditions and adapting to changes in architectural and functional requirements. In this paper, we describe a hardware/software framework supporting operation and maintenance of software-controlled systems enhancing resilience by promoting a Model-Driven Engineering ({MDE}) process to automatically derive structural configurations and failure models from reliability artifacts. Specifically, a
              reflective
              architecture developed around
              digital twins
              enables representation and control of system
              Configuration Items
              properly derived from {SysML} Block Definition Diagrams, providing support for variation. Besides, a plurality of distributed analytic agents for qualitative evaluation over executable failure models empowers the system with runtime self-assessment and dynamic adaptation capabilities. We describe the framework architecture outlining roles and responsibilities in a System of Systems perspective, providing salient design traits about digital twins and data analytic agents for failure propagation modeling and analysis. We discuss a prototype implementation following the {MDE} approach, highlighting self-recovery and self-adaptation properties on a real cyber-physical system for vehicle access control to Limited Traffic Zones.},
	pages = {589--612},
	number = {4},
	journaltitle = {Computing},
	shortjournal = {Computing},
	author = {Parri, Jacopo and Patara, Fulvio and Sampietro, Samuele and Vicario, Enrico},
	urldate = {2021-07-04},
	date = {2021-04},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\9EXUC6W2\\Parri et al. - 2021 - A framework for Model-Driven Engineering of resili.pdf:application/pdf}
}

@article{ghanavati_memory_2020,
	title = {Memory and resource leak defects and their repairs in Java projects},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-019-09731-8},
	doi = {10.1007/s10664-019-09731-8},
	pages = {678--718},
	number = {1},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Ghanavati, Mohammadreza and Costa, Diego and Seboek, Janos and Lo, David and Andrzejak, Artur},
	urldate = {2021-07-04},
	date = {2020-01},
	langid = {english},
	keywords = {xno},
	file = {Submitted Version:C\:\\Users\\michalm\\Zotero\\storage\\VUZMRZT9\\Ghanavati et al. - 2020 - Memory and resource leak defects and their repairs.pdf:application/pdf}
}

@article{dahiyat_law_2021,
	title = {Law and software agents: Are they “Agents” by the way?},
	volume = {29},
	issn = {0924-8463, 1572-8382},
	url = {http://link.springer.com/10.1007/s10506-020-09265-1},
	doi = {10.1007/s10506-020-09265-1},
	shorttitle = {Law and software agents},
	pages = {59--86},
	number = {1},
	journaltitle = {Artificial Intelligence and Law},
	shortjournal = {Artif Intell Law},
	author = {Dahiyat, Emad Abdel Rahim},
	urldate = {2021-07-04},
	date = {2021-03},
	langid = {english},
	keywords = {xno}
}

@article{nath_role_2021,
	title = {Role of artificial intelligence in rotor fault diagnosis: a comprehensive review},
	volume = {54},
	issn = {0269-2821, 1573-7462},
	url = {http://link.springer.com/10.1007/s10462-020-09910-w},
	doi = {10.1007/s10462-020-09910-w},
	shorttitle = {Role of artificial intelligence in rotor fault diagnosis},
	pages = {2609--2668},
	number = {4},
	journaltitle = {Artificial Intelligence Review},
	shortjournal = {Artif Intell Rev},
	author = {Nath, Aneesh G. and Udmale, Sandeep S. and Singh, Sanjay Kumar},
	urldate = {2021-07-04},
	date = {2021-04},
	langid = {english},
	keywords = {xno}
}

@article{renga_data-driven_2020,
	title = {Data-driven exploratory models of an electric distribution network for fault prediction and diagnosis},
	volume = {102},
	issn = {0010-485X, 1436-5057},
	url = {http://link.springer.com/10.1007/s00607-019-00781-w},
	doi = {10.1007/s00607-019-00781-w},
	pages = {1199--1211},
	number = {5},
	journaltitle = {Computing},
	shortjournal = {Computing},
	author = {Renga, Daniela and Apiletti, Daniele and Giordano, Danilo and Nisi, Matteo and Huang, Tao and Zhang, Yang and Mellia, Marco and Baralis, Elena},
	urldate = {2021-07-04},
	date = {2020-05},
	langid = {english},
	keywords = {xno}
}

@article{fisher_towards_2021,
	title = {Towards a framework for certification of reliable autonomous systems},
	volume = {35},
	issn = {1387-2532, 1573-7454},
	url = {https://link.springer.com/10.1007/s10458-020-09487-2},
	doi = {10.1007/s10458-020-09487-2},
	abstract = {Abstract
            
              A computational system is called
              autonomous
              if it is able to make its own decisions, or take its own actions, without human supervision or control. The capability and spread of such systems have reached the point where they are beginning to touch much of everyday life. However, regulators grapple with how to deal with autonomous systems, for example how could we certify an Unmanned Aerial System for autonomous use in civilian airspace? We here analyse what is needed in order to provide verified reliable behaviour of an autonomous system, analyse what can be done as the state-of-the-art in automated verification, and propose a roadmap towards developing regulatory guidelines, including articulating challenges to researchers, to engineers, and to regulators. Case studies in seven distinct domains illustrate the article.},
	pages = {8},
	number = {1},
	journaltitle = {Autonomous Agents and Multi-Agent Systems},
	shortjournal = {Auton Agent Multi-Agent Syst},
	author = {Fisher, Michael and Mascardi, Viviana and Rozier, Kristin Yvonne and Schlingloff, Bernd-Holger and Winikoff, Michael and Yorke-Smith, Neil},
	urldate = {2021-07-04},
	date = {2021-04},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\7CE9WPCK\\Fisher et al. - 2021 - Towards a framework for certification of reliable .pdf:application/pdf}
}

@article{bhushan_classification_2020,
	title = {A classification and systematic review of product line feature model defects},
	volume = {28},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-020-09522-1},
	doi = {10.1007/s11219-020-09522-1},
	pages = {1507--1550},
	number = {4},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Bhushan, Megha and Negi, Arun and Samant, Piyush and Goel, Shivani and Kumar, Ajay},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {literature review, xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\U6C6MAVX\\Bhushan et al. - 2020 - A classification and systematic review of product .pdf:application/pdf}
}

@article{shrikanth_assessing_2021,
	title = {Assessing practitioner beliefs about software engineering},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-09957-5},
	doi = {10.1007/s10664-021-09957-5},
	pages = {73},
	number = {4},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Shrikanth, N. C. and Nichols, William and Fahid, Fahmid Morshed and Menzies, Tim},
	urldate = {2021-07-04},
	date = {2021-07},
	langid = {english},
	keywords = {xno},
	file = {Submitted Version:C\:\\Users\\michalm\\Zotero\\storage\\WSTM4WHI\\Shrikanth et al. - 2021 - Assessing practitioner beliefs about software engi.pdf:application/pdf}
}

@article{ferenc_public_2020,
	title = {A public unified bug dataset for java and its assessment regarding metrics and bug prediction},
	volume = {28},
	issn = {0963-9314, 1573-1367},
	url = {https://link.springer.com/10.1007/s11219-020-09515-0},
	doi = {10.1007/s11219-020-09515-0},
	abstract = {Abstract
            Bug datasets have been created and used by many researchers to build and validate novel bug prediction models. In this work, our aim is to collect existing public source code metric-based bug datasets and unify their contents. Furthermore, we wish to assess the plethora of collected metrics and the capabilities of the unified bug dataset in bug prediction. We considered 5 public datasets and we downloaded the corresponding source code for each system in the datasets and performed source code analysis to obtain a common set of source code metrics. This way, we produced a unified bug dataset at class and file level as well. We investigated the diversion of metric definitions and values of the different bug datasets. Finally, we used a decision tree algorithm to show the capabilities of the dataset in bug prediction. We found that there are statistically significant differences in the values of the original and the newly calculated metrics; furthermore, notations and definitions can severely differ. We compared the bug prediction capabilities of the original and the extended metric suites (within-project learning). Afterwards, we merged all classes (and files) into one large dataset which consists of 47,618 elements (43,744 for files) and we evaluated the bug prediction model build on this large dataset as well. Finally, we also investigated cross-project capabilities of the bug prediction models and datasets. We made the unified dataset publicly available for everyone. By using a public unified dataset as an input for different bug prediction related investigations, researchers can make their studies reproducible, thus able to be validated and verified.},
	pages = {1447--1506},
	number = {4},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Ferenc, Rudolf and Tóth, Zoltán and Ladányi, Gergely and Siket, István and Gyimóthy, Tibor},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno, xdataset},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\KDK37YQH\\Ferenc et al. - 2020 - A public unified bug dataset for java and its asse.pdf:application/pdf}
}

@article{tsoukalas_clustering_2021,
	title = {A Clustering Approach Towards Cross-Project Technical Debt Forecasting},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-020-00408-4},
	doi = {10.1007/s42979-020-00408-4},
	pages = {22},
	number = {1},
	journaltitle = {{SN} Computer Science},
	shortjournal = {{SN} {COMPUT}. {SCI}.},
	author = {Tsoukalas, Dimitrios and Mathioudaki, Maria and Siavvas, Miltiadis and Kehagias, Dionysios and Chatzigeorgiou, Alexander},
	urldate = {2021-07-04},
	date = {2021-02},
	langid = {english},
	keywords = {cross-project, xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\695FJGXI\\Tsoukalas et al. - 2021 - A Clustering Approach Towards Cross-Project Techni.pdf:application/pdf}
}

@article{dadeau_testing_2020,
	title = {Testing adaptation policies for software components},
	volume = {28},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-019-09487-w},
	doi = {10.1007/s11219-019-09487-w},
	pages = {1347--1378},
	number = {3},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Dadeau, Frédéric and Gros, Jean-Philippe and Kouchnarenko, Olga},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xno},
	file = {Submitted Version:C\:\\Users\\michalm\\Zotero\\storage\\N284SV6E\\Dadeau et al. - 2020 - Testing adaptation policies for software component.pdf:application/pdf}
}

@article{herbold_feasibility_2020,
	title = {On the feasibility of automated prediction of bug and non-bug issues},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09885-w},
	doi = {10.1007/s10664-020-09885-w},
	abstract = {Abstract
            
              Context
              Issue tracking systems are used to track and describe tasks in the development process, e.g., requested feature improvements or reported bugs. However, past research has shown that the reported issue types often do not match the description of the issue.
            
            
              Objective
              We want to understand the overall maturity of the state of the art of issue type prediction with the goal to predict if issues are bugs and evaluate if we can improve existing models by incorporating manually specified knowledge about issues.
            
            
              Method
              We train different models for the title and description of the issue to account for the difference in structure between these fields, e.g., the length. Moreover, we manually detect issues whose description contains a null pointer exception, as these are strong indicators that issues are bugs.
            
            
              Results
              Our approach performs best overall, but not significantly different from an approach from the literature based on the {fastText} classifier from Facebook {AI} Research. The small improvements in prediction performance are due to structural information about the issues we used. We found that using information about the content of issues in form of null pointer exceptions is not useful. We demonstrate the usefulness of issue type prediction through the example of labelling bugfixing commits.
            
            
              Conclusions
              Issue type prediction can be a useful tool if the use case allows either for a certain amount of missed bug reports or the prediction of too many issues as bug is acceptable.},
	pages = {5333--5369},
	number = {6},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Herbold, Steffen and Trautsch, Alexander and Trautsch, Fabian},
	urldate = {2021-07-04},
	date = {2020-11},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\LAFRRMYZ\\Herbold et al. - 2020 - On the feasibility of automated prediction of bug .pdf:application/pdf}
}

@article{teh_sensor_2020,
	title = {Sensor data quality: a systematic review},
	volume = {7},
	issn = {2196-1115},
	url = {https://journalofbigdata.springeropen.com/articles/10.1186/s40537-020-0285-1},
	doi = {10.1186/s40537-020-0285-1},
	shorttitle = {Sensor data quality},
	abstract = {Abstract
            Sensor data quality plays a vital role in Internet of Things ({IoT}) applications as they are rendered useless if the data quality is bad. This systematic review aims to provide an introduction and guide for researchers who are interested in quality-related issues of physical sensor data. The process and results of the systematic review are presented which aims to answer the following research questions: what are the different types of physical sensor data errors, how to quantify or detect those errors, how to correct them and what domains are the solutions in. Out of 6970 literatures obtained from three databases ({ACM} Digital Library, {IEEE} Xplore and {ScienceDirect}) using the search string refined via topic modelling, 57 publications were selected and examined. Results show that the different types of sensor data errors addressed by those papers are mostly missing data and faults e.g. outliers, bias and drift. The most common solutions for error detection are based on principal component analysis ({PCA}) and artificial neural network ({ANN}) which accounts for about 40\% of all error detection papers found in the study. Similarly, for fault correction, {PCA} and {ANN} are among the most common, along with Bayesian Networks. Missing values on the other hand, are mostly imputed using Association Rule Mining. Other techniques include hybrid solutions that combine several data science methods to detect and correct the errors. Through this systematic review, it is found that the methods proposed to solve physical sensor data errors cannot be directly compared due to the non-uniform evaluation process and the high use of non-publicly available datasets. Bayesian data analysis done on the 57 selected publications also suggests that publications using publicly available datasets for method evaluation have higher citation rates.},
	pages = {11},
	number = {1},
	journaltitle = {Journal of Big Data},
	shortjournal = {J Big Data},
	author = {Teh, Hui Yie and Kempa-Liehr, Andreas W. and Wang, Kevin I-Kai},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\CI3WFDRA\\Teh et al. - 2020 - Sensor data quality a systematic review.pdf:application/pdf}
}

@article{althar_realist_2021,
	title = {The realist approach for evaluation of computational intelligence in software engineering},
	volume = {17},
	issn = {1614-5046, 1614-5054},
	url = {http://link.springer.com/10.1007/s11334-020-00383-2},
	doi = {10.1007/s11334-020-00383-2},
	pages = {17--27},
	number = {1},
	journaltitle = {Innovations in Systems and Software Engineering},
	shortjournal = {Innovations Syst Softw Eng},
	author = {Althar, Raghavendra Rao and Samanta, Debabrata},
	urldate = {2021-07-04},
	date = {2021-03},
	langid = {english},
	keywords = {xno}
}

@article{richter_algorithm_2020,
	title = {Algorithm selection for software validation based on graph kernels},
	volume = {27},
	issn = {0928-8910, 1573-7535},
	url = {https://link.springer.com/10.1007/s10515-020-00270-x},
	doi = {10.1007/s10515-020-00270-x},
	abstract = {Abstract
            
              Algorithm selection is the task of choosing an algorithm from a given set of candidate algorithms when faced with a particular problem instance. Algorithm selection via machine learning ({ML}) has recently been successfully applied for various problem classes, including computationally hard problems such as {SAT}. In this paper, we study algorithm selection for
              software validation
              , i.e., the task of choosing a software validation tool for a given validation instance. A validation instance consists of a program plus properties to be checked on it. The application of machine learning techniques to this task first of all requires an appropriate
              representation
              of software. To this end,
we propose a dedicated
              kernel function
              , which compares two programs in terms of their similarity, thus making the algorithm selection task amenable to kernel-based machine learning methods. Our kernel operates on a graph representation of source code mixing elements of control-flow and program-dependence graphs with abstract syntax trees.
Thus, given two such representations as input, the kernel function yields a real-valued score that can be interpreted as a degree of similarity. We experimentally evaluate our kernel in two learning scenarios, namely a classification and a ranking problem: (1) selecting between a verification and a testing tool for bug finding (i.e., property violation), and (2) ranking several verification tools,
from presumably best to worst, for property proving. The evaluation, which is based on data sets from the annual software verification competition {SV}-{COMP}, demonstrates our kernel to generalize well and to achieve rather high prediction accuracy, both for the classification and the ranking task.},
	pages = {153--186},
	number = {1},
	journaltitle = {Automated Software Engineering},
	shortjournal = {Autom Softw Eng},
	author = {Richter, Cedric and Hüllermeier, Eyke and Jakobs, Marie-Christine and Wehrheim, Heike},
	urldate = {2021-07-04},
	date = {2020-06},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\AWW2LYUI\\Richter et al. - 2020 - Algorithm selection for software validation based .pdf:application/pdf}
}

@article{agrawal_better_2020,
	title = {Better software analytics via “{DUO}”: Data mining algorithms using/used-by optimizers},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-020-09808-9},
	doi = {10.1007/s10664-020-09808-9},
	shorttitle = {Better software analytics via “{DUO}”},
	pages = {2099--2136},
	number = {3},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Agrawal, Amritanshu and Menzies, Tim and Minku, Leandro L. and Wagner, Markus and Yu, Zhe},
	urldate = {2021-07-04},
	date = {2020-05},
	langid = {english},
	keywords = {xno},
	file = {Accepted Version:C\:\\Users\\michalm\\Zotero\\storage\\CTMFBP4Y\\Agrawal et al. - 2020 - Better software analytics via “DUO” Data mining a.pdf:application/pdf}
}

@article{nabi_security_2021,
	title = {Security aspects in modern service component-oriented application logic for social e-commerce systems},
	volume = {11},
	issn = {1869-5450, 1869-5469},
	url = {http://link.springer.com/10.1007/s13278-020-00717-9},
	doi = {10.1007/s13278-020-00717-9},
	pages = {22},
	number = {1},
	journaltitle = {Social Network Analysis and Mining},
	shortjournal = {Soc. Netw. Anal. Min.},
	author = {Nabi, Faisal and Tao, Xiaohui and Yong, Jianming},
	urldate = {2021-07-04},
	date = {2021-12},
	langid = {english},
	keywords = {xno}
}

@article{ginny_smartphone_2021,
	title = {Smartphone processor architecture, operations, and functions: current state-of-the-art and future outlook: energy performance trade-off: Energy–performance trade-off for smartphone processors},
	volume = {77},
	issn = {0920-8542, 1573-0484},
	url = {https://link.springer.com/10.1007/s11227-020-03312-z},
	doi = {10.1007/s11227-020-03312-z},
	shorttitle = {Smartphone processor architecture, operations, and functions},
	pages = {1377--1454},
	number = {2},
	journaltitle = {The Journal of Supercomputing},
	shortjournal = {J Supercomput},
	author = {{Ginny} and Kumar, Chiranjeev and Naik, Kshirasagar},
	urldate = {2021-07-04},
	date = {2021-02},
	langid = {english},
	keywords = {xno}
}

@article{avci_software_2020,
	title = {Software architectures for big data: a systematic literature review},
	volume = {5},
	issn = {2058-6345},
	url = {https://bdataanalytics.biomedcentral.com/articles/10.1186/s41044-020-00045-1},
	doi = {10.1186/s41044-020-00045-1},
	shorttitle = {Software architectures for big data},
	pages = {5},
	number = {1},
	journaltitle = {Big Data Analytics},
	shortjournal = {Big Data Anal},
	author = {Avci, Cigdem and Tekinerdogan, Bedir and Athanasiadis, Ioannis N.},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\MRW79DS6\\Avci et al. - 2020 - Software architectures for big data a systematic .pdf:application/pdf}
}

@article{catolino_improving_2020,
	title = {Improving change prediction models with code smell-related information},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-019-09739-0},
	doi = {10.1007/s10664-019-09739-0},
	pages = {49--95},
	number = {1},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Catolino, Gemma and Palomba, Fabio and Fontana, Francesca Arcelli and De Lucia, Andrea and Zaidman, Andy and Ferrucci, Filomena},
	urldate = {2021-07-04},
	date = {2020-01},
	langid = {english},
	keywords = {xno},
	file = {Submitted Version:C\:\\Users\\michalm\\Zotero\\storage\\RCD4CVG2\\Catolino et al. - 2020 - Improving change prediction models with code smell.pdf:application/pdf}
}

@article{deng_high-speed_2020,
	title = {A high-speed D-{CART} online fault diagnosis algorithm for rotor systems},
	volume = {50},
	issn = {0924-669X, 1573-7497},
	url = {http://link.springer.com/10.1007/s10489-019-01516-2},
	doi = {10.1007/s10489-019-01516-2},
	pages = {29--41},
	number = {1},
	journaltitle = {Applied Intelligence},
	shortjournal = {Appl Intell},
	author = {Deng, Huaxia and Diao, Yifan and Wu, Wei and Zhang, Jin and Ma, Mengchao and Zhong, Xiang},
	urldate = {2021-07-04},
	date = {2020-01},
	langid = {english},
	keywords = {xno}
}

@article{hajri_automating_2020,
	title = {Automating system test case classification and prioritization for use case-driven testing in product lines},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09853-4},
	doi = {10.1007/s10664-020-09853-4},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Hajri, Ines and Goknil, Arda and Pastore, Fabrizio and Briand, Lionel C.},
	urldate = {2021-07-04},
	date = {2020-08-18},
	langid = {english},
	keywords = {xno},
	file = {Accepted Version:C\:\\Users\\michalm\\Zotero\\storage\\WV82YBZB\\Hajri et al. - 2020 - Automating system test case classification and pri.pdf:application/pdf}
}

@article{lima_assessing_2021,
	title = {Assessing exception handling testing practices in open-source libraries},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-09983-3},
	doi = {10.1007/s10664-021-09983-3},
	pages = {85},
	number = {5},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Lima, Luan P. and Rocha, Lincoln S. and Bezerra, Carla I. M. and Paixao, Matheus},
	urldate = {2021-07-04},
	date = {2021-09},
	langid = {english},
	keywords = {xno},
	file = {Submitted Version:C\:\\Users\\michalm\\Zotero\\storage\\3QGQIA2D\\Lima et al. - 2021 - Assessing exception handling testing practices in .pdf:application/pdf}
}

@article{moreno_application_2020,
	title = {Application of machine learning techniques to the flexible assessment and improvement of requirements quality},
	volume = {28},
	issn = {0963-9314, 1573-1367},
	url = {https://link.springer.com/10.1007/s11219-020-09511-4},
	doi = {10.1007/s11219-020-09511-4},
	pages = {1645--1674},
	number = {4},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Moreno, Valentín and Génova, Gonzalo and Parra, Eugenio and Fraga, Anabel},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno}
}

@article{jafarian_survey_2021,
	title = {A survey and classification of the security anomaly detection mechanisms in software defined networks},
	volume = {24},
	issn = {1386-7857, 1573-7543},
	url = {https://link.springer.com/10.1007/s10586-020-03184-1},
	doi = {10.1007/s10586-020-03184-1},
	pages = {1235--1253},
	number = {2},
	journaltitle = {Cluster Computing},
	shortjournal = {Cluster Comput},
	author = {Jafarian, Tohid and Masdari, Mohammad and Ghaffari, Ali and Majidzadeh, Kambiz},
	urldate = {2021-07-04},
	date = {2021-06},
	langid = {english},
	keywords = {xno}
}

@article{sahin_prediction_2021,
	title = {Prediction of software vulnerability based deep symbiotic genetic algorithms: Phenotyping of dominant-features},
	issn = {0924-669X, 1573-7497},
	url = {http://link.springer.com/10.1007/s10489-021-02324-3},
	doi = {10.1007/s10489-021-02324-3},
	shorttitle = {Prediction of software vulnerability based deep symbiotic genetic algorithms},
	journaltitle = {Applied Intelligence},
	shortjournal = {Appl Intell},
	author = {Şahin, Canan Batur and Dinler, Özlem Batur and Abualigah, Laith},
	urldate = {2021-07-04},
	date = {2021-03-31},
	langid = {english},
	keywords = {xno}
}

@article{roman_test-driven_2021,
	title = {Test-driven development with mutation testing – an experimental study},
	volume = {29},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-020-09534-x},
	doi = {10.1007/s11219-020-09534-x},
	abstract = {Abstract
            Test-driven development ({TDD}) is a popular design approach used by the developers with testing being the important software development driving factor. On the other hand, mutation testing is considered one of the most effective testing techniques. However, there is not so much research on combining these two techniques together. In this paper, we propose a novel, hybrid approach called {TDD}+M which combines test-driven development process together with the mutation approach. The aim was to check whether this modified approach allows the developers to write a better quality code. We verify our approach by conducting a controlled experiment and we show that it achieves better results than the sole {TDD} technique. The experiment involved 22 computer science students split into eight groups. Four groups ({TDD}+M) were using our approach, the other four ({TDD}) – a normal {TDD} process. We performed a cross-experiment by measuring the code coverage and mutation coverage for each combination (code of group X, tests from group Y). The {TDD}+M tests achieved better coverage on the code from {TDD} groups than the {TDD} tests on their own code (53.3\% vs. 33.5\% statement coverage and 64.9\% vs. 37.5\% mutation coverage). The {TDD}+M tests also found more post-release defects in the {TDD} code than {TDD} tests in the {TDD}+M code. The experiment showed that adding mutation into the {TDD} process allows the developers to provide better, stronger tests and to write a better quality code.},
	pages = {1--38},
	number = {1},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Roman, Adam and Mnich, Michal},
	urldate = {2021-07-04},
	date = {2021-03},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\LE6WPZMT\\Roman and Mnich - 2021 - Test-driven development with mutation testing – an.pdf:application/pdf}
}

@article{brito_integration_2020,
	title = {Integration testing for robotic systems},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-020-09535-w},
	doi = {10.1007/s11219-020-09535-w},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Brito, Maria A. S. and Souza, Simone R. S. and Souza, Paulo S. L.},
	urldate = {2021-07-04},
	date = {2020-11-18},
	langid = {english},
	keywords = {xno}
}

@article{ping_load_2020,
	title = {Load Balancing Algorithms for Big Data Flow Classification Based on Heterogeneous Computing in Software Definition Networks},
	volume = {18},
	issn = {1570-7873, 1572-9184},
	url = {http://link.springer.com/10.1007/s10723-020-09511-5},
	doi = {10.1007/s10723-020-09511-5},
	pages = {275--291},
	number = {2},
	journaltitle = {Journal of Grid Computing},
	shortjournal = {J Grid Computing},
	author = {Ping, Yang},
	urldate = {2021-07-04},
	date = {2020-06},
	langid = {english},
	keywords = {xno}
}

@article{schwartz_fault_2020,
	title = {A fault mode identification methodology based on self-organizing map},
	volume = {32},
	issn = {0941-0643, 1433-3058},
	url = {http://link.springer.com/10.1007/s00521-019-04692-x},
	doi = {10.1007/s00521-019-04692-x},
	pages = {13405--13423},
	number = {17},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Schwartz, Sébastien and Montero Jimenez, Juan José and Salaün, Michel and Vingerhoeds, Rob},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\LCSH8QUT\\Schwartz et al. - 2020 - A fault mode identification methodology based on s.pdf:application/pdf}
}

@article{wu_invalid_2020,
	title = {Invalid bug reports complicate the software aging situation},
	volume = {28},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-019-09481-2},
	doi = {10.1007/s11219-019-09481-2},
	pages = {195--220},
	number = {1},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Wu, Xiaoxue and Zheng, Wei and Pu, Minchao and Chen, Jie and Mu, Dejun},
	urldate = {2021-07-04},
	date = {2020-03},
	langid = {english},
	keywords = {xno}
}

@article{rhmann_software_2021,
	title = {Software effort estimation using ensemble of hybrid search-based algorithms based on metaheuristic algorithms},
	issn = {1614-5046, 1614-5054},
	url = {http://link.springer.com/10.1007/s11334-020-00377-0},
	doi = {10.1007/s11334-020-00377-0},
	journaltitle = {Innovations in Systems and Software Engineering},
	shortjournal = {Innovations Syst Softw Eng},
	author = {Rhmann, Wasiur and Pandey, Babita and Ansari, Gufran Ahmad},
	urldate = {2021-07-04},
	date = {2021-02-10},
	langid = {english},
	keywords = {xno}
}

@article{chapetta_towards_2020,
	title = {Towards an evidence-based theoretical framework on factors influencing the software development productivity},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09844-5},
	doi = {10.1007/s10664-020-09844-5},
	pages = {3501--3543},
	number = {5},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Chapetta, Wladmir Araujo and Travassos, Guilherme Horta},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xno}
}

@article{gupta_mapping_2021,
	title = {Mapping techniques in multicore processors: current and future trends},
	issn = {0920-8542, 1573-0484},
	url = {http://link.springer.com/10.1007/s11227-021-03650-6},
	doi = {10.1007/s11227-021-03650-6},
	shorttitle = {Mapping techniques in multicore processors},
	journaltitle = {The Journal of Supercomputing},
	shortjournal = {J Supercomput},
	author = {Gupta, Manjari and Bhargava, Lava and Indu, S.},
	urldate = {2021-07-04},
	date = {2021-02-05},
	langid = {english},
	keywords = {xno}
}

@article{hassanien_machine_2020,
	title = {Machine learning in telemetry data mining of space mission: basics, challenging and future directions},
	volume = {53},
	issn = {0269-2821, 1573-7462},
	url = {http://link.springer.com/10.1007/s10462-019-09760-1},
	doi = {10.1007/s10462-019-09760-1},
	shorttitle = {Machine learning in telemetry data mining of space mission},
	pages = {3201--3230},
	number = {5},
	journaltitle = {Artificial Intelligence Review},
	shortjournal = {Artif Intell Rev},
	author = {Hassanien, Aboul Ella and Darwish, Ashraf and Abdelghafar, Sara},
	urldate = {2021-07-04},
	date = {2020-06},
	langid = {english},
	keywords = {xno}
}

@article{zhao_evaluation_2021,
	title = {Evaluation indicators for open-source software: a review},
	volume = {4},
	issn = {2523-3246},
	url = {https://cybersecurity.springeropen.com/articles/10.1186/s42400-021-00084-8},
	doi = {10.1186/s42400-021-00084-8},
	shorttitle = {Evaluation indicators for open-source software},
	abstract = {Abstract
            In recent years, the widespread applications of open-source software ({OSS}) have brought great convenience for software developers. However, it is always facing unavoidable security risks, such as open-source code defects and security vulnerabilities. To find out the {OSS} risks in time, we carry out an empirical study to identify the indicators for evaluating the {OSS}. To achieve a comprehensive understanding of the {OSS} assessment, we collect 56 papers from prestigious academic venues (such as {IEEE} Xplore, {ACM} Digital Library, {DBLP}, and Google Scholar) in the past 21 years. During the process of the investigation, we first identify the main concerns for selecting {OSS} and distill five types of commonly used indicators to assess {OSS}. We then conduct a comparative analysis to discuss how these indicators are used in each surveyed study and their differences. Moreover, we further undertake a correlation analysis between these indicators and uncover 13 confirmed conclusions and four cases with controversy occurring in these studies. Finally, we discuss several possible applications of these conclusions, which are insightful for the research on {OSS} and software supply chain.},
	pages = {20},
	number = {1},
	journaltitle = {Cybersecurity},
	shortjournal = {Cybersecur},
	author = {Zhao, Yuhang and Liang, Ruigang and Chen, Xiang and Zou, Jing},
	urldate = {2021-07-04},
	date = {2021-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\JHP86JRL\\Zhao et al. - 2021 - Evaluation indicators for open-source software a .pdf:application/pdf}
}

@article{razzaq_systematic_2020,
	title = {A Systematic Review on Software Architectures for {IoT} Systems and Future Direction to the Adoption of Microservices Architecture},
	volume = {1},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-020-00359-w},
	doi = {10.1007/s42979-020-00359-w},
	pages = {350},
	number = {6},
	journaltitle = {{SN} Computer Science},
	shortjournal = {{SN} {COMPUT}. {SCI}.},
	author = {Razzaq, Abdul},
	urldate = {2021-07-04},
	date = {2020-11},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\EH4RDVNV\\Razzaq - 2020 - A Systematic Review on Software Architectures for .pdf:application/pdf}
}

@article{lahami_survey_2021,
	title = {A survey on runtime testing of dynamically adaptable and distributed systems},
	volume = {29},
	issn = {0963-9314, 1573-1367},
	url = {https://link.springer.com/10.1007/s11219-021-09558-x},
	doi = {10.1007/s11219-021-09558-x},
	pages = {555--593},
	number = {2},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Lahami, Mariam and Krichen, Moez},
	urldate = {2021-07-04},
	date = {2021-06},
	langid = {english},
	keywords = {xno}
}

@article{honsel_investigation_2021,
	title = {Investigation and prediction of open source software evolution using automated parameter mining for agent-based simulation},
	volume = {28},
	issn = {0928-8910, 1573-7535},
	url = {https://link.springer.com/10.1007/s10515-021-00280-3},
	doi = {10.1007/s10515-021-00280-3},
	abstract = {Abstract
            To guide software development, the estimation of the impact of decision making on the development process can be helpful in planning. For this estimation, often prediction models are used which can be learned from project data. In this paper, an approach for the usage of agent-based simulation for the prediction of software evolution trends is presented. The specialty of the proposed approach lies in the automated parameter estimation for the instantiation of project-specific simulation models. We want to assess how well a baseline model using average (commit) behavior of the agents (i.e., the developers) performs compared to models where different amount of project-specific data is fed into the simulation model. The approach involves the interplay between the mining framework and simulation framework. Parameters to be estimated include, e.g., file change probabilities of developers and the team constellation reflecting different developer roles. The structural evolution of software projects is observed using change coupling graphs based on common file changes. For the validation of simulation results, we compare empirical with simulated results. Our results showed that an average simulation model can mimic general project growth trends like the number of commits and files well and thus, can help project managers in, e.g., controlling the onboarding of developers. Besides, the simulated co-change evolution could be improved significantly using project-specific data.},
	pages = {3},
	number = {1},
	journaltitle = {Automated Software Engineering},
	shortjournal = {Autom Softw Eng},
	author = {Honsel, Daniel and Herbold, Verena and Waack, Stephan and Grabowski, Jens},
	urldate = {2021-07-04},
	date = {2021-05},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\ZG6T2ZKJ\\Honsel et al. - 2021 - Investigation and prediction of open source softwa.pdf:application/pdf}
}

@article{beheshti_bfpf-cloud_2020,
	title = {{BFPF}-Cloud: Applying {SVM} for Byzantine Failure Prediction to Increase Availability and Failure Tolerance in Cloud Computing},
	volume = {1},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-020-00299-5},
	doi = {10.1007/s42979-020-00299-5},
	shorttitle = {{BFPF}-Cloud},
	pages = {276},
	number = {5},
	journaltitle = {{SN} Computer Science},
	shortjournal = {{SN} {COMPUT}. {SCI}.},
	author = {Beheshti, Mahnaz Koorang and Safi-Esfahani, Faramarz},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\WFYGNP9K\\Beheshti and Safi-Esfahani - 2020 - BFPF-Cloud Applying SVM for Byzantine Failure Pre.pdf:application/pdf}
}

@article{karhapaa_strategies_2021,
	title = {Strategies to manage quality requirements in agile software development: a multiple case study},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09903-x},
	doi = {10.1007/s10664-020-09903-x},
	shorttitle = {Strategies to manage quality requirements in agile software development},
	abstract = {Abstract
            Agile methods can deliver software that fulfills customer needs rapidly and continuously. Quality requirements ({QRs}) are important in this regard; however, detailed studies on how companies applying agile methods to manage {QRs} are limited, as are studies on the rationale for choosing specific {QR} management practices and related challenges. The aim of this study was to address why practitioners manage {QRs} as they do and what challenges they face. We also analyzed how existing practices mitigate some of the found challenges. Lastly, we connect the contextual elements of the companies with their practices and challenges. We conducted 36 interviews with practitioners from four companies of varying sizes. Since each company operates in different domains, comparing {QR} management strategies and related challenges in different contexts was possible. We found that the companies apply proactive, reactive, and interactive strategies to manage {QRs}. Additionally, our study revealed 40 challenges in six categories that companies applying agile methods may face in {QR} management. We also identified nine contextual elements that affect {QR} management practice choices and which, importantly, can explain many related challenges. Based on these findings, we constructed a theoretical model about the connection between context, {QR} management practices, and challenges. Practitioners in similar contexts can learn from the practices identified in this study. Our preliminary theoretical model can help other practitioners identify what challenges they can expect to face in {QR} management in different developmental contexts as well as which practices to apply to mitigate these challenges.},
	pages = {28},
	number = {2},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Karhapää, Pertti and Behutiye, Woubshet and Rodríguez, Pilar and Oivo, Markku and Costal, Dolors and Franch, Xavier and Aaramaa, Sanja and Choraś, Michał and Partanen, Jari and Abherve, Antonin},
	urldate = {2021-07-04},
	date = {2021-03},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\5ER7H7WE\\Karhapää et al. - 2021 - Strategies to manage quality requirements in agile.pdf:application/pdf}
}

@article{cunha_building_2020,
	title = {Building Autonomic Elements from Video-Streaming Servers},
	volume = {28},
	issn = {1064-7570, 1573-7705},
	url = {http://link.springer.com/10.1007/s10922-019-09503-1},
	doi = {10.1007/s10922-019-09503-1},
	pages = {160--192},
	number = {1},
	journaltitle = {Journal of Network and Systems Management},
	shortjournal = {J Netw Syst Manage},
	author = {Cunha, Carlos},
	urldate = {2021-07-04},
	date = {2020-01},
	langid = {english},
	keywords = {xno}
}

@article{becue_artificial_2021,
	title = {Artificial intelligence, cyber-threats and Industry 4.0: challenges and opportunities},
	volume = {54},
	issn = {0269-2821, 1573-7462},
	url = {https://link.springer.com/10.1007/s10462-020-09942-2},
	doi = {10.1007/s10462-020-09942-2},
	shorttitle = {Artificial intelligence, cyber-threats and Industry 4.0},
	pages = {3849--3886},
	number = {5},
	journaltitle = {Artificial Intelligence Review},
	shortjournal = {Artif Intell Rev},
	author = {Bécue, Adrien and Praça, Isabel and Gama, João},
	urldate = {2021-07-04},
	date = {2021-06},
	langid = {english},
	keywords = {xno}
}

@article{yang_exploiting_2021,
	title = {Exploiting augmented intelligence in the modeling of safety-critical autonomous systems},
	issn = {0934-5043, 1433-299X},
	url = {https://link.springer.com/10.1007/s00165-021-00543-6},
	doi = {10.1007/s00165-021-00543-6},
	journaltitle = {Formal Aspects of Computing},
	shortjournal = {Form Asp Comp},
	author = {Yang, Zhibin and Bao, Yang and Yang, Yongqiang and Huang, Zhiqiu and Bodeveix, Jean-Paul and Filali, Mamoun and Gu, Zonghua},
	urldate = {2021-07-04},
	date = {2021-05-17},
	langid = {english},
	keywords = {xno}
}

@article{chou_cloud_2021,
	title = {Cloud evolutionary computation system for advanced engineering analytics},
	issn = {0177-0667, 1435-5663},
	url = {http://link.springer.com/10.1007/s00366-020-01249-8},
	doi = {10.1007/s00366-020-01249-8},
	journaltitle = {Engineering with Computers},
	shortjournal = {Engineering with Computers},
	author = {Chou, Jui-Sheng and Kosasih, Jeffisa Delaosia and Chong, Wai K.},
	urldate = {2021-07-04},
	date = {2021-03-02},
	langid = {english},
	keywords = {xno}
}

@article{tjortjis_mining_2020,
	title = {Mining Association Rules from Code ({MARC}) to support legacy software management},
	volume = {28},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-019-09480-3},
	doi = {10.1007/s11219-019-09480-3},
	pages = {633--662},
	number = {2},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Tjortjis, Christos},
	urldate = {2021-07-04},
	date = {2020-06},
	langid = {english},
	keywords = {xno}
}

@article{danciu_side-effects_2020,
	title = {Side-Effects Causing Hidden Conflicts in Software-Defined Networks},
	volume = {1},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-020-00282-0},
	doi = {10.1007/s42979-020-00282-0},
	abstract = {Abstract
            The Software-Defined Networking ({SDN}) architecture facilitates the flexible deployment of network functions by detaching them from network devices to a logically centralized point, the so-called {SDN} controller, and maintaining a common communication interface between them. While promoting innovation for each side, this architecture also induces a higher chance of conflicts between concurrent control applications compared to existing traditional networks. We have discovered a new type of anomalies that we call hidden conflicts. They appear to occur only due to side-effects of control application’s behaviour and to be independent of and distinct from the class of conflicts between rules present in the network devices. We analyse the {SDN} interaction primitives susceptible to such disruptions and present experiments supporting our analysis, the result of which indicates the necessity of the knowledge on the control mechanics in detecting hidden conflicts. We present a hidden conflict prediction approach that employs speculative provocation to determine the deployed applications’ behaviour. The observed behaviour can be leveraged to predict undesired network state. Evaluation of our prediction prototype suggests that prediction functions should be integrated into control applications.},
	pages = {278},
	number = {5},
	journaltitle = {{SN} Computer Science},
	shortjournal = {{SN} {COMPUT}. {SCI}.},
	author = {Danciu, Vitalian and Tran, Cuong Ngoc},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\ZIDJQ2ET\\Danciu and Tran - 2020 - Side-Effects Causing Hidden Conflicts in Software-.pdf:application/pdf}
}

@article{shao_anti-aging_2020,
	title = {Anti-aging analysis for software reliability design modes in the context of single-event effect},
	volume = {28},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-019-09464-3},
	doi = {10.1007/s11219-019-09464-3},
	pages = {221--243},
	number = {1},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Shao, Qi and Gou, Xiaodong and Huang, Tingting and Yang, Shunkun},
	urldate = {2021-07-04},
	date = {2020-03},
	langid = {english},
	keywords = {xno}
}

@article{safdar_using_2020,
	title = {Using multi-objective search and machine learning to infer rules constraining product configurations},
	volume = {27},
	issn = {0928-8910, 1573-7535},
	url = {http://link.springer.com/10.1007/s10515-019-00266-2},
	doi = {10.1007/s10515-019-00266-2},
	pages = {1--62},
	number = {1},
	journaltitle = {Automated Software Engineering},
	shortjournal = {Autom Softw Eng},
	author = {Safdar, Safdar Aqeel and Yue, Tao and Ali, Shaukat and Lu, Hong},
	urldate = {2021-07-04},
	date = {2020-06},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\DHF75BNP\\Safdar et al. - 2020 - Using multi-objective search and machine learning .pdf:application/pdf}
}

@article{karthikeyan_design_2020,
	title = {Design and implementation of {CfoTS} networks for industrial fault detection and correction mechanism},
	volume = {76},
	issn = {0920-8542, 1573-0484},
	url = {http://link.springer.com/10.1007/s11227-019-02993-5},
	doi = {10.1007/s11227-019-02993-5},
	pages = {5763--5779},
	number = {8},
	journaltitle = {The Journal of Supercomputing},
	shortjournal = {J Supercomput},
	author = {Karthikeyan, S. and Vimala Devi, K. and Valarmathi, K.},
	urldate = {2021-07-04},
	date = {2020-08},
	langid = {english},
	keywords = {xno}
}

@article{zhu_flood_2021,
	title = {Flood disaster risk assessment based on random forest algorithm},
	issn = {0941-0643, 1433-3058},
	url = {http://link.springer.com/10.1007/s00521-021-05757-6},
	doi = {10.1007/s00521-021-05757-6},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Zhu, Zijiang and Zhang, Yu},
	urldate = {2021-07-04},
	date = {2021-03-21},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\TXNF6TI5\\Zhu and Zhang - 2021 - Flood disaster risk assessment based on random for.pdf:application/pdf}
}

@article{li_guiding_2020,
	title = {Guiding log revisions by learning from software evolution history},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-019-09757-y},
	doi = {10.1007/s10664-019-09757-y},
	pages = {2302--2340},
	number = {3},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Li, Shanshan and Niu, Xu and Jia, Zhouyang and Liao, Xiangke and Wang, Ji and Li, Tao},
	urldate = {2021-07-04},
	date = {2020-05},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\GWYVA7A7\\Li et al. - 2020 - Guiding log revisions by learning from software ev.pdf:application/pdf}
}

@article{engstrom_how_2020,
	title = {How software engineering research aligns with design science: a review},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-020-09818-7},
	doi = {10.1007/s10664-020-09818-7},
	shorttitle = {How software engineering research aligns with design science},
	abstract = {Abstract
            
              Background
              Assessing and communicating software engineering research can be challenging. Design science is recognized as an appropriate research paradigm for applied research, but is rarely explicitly used as a way to present planned or achieved research contributions in software engineering. Applying the design science lens to software engineering research may improve the assessment and communication of research contributions.
            
            
              Aim
              The aim of this study is 1) to understand whether the design science lens helps summarize and assess software engineering research contributions, and 2) to characterize different types of design science contributions in the software engineering literature.
            
            
              Method
              In previous research, we developed a visual abstract template, summarizing the core constructs of the design science paradigm. In this study, we use this template in a review of a set of 38 award winning software engineering publications to extract, analyze and characterize their design science contributions.
            
            
              Results
              We identified five clusters of papers, classifying them according to their different types of design science contributions.
            
            
              Conclusions
              The design science lens helps emphasize the theoretical contribution of research output—in terms of technological rules—and reflect on the practical relevance, novelty and rigor of the rules proposed by the research.},
	pages = {2630--2660},
	number = {4},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Engström, Emelie and Storey, Margaret-Anne and Runeson, Per and Höst, Martin and Baldassarre, Maria Teresa},
	urldate = {2021-07-04},
	date = {2020-07},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\ZT5BF9N9\\Engström et al. - 2020 - How software engineering research aligns with desi.pdf:application/pdf}
}

@article{thakkar_survey_2021,
	title = {A survey on intrusion detection system: feature selection, model, performance measures, application perspective, challenges, and future research directions},
	issn = {0269-2821, 1573-7462},
	url = {https://link.springer.com/10.1007/s10462-021-10037-9},
	doi = {10.1007/s10462-021-10037-9},
	shorttitle = {A survey on intrusion detection system},
	journaltitle = {Artificial Intelligence Review},
	shortjournal = {Artif Intell Rev},
	author = {Thakkar, Ankit and Lohiya, Ritika},
	urldate = {2021-07-04},
	date = {2021-07-01},
	langid = {english},
	keywords = {xno}
}

@article{troya_uncertainty_2021,
	title = {Uncertainty representation in software models: a survey},
	issn = {1619-1366, 1619-1374},
	url = {http://link.springer.com/10.1007/s10270-020-00842-1},
	doi = {10.1007/s10270-020-00842-1},
	shorttitle = {Uncertainty representation in software models},
	journaltitle = {Software and Systems Modeling},
	shortjournal = {Softw Syst Model},
	author = {Troya, Javier and Moreno, Nathalie and Bertoa, Manuel F. and Vallecillo, Antonio},
	urldate = {2021-07-04},
	date = {2021-01-08},
	langid = {english},
	keywords = {xno}
}

@article{basu_legal_2020,
	title = {Legal framework for small autonomous agricultural robots},
	volume = {35},
	issn = {0951-5666, 1435-5655},
	url = {http://link.springer.com/10.1007/s00146-018-0846-4},
	doi = {10.1007/s00146-018-0846-4},
	pages = {113--134},
	number = {1},
	journaltitle = {{AI} \& {SOCIETY}},
	shortjournal = {{AI} \& Soc},
	author = {Basu, Subhajit and Omotubora, Adekemi and Beeson, Matt and Fox, Charles},
	urldate = {2021-07-04},
	date = {2020-03},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\TIHLVKPJ\\Basu et al. - 2020 - Legal framework for small autonomous agricultural .pdf:application/pdf}
}

@article{falcone_taxonomy_2021,
	title = {A taxonomy for classifying runtime verification tools},
	volume = {23},
	issn = {1433-2779, 1433-2787},
	url = {https://link.springer.com/10.1007/s10009-021-00609-z},
	doi = {10.1007/s10009-021-00609-z},
	pages = {255--284},
	number = {2},
	journaltitle = {International Journal on Software Tools for Technology Transfer},
	shortjournal = {Int J Softw Tools Technol Transfer},
	author = {Falcone, Yliès and Krstić, Srđan and Reger, Giles and Traytel, Dmitriy},
	urldate = {2021-07-04},
	date = {2021-04},
	langid = {english},
	keywords = {xno},
	file = {Submitted Version:C\:\\Users\\michalm\\Zotero\\storage\\LZL423LX\\Falcone et al. - 2021 - A taxonomy for classifying runtime verification to.pdf:application/pdf}
}

@article{othman_public_2021,
	title = {Public acceptance and perception of autonomous vehicles: a comprehensive review},
	issn = {2730-5953, 2730-5961},
	url = {http://link.springer.com/10.1007/s43681-021-00041-8},
	doi = {10.1007/s43681-021-00041-8},
	shorttitle = {Public acceptance and perception of autonomous vehicles},
	journaltitle = {{AI} and Ethics},
	shortjournal = {{AI} Ethics},
	author = {Othman, Kareem},
	urldate = {2021-07-04},
	date = {2021-02-26},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\TPLDT3HM\\Othman - 2021 - Public acceptance and perception of autonomous veh.pdf:application/pdf}
}

@article{bayati_chaleshtari_smbfl_2020,
	title = {{SMBFL}: slice-based cost reduction of mutation-based fault localization},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09845-4},
	doi = {10.1007/s10664-020-09845-4},
	shorttitle = {{SMBFL}},
	pages = {4282--4314},
	number = {5},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Bayati Chaleshtari, Nazanin and Parsa, Saeed},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xno}
}

@article{chen_systemic_2020,
	title = {A systemic framework for crowdsourced test report quality assessment},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-019-09793-8},
	doi = {10.1007/s10664-019-09793-8},
	pages = {1382--1418},
	number = {2},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Chen, Xin and Jiang, He and Li, Xiaochen and Nie, Liming and Yu, Dongjin and He, Tieke and Chen, Zhenyu},
	urldate = {2021-07-04},
	date = {2020-03},
	langid = {english},
	keywords = {xno}
}

@article{oyetoyan_improved_2021,
	title = {An improved text classification modelling approach to identify security messages in heterogeneous projects},
	volume = {29},
	issn = {0963-9314, 1573-1367},
	url = {https://link.springer.com/10.1007/s11219-020-09546-7},
	doi = {10.1007/s11219-020-09546-7},
	abstract = {Abstract
            Security remains under-addressed in many organisations, illustrated by the number of large-scale software security breaches. Preventing breaches can begin during software development if attention is paid to security during the software’s design and implementation. One approach to security assurance during software development is to examine communications between developers as a means of studying the security concerns of the project. Prior research has investigated models for classifying project communication messages (e.g., issues or commits) as security related or not. A known problem is that these models are project-specific, limiting their use by other projects or organisations. We investigate whether we can build a generic classification model that can generalise across projects. We define a set of security keywords by extracting them from relevant security sources, dividing them into four categories: asset, attack/threat, control/mitigation, and implicit. Using different combinations of these categories and including them in the training dataset, we built a classification model and evaluated it on industrial, open-source, and research-based datasets containing over 45 different products. Our model based on harvested security keywords as a feature set shows average recall from 55 to 86\%, minimum recall from 43 to 71\% and maximum recall from 60 to 100\%. An average f-score between 3.4 and 88\%, an average g-measure of at least 66\% across all the dataset, and an average {AUC} of {ROC} from 69 to 89\%. In addition, models that use externally sourced features outperformed models that use project-specific features on average by a margin of 26–44\% in recall, 22–50\% in g-measure, 0.4–28\% in f-score, and 15–19\% in {AUC} of {ROC}. Further, our results outperform a state-of-the-art prediction model for security bug reports in all cases. We find using sound statistical and effect size tests that (1) using harvested security keywords as features to train a text classification model improve classification models and generalise to other projects significantly. (2) Including features in the training dataset before model construction improve classification models significantly. (3) Different security categories represent predictors for different projects. Finally, we introduce new and promising approaches to construct models that can generalise across different independent projects.},
	pages = {509--553},
	number = {2},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Oyetoyan, Tosin Daniel and Morrison, Patrick},
	urldate = {2021-07-04},
	date = {2021-06},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\AKS8RH78\\Oyetoyan and Morrison - 2021 - An improved text classification modelling approach.pdf:application/pdf}
}

@article{bagherian-marandi_two-layered_2021,
	title = {Two-layered fuzzy logic-based model for predicting court decisions in construction contract disputes},
	issn = {0924-8463, 1572-8382},
	url = {http://link.springer.com/10.1007/s10506-021-09281-9},
	doi = {10.1007/s10506-021-09281-9},
	journaltitle = {Artificial Intelligence and Law},
	shortjournal = {Artif Intell Law},
	author = {Bagherian-Marandi, Navid and Ravanshadnia, Mehdi and Akbarzadeh-T, Mohammad-R.},
	urldate = {2021-07-04},
	date = {2021-01-26},
	langid = {english},
	keywords = {xno}
}

@article{kirsiene_computerised_2020,
	title = {From computerised thing to digital being: mission (Im)possible?},
	issn = {0951-5666, 1435-5655},
	url = {http://link.springer.com/10.1007/s00146-020-01051-6},
	doi = {10.1007/s00146-020-01051-6},
	shorttitle = {From computerised thing to digital being},
	journaltitle = {{AI} \& {SOCIETY}},
	shortjournal = {{AI} \& Soc},
	author = {Kiršienė, Julija and Gruodytė, Edita and Amilevičius, Darius},
	urldate = {2021-07-04},
	date = {2020-08-28},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\CGHPN8KR\\Kiršienė et al. - 2020 - From computerised thing to digital being mission .pdf:application/pdf}
}

@article{liu_identifying_2021,
	title = {Identifying change patterns of {API} misuses from code changes},
	volume = {64},
	issn = {1674-733X, 1869-1919},
	url = {http://link.springer.com/10.1007/s11432-019-2745-5},
	doi = {10.1007/s11432-019-2745-5},
	pages = {132101},
	number = {3},
	journaltitle = {Science China Information Sciences},
	shortjournal = {Sci. China Inf. Sci.},
	author = {Liu, Wenjian and Chen, Bihuan and Peng, Xin and Sun, Qinghao and Zhao, Wenyun},
	urldate = {2021-07-04},
	date = {2021-03},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\57M9CPC8\\Liu et al. - 2021 - Identifying change patterns of API misuses from co.pdf:application/pdf}
}

@article{de_sousa_studying_2020,
	title = {Studying the evolution of exception handling anti-patterns in a long-lived large-scale project},
	volume = {26},
	issn = {0104-6500, 1678-4804},
	url = {https://journal-bcs.springeropen.com/articles/10.1186/s13173-019-0095-5},
	doi = {10.1186/s13173-019-0095-5},
	abstract = {Abstract
            Exception handling is a well-known technique used to improve software robustness. However, recent studies report that developers typically neglect exception handling (mostly novice ones). We believe the quality of exception handling code in a software project is directly affected (i) by the absence, or lack of awareness, of an explicit exception handling policy and guidelines and (ii) by a silent rising of exception handling anti-patterns. In this paper, we investigate this phenomenon in a case study of a long-lived large-scale Java Web system in a Public Education Institution, trying to better understand the relationship between (i) and (ii), and the impact of developers’ turnover, skills, and guidance in (ii). Our case study takes into account the technical and human aspects. As a first step, we surveyed 21 developers regarding their perception of exception handling in the system’s institution. Next, we analysed the evolution of exception handling anti-patterns across 15 releases of the target system. We conducted a semi-structured interview with three senior software engineers, representatives of the development team, to present partial results of the case and raise possible causes for the found problems. The interviewed professionals and a second analysis of the code identified the high team turnover as the source of this phenomenon, since the public procurement process for hiring new developers has mostly attracted novice ones. These findings suggest that the absence of an explicit exception handling policy impacts negatively in the developers’ perception and implementation of exception handling. Furthermore, the absence of such policy has been leading developers to replicate existing anti-patterns and spread them through new features added during system evolution. We also observed that most developers have low skills regarding exception handling in general and low knowledge regarding the design and implementation of exception handling in the system. The system maintainer now has a diagnosis of the major causes of the quality problems in the exception handling code and was able to lead the required measures to repair this technical debt.},
	pages = {1},
	number = {1},
	journaltitle = {Journal of the Brazilian Computer Society},
	shortjournal = {J Braz Comput Soc},
	author = {de Sousa, Dêmora B C and Maia, Paulo Henrique M. and Rocha, Lincoln S and Viana, Windson},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\4M5KEQIT\\de Sousa et al. - 2020 - Studying the evolution of exception handling anti-.pdf:application/pdf}
}

@article{girau_fault_2020,
	title = {Fault tolerance of self-organizing maps},
	volume = {32},
	issn = {0941-0643, 1433-3058},
	url = {http://link.springer.com/10.1007/s00521-018-3769-6},
	doi = {10.1007/s00521-018-3769-6},
	pages = {17977--17993},
	number = {24},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Girau, Bernard and Torres-Huitzil, Cesar},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno},
	file = {Submitted Version:C\:\\Users\\michalm\\Zotero\\storage\\9AP6VET9\\Girau and Torres-Huitzil - 2020 - Fault tolerance of self-organizing maps.pdf:application/pdf}
}

@article{javed_iotef_2020,
	title = {{IoTEF}: A Federated Edge-Cloud Architecture for Fault-Tolerant {IoT} Applications},
	volume = {18},
	issn = {1570-7873, 1572-9184},
	url = {http://link.springer.com/10.1007/s10723-019-09498-8},
	doi = {10.1007/s10723-019-09498-8},
	shorttitle = {{IoTEF}},
	abstract = {Abstract
            The evolution of Internet of Things ({IoT}) technology has led to an increased emphasis on edge computing for Cyber-Physical Systems ({CPS}), in which applications rely on processing data closer to the data sources, and sharing the results across heterogeneous clusters. This has simplified the data exchanges between {IoT}/{CPS} systems, the cloud, and the edge for managing low latency, minimal bandwidth, and fault-tolerant applications. Nonetheless, many of these applications administer data collection on the edge and offer data analytic and storage capabilities in the cloud. This raises the problem of separate software stacks between the edge and the cloud with no unified fault-tolerant management, hindering dynamic relocation of data processing. In such systems, the data must also be preserved from being corrupted or duplicated in the case of intermittent long-distance network connectivity issues, malicious harming of edge devices, or other hostile environments. Within this context, the contributions of this paper are threefold: (i) to propose a new Internet of Things Edge-Cloud Federation ({IoTEF}) architecture for multi-cluster {IoT} applications by adapting our earlier Cloud and Edge Fault-Tolerant {IoT} ({CEFIoT}) layered design. We address the fault tolerance issue by employing the Apache Kafka publish/subscribe platform as the unified data replication solution. We also deploy Kubernetes for fault-tolerant management, combined with the federated scheme, offering a single management interface and allowing automatic reconfiguration of the data processing pipeline, (ii) to formulate functional and non-functional requirements of our proposed solution by comparing several {IoT} architectures, and (iii) to implement a smart buildings use case of the ongoing Otaniemi3D project as proof-of-concept for assessing {IoTEF} capabilities. The experimental results conclude that the architecture minimizes latency, saves network bandwidth, and handles both hardware and network connectivity based failures.},
	pages = {57--80},
	number = {1},
	journaltitle = {Journal of Grid Computing},
	shortjournal = {J Grid Computing},
	author = {Javed, Asad and Robert, Jérémy and Heljanko, Keijo and Främling, Kary},
	urldate = {2021-07-04},
	date = {2020-03},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\CMII8U8I\\Javed et al. - 2020 - IoTEF A Federated Edge-Cloud Architecture for Fau.pdf:application/pdf}
}

@article{semerath_diversity_2020,
	title = {Diversity of graph models and graph generators in mutation testing},
	volume = {22},
	issn = {1433-2779, 1433-2787},
	url = {http://link.springer.com/10.1007/s10009-019-00530-6},
	doi = {10.1007/s10009-019-00530-6},
	abstract = {Abstract
            When custom modeling tools are used for designing complex safety-critical systems (e.g., critical cyber-physical systems), the tools themselves need to be validated by systematic testing to prevent tool-specific bugs reaching the system. Testing of such modeling tools relies upon an automatically generated set of models as a test suite. While many software testing practices recommend that this test suite should be diverse, model diversity has not been studied systematically for graph models. In the paper, we propose different diversity metrics for models by generalizing and exploiting neighborhood and predicate shapes as abstraction. We evaluate such shape-based diversity metrics using various distance functions in the context of mutation testing of graph constraints and access policies for two separate industrial {DSLs}. Furthermore, we evaluate the quality (i.e., bug detection capability) of different (random and consistent) model generation techniques for mutation testing purposes.},
	pages = {57--78},
	number = {1},
	journaltitle = {International Journal on Software Tools for Technology Transfer},
	shortjournal = {Int J Softw Tools Technol Transfer},
	author = {Semeráth, Oszkár and Farkas, Rebeka and Bergmann, Gábor and Varró, Dániel},
	urldate = {2021-07-04},
	date = {2020-02},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\GSCU24V7\\Semeráth et al. - 2020 - Diversity of graph models and graph generators in .pdf:application/pdf}
}

@article{hu_design_2021,
	title = {Design of fault diagnosis algorithm for electric fan based on {LSSVM} and Kd-Tree},
	volume = {51},
	issn = {0924-669X, 1573-7497},
	url = {http://link.springer.com/10.1007/s10489-020-01830-0},
	doi = {10.1007/s10489-020-01830-0},
	pages = {804--818},
	number = {2},
	journaltitle = {Applied Intelligence},
	shortjournal = {Appl Intell},
	author = {Hu, Kongzhi and Jiang, Ming and Zhang, Haifeng and Cao, Sheng and Guo, Ziyi},
	urldate = {2021-07-04},
	date = {2021-02},
	langid = {english},
	keywords = {xno}
}

@article{best_exploring_2020,
	title = {Exploring the efficacy of transfer learning in mining image-based software artifacts},
	volume = {7},
	issn = {2196-1115},
	url = {https://journalofbigdata.springeropen.com/articles/10.1186/s40537-020-00335-4},
	doi = {10.1186/s40537-020-00335-4},
	pages = {59},
	number = {1},
	journaltitle = {Journal of Big Data},
	shortjournal = {J Big Data},
	author = {Best, Natalie and Ott, Jordan and Linstead, Erik J.},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\KYENJTRN\\Best et al. - 2020 - Exploring the efficacy of transfer learning in min.pdf:application/pdf}
}

@article{deldari_survey_2020,
	title = {A survey on preemptible {IaaS} cloud instances: challenges, issues, opportunities, and advantages},
	issn = {2520-8438, 2520-8446},
	url = {http://link.springer.com/10.1007/s42044-020-00071-1},
	doi = {10.1007/s42044-020-00071-1},
	shorttitle = {A survey on preemptible {IaaS} cloud instances},
	journaltitle = {Iran Journal of Computer Science},
	shortjournal = {Iran J Comput Sci},
	author = {Deldari, Arash and Salehan, Alireza},
	urldate = {2021-07-04},
	date = {2020-10-03},
	langid = {english},
	keywords = {xno}
}

@article{slimani_service-oriented_2021,
	title = {Service-oriented replication strategies for improving quality-of-service in cloud computing: a survey},
	volume = {24},
	issn = {1386-7857, 1573-7543},
	url = {https://link.springer.com/10.1007/s10586-020-03108-z},
	doi = {10.1007/s10586-020-03108-z},
	shorttitle = {Service-oriented replication strategies for improving quality-of-service in cloud computing},
	pages = {361--392},
	number = {1},
	journaltitle = {Cluster Computing},
	shortjournal = {Cluster Comput},
	author = {Slimani, Sarra and Hamrouni, Tarek and Ben Charrada, Faouzi},
	urldate = {2021-07-04},
	date = {2021-03},
	langid = {english},
	keywords = {xno}
}

@article{valabhoju_optimized_2021,
	title = {Optimized ensemble of regression tree-based location of evolving faults in dual-circuit line},
	volume = {33},
	issn = {0941-0643, 1433-3058},
	url = {https://link.springer.com/10.1007/s00521-020-05628-6},
	doi = {10.1007/s00521-020-05628-6},
	pages = {8795--8820},
	number = {14},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Valabhoju, Ashok and Yadav, Anamika and Pazoki, Mohammad and El-Sehiemy, Ragab A.},
	urldate = {2021-07-04},
	date = {2021-07},
	langid = {english},
	keywords = {xno}
}

@article{rantala_predicting_2020,
	title = {Predicting technical debt from commit contents: reproduction and extension with automated feature selection},
	volume = {28},
	issn = {0963-9314, 1573-1367},
	url = {https://link.springer.com/10.1007/s11219-020-09520-3},
	doi = {10.1007/s11219-020-09520-3},
	shorttitle = {Predicting technical debt from commit contents},
	abstract = {Abstract
            
              Self-admitted technical debt refers to sub-optimal development solutions that are expressed in written code comments or commits. We reproduce and improve on a prior work by Yan et al. (2018) on detecting commits that introduce self-admitted technical debt. We use multiple natural language processing methods: Bag-of-Words, topic modeling, and word embedding vectors. We study 5 open-source projects. Our {NLP} approach uses logistic Lasso regression from Glmnet to automatically select best predictor words. A manually labeled dataset from prior work that identified self-admitted technical debt from code level commits serves as ground truth. Our approach achieves + 0.15 better area under the {ROC} curve performance than a prior work, when comparing only commit message features, and + 0.03 better result overall when replacing manually selected features with automatically selected words. In both cases, the improvement was statistically significant (
              p
              {\textless} 0.0001). Our work has four main contributions, which are comparing different {NLP} techniques for {SATD} detection, improved results over previous work, showing how to generate generalizable predictor words when using multiple repositories, and producing a list of words correlating with {SATD}. As a concrete result, we release a list of the predictor words that correlate positively with {SATD}, as well as our used datasets and scripts to enable replication studies and to aid in the creation of future classifiers.},
	pages = {1551--1579},
	number = {4},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Rantala, Leevi and Mäntylä, Mika},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\6R62R2C5\\Rantala and Mäntylä - 2020 - Predicting technical debt from commit contents re.pdf:application/pdf}
}

@article{quach_empirical_2021,
	title = {An empirical study on the use of {SZZ} for identifying inducing changes of non-functional bugs},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-09970-8},
	doi = {10.1007/s10664-021-09970-8},
	pages = {71},
	number = {4},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Quach, Sophia and Lamothe, Maxime and Kamei, Yasutaka and Shang, Weiyi},
	urldate = {2021-07-04},
	date = {2021-07},
	langid = {english},
	keywords = {xno}
}

@article{jawahar_vision_2021,
	title = {Vision based inspection system for leather surface defect detection using fast convergence particle swarm optimization ensemble classifier approach},
	volume = {80},
	issn = {1380-7501, 1573-7721},
	url = {http://link.springer.com/10.1007/s11042-020-09727-3},
	doi = {10.1007/s11042-020-09727-3},
	pages = {4203--4235},
	number = {3},
	journaltitle = {Multimedia Tools and Applications},
	shortjournal = {Multimed Tools Appl},
	author = {Jawahar, Malathy and Babu, N. K. Chandra and Vani, K. and Anbarasi, L. Jani and Geetha, S.},
	urldate = {2021-07-04},
	date = {2021-01},
	langid = {english},
	keywords = {xno}
}

@article{lv_toward_2021,
	title = {Toward accurate detection on change barriers},
	volume = {64},
	issn = {1674-733X, 1869-1919},
	url = {http://link.springer.com/10.1007/s11432-019-2902-5},
	doi = {10.1007/s11432-019-2902-5},
	pages = {132102},
	number = {3},
	journaltitle = {Science China Information Sciences},
	shortjournal = {Sci. China Inf. Sci.},
	author = {Lv, Tingting and Ren, Zhilei and Li, Xiaochen and Gao, Guojun and Jiang, He},
	urldate = {2021-07-04},
	date = {2021-03},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\F79CKAG8\\Lv et al. - 2021 - Toward accurate detection on change barriers.pdf:application/pdf}
}

@article{gharib_iqcpsos_2021,
	title = {{IQCPSoS}: A Model-Based Approach for Modeling and Analyzing Information Quality Requirements for Cyber-Physical System-of-Systems},
	issn = {1861-2032, 1861-2040},
	url = {https://link.springer.com/10.1007/s13740-021-00129-8},
	doi = {10.1007/s13740-021-00129-8},
	shorttitle = {{IQCPSoS}},
	journaltitle = {Journal on Data Semantics},
	shortjournal = {J Data Semant},
	author = {Gharib, Mohamad and Lollini, Paolo and Bondavalli, Andrea},
	urldate = {2021-07-04},
	date = {2021-05-24},
	langid = {english},
	keywords = {xno}
}

@article{wang_ethereum_2021,
	title = {Ethereum smart contract security research: survey and future research opportunities},
	volume = {15},
	issn = {2095-2228, 2095-2236},
	url = {http://link.springer.com/10.1007/s11704-020-9284-9},
	doi = {10.1007/s11704-020-9284-9},
	shorttitle = {Ethereum smart contract security research},
	pages = {152802},
	number = {2},
	journaltitle = {Frontiers of Computer Science},
	shortjournal = {Front. Comput. Sci.},
	author = {Wang, Zeli and Jin, Hai and Dai, Weiqi and Choo, Kim-Kwang Raymond and Zou, Deqing},
	urldate = {2021-07-04},
	date = {2021-04},
	langid = {english},
	keywords = {xno}
}

@article{rout_energy_2021,
	title = {Energy Efficiency in Software Defined Networking: A Survey},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00659-9},
	doi = {10.1007/s42979-021-00659-9},
	shorttitle = {Energy Efficiency in Software Defined Networking},
	pages = {308},
	number = {4},
	journaltitle = {{SN} Computer Science},
	shortjournal = {{SN} {COMPUT}. {SCI}.},
	author = {Rout, Suchismita and Sahoo, Kshira Sagar and Patra, Sudhansu Sekhar and Sahoo, Bibhudatta and Puthal, Deepak},
	urldate = {2021-07-04},
	date = {2021-07},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\MQ7DMQ4T\\Rout et al. - 2021 - Energy Efficiency in Software Defined Networking .pdf:application/pdf}
}

@article{parsai_comparing_2020,
	title = {Comparing mutation coverage against branch coverage in an industrial setting},
	volume = {22},
	issn = {1433-2779, 1433-2787},
	url = {https://link.springer.com/10.1007/s10009-020-00567-y},
	doi = {10.1007/s10009-020-00567-y},
	pages = {365--388},
	number = {4},
	journaltitle = {International Journal on Software Tools for Technology Transfer},
	shortjournal = {Int J Softw Tools Technol Transfer},
	author = {Parsai, Ali and Demeyer, Serge},
	urldate = {2021-07-04},
	date = {2020-08},
	langid = {english},
	keywords = {xno},
	file = {Submitted Version:C\:\\Users\\michalm\\Zotero\\storage\\U2Q7ZMZP\\Parsai and Demeyer - 2020 - Comparing mutation coverage against branch coverag.pdf:application/pdf}
}

@article{kavzak_ufuktepe_test_2021,
	title = {Test input generation from cause–effect graphs},
	issn = {0963-9314, 1573-1367},
	url = {https://link.springer.com/10.1007/s11219-021-09560-3},
	doi = {10.1007/s11219-021-09560-3},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Kavzak Ufuktepe, Deniz and Ayav, Tolga and Belli, Fevzi},
	urldate = {2021-07-04},
	date = {2021-06-18},
	langid = {english},
	keywords = {xno}
}

@article{kaur_stratification_2021,
	title = {Stratification of Hardware Attacks: Side Channel Attacks and Fault Injection Techniques},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00562-3},
	doi = {10.1007/s42979-021-00562-3},
	shorttitle = {Stratification of Hardware Attacks},
	pages = {183},
	number = {3},
	journaltitle = {{SN} Computer Science},
	shortjournal = {{SN} {COMPUT}. {SCI}.},
	author = {Kaur, Shaminder and Singh, Balwinder and Kaur, Harsimranjit},
	urldate = {2021-07-04},
	date = {2021-05},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\WW495UFW\\Kaur et al. - 2021 - Stratification of Hardware Attacks Side Channel A.pdf:application/pdf}
}

@article{shama_sastry_active_2020,
	title = {Active neural learners for text with dual supervision},
	volume = {32},
	issn = {0941-0643, 1433-3058},
	url = {http://link.springer.com/10.1007/s00521-019-04681-0},
	doi = {10.1007/s00521-019-04681-0},
	pages = {13343--13362},
	number = {17},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Shama Sastry, Chandramouli and Milios, Evangelos E.},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xno}
}

@article{zhao_human_2020,
	title = {A human resource allocation method for business processes using team faultlines},
	volume = {50},
	issn = {0924-669X, 1573-7497},
	url = {https://link.springer.com/10.1007/s10489-020-01686-4},
	doi = {10.1007/s10489-020-01686-4},
	pages = {2887--2900},
	number = {9},
	journaltitle = {Applied Intelligence},
	shortjournal = {Appl Intell},
	author = {Zhao, Weidong and Pu, Shi and Jiang, Danni},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xno}
}

@article{hosni_systematic_2021,
	title = {A systematic mapping study for ensemble classification methods in cardiovascular disease},
	volume = {54},
	issn = {0269-2821, 1573-7462},
	url = {http://link.springer.com/10.1007/s10462-020-09914-6},
	doi = {10.1007/s10462-020-09914-6},
	pages = {2827--2861},
	number = {4},
	journaltitle = {Artificial Intelligence Review},
	shortjournal = {Artif Intell Rev},
	author = {Hosni, Mohamed and Carrillo de Gea, Juan M. and Idri, Ali and El Bajta, Manal and Fernández Alemán, José Luis and García-Mateos, Ginés and Abnane, Ibtissam},
	urldate = {2021-07-04},
	date = {2021-04},
	langid = {english},
	keywords = {xno}
}

@article{eken_empirical_2021,
	title = {An empirical study on the effect of community smells on bug prediction},
	volume = {29},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-020-09538-7},
	doi = {10.1007/s11219-020-09538-7},
	pages = {159--194},
	number = {1},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Eken, Beyza and Palma, Francis and Ayşe, Başar and Ayşe, Tosun},
	urldate = {2021-07-04},
	date = {2021-03},
	langid = {english},
	keywords = {xno}
}

@article{di_rocco_development_2021,
	title = {Development of recommendation systems for software engineering: the {CROSSMINER} experience},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-09963-7},
	doi = {10.1007/s10664-021-09963-7},
	shorttitle = {Development of recommendation systems for software engineering},
	abstract = {Abstract
            To perform their daily tasks, developers intensively make use of existing resources by consulting open source software ({OSS}) repositories. Such platforms contain rich data sources, e.g., code snippets, documentations, and user discussions, that can be useful for supporting development activities. Over the last decades, several techniques and tools have been promoted to provide developers with innovative features, aiming to bring in improvements in terms of development effort, cost savings, and productivity. In the context of the {EU} H2020 {CROSSMINER} project, a set of recommendation systems has been conceived to assist software programmers in different phases of the development process. The systems provide developers with various artifacts, such as third-party libraries, documentation about how to use the {APIs} being adopted, or relevant {API} function calls. To develop such recommendations, various technical choices have been made to overcome issues related to several aspects including the lack of baselines, limited data availability, decisions about the performance measures, and evaluation approaches. This paper is an experience report to present the knowledge pertinent to the set of recommendation systems developed through the {CROSSMINER} project. We explain in detail the challenges we had to deal with, together with the related lessons learned when developing and evaluating these systems. Our aim is to provide the research community with concrete takeaway messages that are expected to be useful for those who want to develop or customize their own recommendation systems. The reported experiences can facilitate interesting discussions and research work, which in the end contribute to the advancement of recommendation systems applied to solve different issues in Software Engineering.},
	pages = {69},
	number = {4},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Di Rocco, Juri and Di Ruscio, Davide and Di Sipio, Claudio and Nguyen, Phuong T. and Rubei, Riccardo},
	urldate = {2021-07-04},
	date = {2021-07},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\8Y3J4BLM\\Di Rocco et al. - 2021 - Development of recommendation systems for software.pdf:application/pdf}
}

@article{zheng_survey_2021,
	title = {A survey of Intel {SGX} and its applications},
	volume = {15},
	issn = {2095-2228, 2095-2236},
	url = {http://link.springer.com/10.1007/s11704-019-9096-y},
	doi = {10.1007/s11704-019-9096-y},
	pages = {153808},
	number = {3},
	journaltitle = {Frontiers of Computer Science},
	shortjournal = {Front. Comput. Sci.},
	author = {Zheng, Wei and Wu, Ying and Wu, Xiaoxue and Feng, Chen and Sui, Yulei and Luo, Xiapu and Zhou, Yajin},
	urldate = {2021-07-04},
	date = {2021-06},
	langid = {english},
	keywords = {xno}
}

@article{jazaeri_edge_2021,
	title = {Edge computing in {SDN}-{IoT} networks: a systematic review of issues, challenges and solutions},
	issn = {1386-7857, 1573-7543},
	url = {https://link.springer.com/10.1007/s10586-021-03311-6},
	doi = {10.1007/s10586-021-03311-6},
	shorttitle = {Edge computing in {SDN}-{IoT} networks},
	journaltitle = {Cluster Computing},
	shortjournal = {Cluster Comput},
	author = {Jazaeri, Seyedeh Shabnam and Jabbehdari, Sam and Asghari, Parvaneh and Haj Seyyed Javadi, Hamid},
	urldate = {2021-07-04},
	date = {2021-06-11},
	langid = {english},
	keywords = {xno}
}

@article{nyarko-boateng_using_2020,
	title = {Using machine learning techniques to predict the cost of repairing hard failures in underground fiber optics networks},
	volume = {7},
	issn = {2196-1115},
	url = {https://journalofbigdata.springeropen.com/articles/10.1186/s40537-020-00343-4},
	doi = {10.1186/s40537-020-00343-4},
	pages = {64},
	number = {1},
	journaltitle = {Journal of Big Data},
	shortjournal = {J Big Data},
	author = {Nyarko-Boateng, Owusu and Adekoya, Adebayo Felix and Weyori, Benjamin Asubam},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\ETMWAV38\\Nyarko-Boateng et al. - 2020 - Using machine learning techniques to predict the c.pdf:application/pdf}
}

@article{satpathy_new_2020,
	title = {A new healthcare diagnosis system using an {IoT}-based fuzzy classifier with {FPGA}},
	volume = {76},
	issn = {0920-8542, 1573-0484},
	url = {http://link.springer.com/10.1007/s11227-019-03013-2},
	doi = {10.1007/s11227-019-03013-2},
	pages = {5849--5861},
	number = {8},
	journaltitle = {The Journal of Supercomputing},
	shortjournal = {J Supercomput},
	author = {Satpathy, Sambit and Mohan, Prakash and Das, Sanchali and Debbarma, Swapan},
	urldate = {2021-07-04},
	date = {2020-08},
	langid = {english},
	keywords = {xno}
}

@article{baksi_infect_2020,
	title = {To infect or not to infect: a critical analysis of infective countermeasures in fault attacks},
	volume = {10},
	issn = {2190-8508, 2190-8516},
	url = {https://link.springer.com/10.1007/s13389-020-00224-9},
	doi = {10.1007/s13389-020-00224-9},
	shorttitle = {To infect or not to infect},
	pages = {355--374},
	number = {4},
	journaltitle = {Journal of Cryptographic Engineering},
	shortjournal = {J Cryptogr Eng},
	author = {Baksi, Anubhab and Saha, Dhiman and Sarkar, Sumanta},
	urldate = {2021-07-04},
	date = {2020-11},
	langid = {english},
	keywords = {xno}
}

@article{mkaouar_formal_2020,
	title = {A formal approach to {AADL} model-based software engineering},
	volume = {22},
	issn = {1433-2779, 1433-2787},
	url = {http://link.springer.com/10.1007/s10009-019-00513-7},
	doi = {10.1007/s10009-019-00513-7},
	pages = {219--247},
	number = {2},
	journaltitle = {International Journal on Software Tools for Technology Transfer},
	shortjournal = {Int J Softw Tools Technol Transfer},
	author = {Mkaouar, Hana and Zalila, Bechir and Hugues, Jérôme and Jmaiel, Mohamed},
	urldate = {2021-07-04},
	date = {2020-04},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\XV6URLTY\\Mkaouar et al. - 2020 - A formal approach to AADL model-based software eng.pdf:application/pdf}
}

@article{razzak_big_2020,
	title = {Big data analytics for preventive medicine},
	volume = {32},
	issn = {0941-0643, 1433-3058},
	url = {http://link.springer.com/10.1007/s00521-019-04095-y},
	doi = {10.1007/s00521-019-04095-y},
	pages = {4417--4451},
	number = {9},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Razzak, Muhammad Imran and Imran, Muhammad and Xu, Guandong},
	urldate = {2021-07-04},
	date = {2020-05},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\7Y8VZLGW\\Razzak et al. - 2020 - Big data analytics for preventive medicine.pdf:application/pdf}
}

@article{dehraj_review_2021,
	title = {A review on architecture and models for autonomic software systems},
	volume = {77},
	issn = {0920-8542, 1573-0484},
	url = {https://link.springer.com/10.1007/s11227-020-03268-0},
	doi = {10.1007/s11227-020-03268-0},
	pages = {388--417},
	number = {1},
	journaltitle = {The Journal of Supercomputing},
	shortjournal = {J Supercomput},
	author = {Dehraj, Pooja and Sharma, Arun},
	urldate = {2021-07-04},
	date = {2021-01},
	langid = {english},
	keywords = {xno}
}

@article{tayeh_fault_2020,
	title = {Fault tolerant data transmission reduction method for wireless sensor networks},
	volume = {23},
	issn = {1386-145X, 1573-1413},
	url = {http://link.springer.com/10.1007/s11280-019-00767-w},
	doi = {10.1007/s11280-019-00767-w},
	pages = {1197--1216},
	number = {2},
	journaltitle = {World Wide Web},
	shortjournal = {World Wide Web},
	author = {Tayeh, Gaby Bou and Makhoul, Abdallah and Demerjian, Jacques and Guyeux, Christophe and Bahi, Jacques},
	urldate = {2021-07-04},
	date = {2020-03},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\KMWMY7I5\\Tayeh et al. - 2020 - Fault tolerant data transmission reduction method .pdf:application/pdf}
}

@article{villamizar_efficient_2020,
	title = {An efficient approach for reviewing security-related aspects in agile requirements specifications of web applications},
	volume = {25},
	issn = {0947-3602, 1432-010X},
	url = {http://link.springer.com/10.1007/s00766-020-00338-w},
	doi = {10.1007/s00766-020-00338-w},
	pages = {439--468},
	number = {4},
	journaltitle = {Requirements Engineering},
	shortjournal = {Requirements Eng},
	author = {Villamizar, Hugo and Kalinowski, Marcos and Garcia, Alessandro and Mendez, Daniel},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\4UELR9WH\\Villamizar et al. - 2020 - An efficient approach for reviewing security-relat.pdf:application/pdf}
}

@article{raval_fault-tolerant_2021,
	title = {Fault-Tolerant Controller Comparative Study and Analysis for Benchmark Two-Tank Interacting Level Control System},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-021-00489-9},
	doi = {10.1007/s42979-021-00489-9},
	pages = {93},
	number = {2},
	journaltitle = {{SN} Computer Science},
	shortjournal = {{SN} {COMPUT}. {SCI}.},
	author = {Raval, Sejal and Patel, Himanshukumar R. and Shah, Vipul A.},
	urldate = {2021-07-04},
	date = {2021-04},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\XUAV354E\\Raval et al. - 2021 - Fault-Tolerant Controller Comparative Study and An.pdf:application/pdf}
}

@article{chowdhury_physical_2021,
	title = {Physical security in the post-quantum era: A survey on side-channel analysis, random number generators, and physically unclonable functions},
	issn = {2190-8508, 2190-8516},
	url = {http://link.springer.com/10.1007/s13389-021-00255-w},
	doi = {10.1007/s13389-021-00255-w},
	shorttitle = {Physical security in the post-quantum era},
	journaltitle = {Journal of Cryptographic Engineering},
	shortjournal = {J Cryptogr Eng},
	author = {Chowdhury, Sreeja and Covic, Ana and Acharya, Rabin Yu and Dupee, Spencer and Ganji, Fatemeh and Forte, Domenic},
	urldate = {2021-07-04},
	date = {2021-02-01},
	langid = {english},
	keywords = {xno}
}

@article{kuzlu_role_2021,
	title = {Role of Artificial Intelligence in the Internet of Things ({IoT}) cybersecurity},
	volume = {1},
	issn = {2730-7239},
	url = {http://link.springer.com/10.1007/s43926-020-00001-4},
	doi = {10.1007/s43926-020-00001-4},
	abstract = {Abstract
            In recent years, the use of the Internet of Things ({IoT}) has increased exponentially, and cybersecurity concerns have increased along with it. On the cutting edge of cybersecurity is Artificial Intelligence ({AI}), which is used for the development of complex algorithms to protect networks and systems, including {IoT} systems. However, cyber-attackers have figured out how to exploit {AI} and have even begun to use adversarial {AI} in order to carry out cybersecurity attacks. This review paper compiles information from several other surveys and research papers regarding {IoT}, {AI}, and attacks with and against {AI} and explores the relationship between these three topics with the purpose of comprehensively presenting and summarizing relevant literature in these fields.},
	pages = {7},
	number = {1},
	journaltitle = {Discover Internet of Things},
	shortjournal = {Discov Internet Things},
	author = {Kuzlu, Murat and Fair, Corinne and Guler, Ozgur},
	urldate = {2021-07-04},
	date = {2021-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\A5Z2GHXD\\Kuzlu et al. - 2021 - Role of Artificial Intelligence in the Internet of.pdf:application/pdf}
}

@article{koyuncu_fixminer_2020,
	title = {{FixMiner}: Mining relevant fix patterns for automated program repair},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-019-09780-z},
	doi = {10.1007/s10664-019-09780-z},
	shorttitle = {{FixMiner}},
	pages = {1980--2024},
	number = {3},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Koyuncu, Anil and Liu, Kui and Bissyandé, Tegawendé F. and Kim, Dongsun and Klein, Jacques and Monperrus, Martin and Le Traon, Yves},
	urldate = {2021-07-04},
	date = {2020-05},
	langid = {english},
	keywords = {xno},
	file = {Submitted Version:C\:\\Users\\michalm\\Zotero\\storage\\9K292S6V\\Koyuncu et al. - 2020 - FixMiner Mining relevant fix patterns for automat.pdf:application/pdf}
}

@article{lu_data_2020,
	title = {Data mining technology of computer testing system for intelligent machining},
	issn = {0941-0643, 1433-3058},
	url = {http://link.springer.com/10.1007/s00521-020-05369-6},
	doi = {10.1007/s00521-020-05369-6},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Lu, Jun and Zhang, Liang},
	urldate = {2021-07-04},
	date = {2020-10-10},
	langid = {english},
	keywords = {xno}
}

@article{ji_artificial_2020,
	title = {Artificial intelligence-driven autonomous optical networks: 3S architecture and key technologies},
	volume = {63},
	issn = {1674-733X, 1869-1919},
	url = {https://link.springer.com/10.1007/s11432-020-2871-2},
	doi = {10.1007/s11432-020-2871-2},
	shorttitle = {Artificial intelligence-driven autonomous optical networks},
	pages = {160301},
	number = {6},
	journaltitle = {Science China Information Sciences},
	shortjournal = {Sci. China Inf. Sci.},
	author = {Ji, Yuefeng and Gu, Rentao and Yang, Zeyuan and Li, Jin and Li, Hui and Zhang, Min},
	urldate = {2021-07-04},
	date = {2020-06},
	langid = {english},
	keywords = {xno}
}

@article{baqais_automatic_2020,
	title = {Automatic software refactoring: a systematic literature review},
	volume = {28},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-019-09477-y},
	doi = {10.1007/s11219-019-09477-y},
	shorttitle = {Automatic software refactoring},
	pages = {459--502},
	number = {2},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Baqais, Abdulrahman Ahmed Bobakr and Alshayeb, Mohammad},
	urldate = {2021-07-04},
	date = {2020-06},
	langid = {english},
	keywords = {xno}
}

@article{dhalaria_csforest_2021,
	title = {{CSForest}: an approach for imbalanced family classification of android malicious applications},
	volume = {13},
	issn = {2511-2104, 2511-2112},
	url = {https://link.springer.com/10.1007/s41870-021-00661-7},
	doi = {10.1007/s41870-021-00661-7},
	shorttitle = {{CSForest}},
	pages = {1059--1071},
	number = {3},
	journaltitle = {International Journal of Information Technology},
	shortjournal = {Int. j. inf. tecnol.},
	author = {Dhalaria, Meghna and Gandotra, Ekta},
	urldate = {2021-07-04},
	date = {2021-06},
	langid = {english},
	keywords = {xno}
}

@article{lehmann_big_2020,
	title = {Big Data architecture for intelligent maintenance: a focus on query processing and machine learning algorithms},
	volume = {7},
	issn = {2196-1115},
	url = {https://journalofbigdata.springeropen.com/articles/10.1186/s40537-020-00340-7},
	doi = {10.1186/s40537-020-00340-7},
	shorttitle = {Big Data architecture for intelligent maintenance},
	pages = {61},
	number = {1},
	journaltitle = {Journal of Big Data},
	shortjournal = {J Big Data},
	author = {Lehmann, Claude and Goren Huber, Lilach and Horisberger, Thomas and Scheiba, Georg and Sima, Ana Claudia and Stockinger, Kurt},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\ZZQWC3DL\\Lehmann et al. - 2020 - Big Data architecture for intelligent maintenance.pdf:application/pdf}
}

@article{umrao_algorithms_2021,
	title = {Algorithms for functionalities of virtual network: a survey},
	volume = {77},
	issn = {0920-8542, 1573-0484},
	url = {https://link.springer.com/10.1007/s11227-020-03502-9},
	doi = {10.1007/s11227-020-03502-9},
	shorttitle = {Algorithms for functionalities of virtual network},
	pages = {7368--7439},
	number = {7},
	journaltitle = {The Journal of Supercomputing},
	shortjournal = {J Supercomput},
	author = {Umrao, Brajesh Kumar and Yadav, Dharmendra Kumar},
	urldate = {2021-07-04},
	date = {2021-07},
	langid = {english},
	keywords = {xno}
}

@article{ju_classification_2021,
	title = {Classification of jujube defects in small data sets based on transfer learning},
	issn = {0941-0643, 1433-3058},
	url = {http://link.springer.com/10.1007/s00521-021-05715-2},
	doi = {10.1007/s00521-021-05715-2},
	abstract = {Abstract
            Although convolutional neural networks have achieved success in the field of image classification, there are still challenges in the field of agricultural product quality sorting such as machine vision-based jujube defects detection. The performance of jujube defect detection mainly depends on the feature extraction and the classifier used. Due to the diversity of the jujube materials and the variability of the testing environment, the traditional method of manually extracting the features often fails to meet the requirements of practical application. In this paper, a jujube sorting model in small data sets based on convolutional neural network and transfer learning is proposed to meet the actual demand of jujube defects detection. Firstly, the original images collected from the actual jujube sorting production line were pre-processed, and the data were augmented to establish a data set of five categories of jujube defects. The original {CNN} model is then improved by embedding the {SE} module and using the triplet loss function and the center loss function to replace the softmax loss function. Finally, the depth pre-training model on the {ImageNet} image data set was used to conduct training on the jujube defects data set, so that the parameters of the pre-training model could fit the parameter distribution of the jujube defects image, and the parameter distribution was transferred to the jujube defects data set to complete the transfer of the model and realize the detection and classification of the jujube defects. The classification results are visualized by heatmap through the analysis of classification accuracy and confusion matrix compared with the comparison models. The experimental results show that the {SE}-{ResNet}50-{CL} model optimizes the fine-grained classification problem of jujube defect recognition, and the test accuracy reaches 94.15\%. The model has good stability and high recognition accuracy in complex environments.},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Ju, Jianping and Zheng, Hong and Xu, Xiaohang and Guo, Zhongyuan and Zheng, Zhaohui and Lin, Mingyu},
	urldate = {2021-07-04},
	date = {2021-01-30},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\2ZAPSIWE\\Ju et al. - 2021 - Classification of jujube defects in small data set.pdf:application/pdf}
}

@article{balaanand_designing_2020,
	title = {Designing a Framework for Communal Software: Based on the Assessment Using Relation Modelling},
	volume = {48},
	issn = {0885-7458, 1573-7640},
	url = {http://link.springer.com/10.1007/s10766-018-0598-2},
	doi = {10.1007/s10766-018-0598-2},
	shorttitle = {Designing a Framework for Communal Software},
	pages = {329--343},
	number = {2},
	journaltitle = {International Journal of Parallel Programming},
	shortjournal = {Int J Parallel Prog},
	author = {{BalaAnand}, M. and Karthikeyan, N. and Karthik, S.},
	urldate = {2021-07-04},
	date = {2020-04},
	langid = {english},
	keywords = {xno}
}

@article{bhandari_fault_2020,
	title = {Fault diagnosis in service-oriented computing through partially observed stochastic Petri nets},
	volume = {14},
	issn = {1863-2386, 1863-2394},
	url = {http://link.springer.com/10.1007/s11761-019-00279-5},
	doi = {10.1007/s11761-019-00279-5},
	pages = {35--47},
	number = {1},
	journaltitle = {Service Oriented Computing and Applications},
	shortjournal = {{SOCA}},
	author = {Bhandari, Guru Prasad and Gupta, Ratneshwer},
	urldate = {2021-07-04},
	date = {2020-03},
	langid = {english},
	keywords = {xno}
}

@article{casagrande_new_2020,
	title = {A new feature extraction process based on {SFTA} and {DWT} to enhance classification of ceramic tiles quality},
	volume = {31},
	issn = {0932-8092, 1432-1769},
	url = {http://link.springer.com/10.1007/s00138-020-01121-1},
	doi = {10.1007/s00138-020-01121-1},
	pages = {71},
	number = {7},
	journaltitle = {Machine Vision and Applications},
	shortjournal = {Machine Vision and Applications},
	author = {Casagrande, Luan and Macarini, Luiz Antonio Buschetto and Bitencourt, Daniel and Fröhlich, Antônio Augusto and de Araujo, Gustavo Medeiros},
	urldate = {2021-07-04},
	date = {2020-11},
	langid = {english},
	keywords = {xno}
}

@article{ahmad_scalability_2021,
	title = {Scalability, Consistency, Reliability and Security in {SDN} Controllers: A Survey of Diverse {SDN} Controllers},
	volume = {29},
	issn = {1064-7570, 1573-7705},
	url = {http://link.springer.com/10.1007/s10922-020-09575-4},
	doi = {10.1007/s10922-020-09575-4},
	shorttitle = {Scalability, Consistency, Reliability and Security in {SDN} Controllers},
	pages = {9},
	number = {1},
	journaltitle = {Journal of Network and Systems Management},
	shortjournal = {J Netw Syst Manage},
	author = {Ahmad, Suhail and Mir, Ajaz Hussain},
	urldate = {2021-07-04},
	date = {2021-01},
	langid = {english},
	keywords = {xno}
}

@article{shirmarz_performance_2020,
	title = {Performance issues and solutions in {SDN}-based data center: a survey},
	volume = {76},
	issn = {0920-8542, 1573-0484},
	url = {http://link.springer.com/10.1007/s11227-020-03180-7},
	doi = {10.1007/s11227-020-03180-7},
	shorttitle = {Performance issues and solutions in {SDN}-based data center},
	pages = {7545--7593},
	number = {10},
	journaltitle = {The Journal of Supercomputing},
	shortjournal = {J Supercomput},
	author = {Shirmarz, Alireza and Ghaffari, Ali},
	urldate = {2021-07-04},
	date = {2020-10},
	langid = {english},
	keywords = {xno}
}

@article{castellanos-ardila_compliance-aware_2021,
	title = {Compliance-aware engineering process plans: the case of space software engineering processes},
	issn = {0924-8463, 1572-8382},
	url = {http://link.springer.com/10.1007/s10506-021-09285-5},
	doi = {10.1007/s10506-021-09285-5},
	shorttitle = {Compliance-aware engineering process plans},
	abstract = {Abstract
            Safety-critical systems manufacturers have the duty of care, i.e., they should take correct steps while performing acts that could foreseeably harm others. Commonly, industry standards prescribe reasonable steps in their process requirements, which regulatory bodies trust. Manufacturers perform careful documentation of compliance with each requirement to show that they act under acceptable criteria. To facilitate this task, a safety-centered planning-time framework, called {ACCEPT}, has been proposed. Based on compliance-by-design, {ACCEPT} capabilities (i.e., processes and standards modeling, and automatic compliance checking) permit to design Compliance-aware Engineering Process Plans ({CaEPP}), which are able to show the planning-time allocation of standard demands, i.e., if the elements set down by the standard requirements are present at given points in the engineering process plan. In this paper, we perform a case study to understand if the {ACCEPT} produced models could support the planning of space software engineering processes. Space software is safety and mission-critical, and it is often the result of industrial cooperation. Such cooperation is coordinated through compliance with relevant standards. In the European context, {ECSS}-E-{ST}-40C is the de-facto standard for space software production. The planning of processes in compliance with project-specific {ECSS}-E-{ST}-40C applicable requirements is mandatory during contractual agreements. Our analysis is based on qualitative criteria targeting the effort dictated by task demands required to create a {CaEPP} for software development with {ACCEPT}. Initial observations show that the effort required to model compliance and processes artifacts is significant. However, such an effort pays off in the long term since models are, to some extend, reusable and flexible. The coverage level of the models is also analyzed based on design decisions. In our opinion, such a level is adequate since it responds to the information needs required by the {ECSS}-E-{ST}-40C framework.},
	journaltitle = {Artificial Intelligence and Law},
	shortjournal = {Artif Intell Law},
	author = {Castellanos-Ardila, Julieth Patricia and Gallina, Barbara and Governatori, Guido},
	urldate = {2021-07-04},
	date = {2021-03-20},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\NU5U2GTN\\Castellanos-Ardila et al. - 2021 - Compliance-aware engineering process plans the ca.pdf:application/pdf}
}

@article{lu_improving_2020,
	title = {Improving students’ programming quality with the continuous inspection process: a social coding perspective},
	volume = {14},
	issn = {2095-2228, 2095-2236},
	url = {http://link.springer.com/10.1007/s11704-019-9023-2},
	doi = {10.1007/s11704-019-9023-2},
	shorttitle = {Improving students’ programming quality with the continuous inspection process},
	pages = {145205},
	number = {5},
	journaltitle = {Frontiers of Computer Science},
	shortjournal = {Front. Comput. Sci.},
	author = {Lu, Yao and Mao, Xinjun and Wang, Tao and Yin, Gang and Li, Zude},
	urldate = {2021-07-04},
	date = {2020-10},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\EFI3ZPF9\\Lu et al. - 2020 - Improving students’ programming quality with the c.pdf:application/pdf}
}

@article{alabool_harris_2021,
	title = {Harris hawks optimization: a comprehensive review of recent variants and applications},
	issn = {0941-0643, 1433-3058},
	url = {http://link.springer.com/10.1007/s00521-021-05720-5},
	doi = {10.1007/s00521-021-05720-5},
	shorttitle = {Harris hawks optimization},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Alabool, Hamzeh Mohammad and Alarabiat, Deemah and Abualigah, Laith and Heidari, Ali Asghar},
	urldate = {2021-07-04},
	date = {2021-02-03},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\C26NZFZ4\\Alabool et al. - 2021 - Harris hawks optimization a comprehensive review .pdf:application/pdf}
}

@article{kaur_sp-j48_2020,
	title = {{SP}-J48: a novel optimization and machine-learning-based approach for solving complex problems: special application in software engineering for detecting code smells},
	volume = {32},
	issn = {0941-0643, 1433-3058},
	url = {http://link.springer.com/10.1007/s00521-019-04175-z},
	doi = {10.1007/s00521-019-04175-z},
	shorttitle = {{SP}-J48},
	pages = {7009--7027},
	number = {11},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Kaur, Amandeep and Jain, Sushma and Goel, Shivani},
	urldate = {2021-07-04},
	date = {2020-06},
	langid = {english},
	keywords = {xyes}
}

@article{cominardi_adaptive_2020,
	title = {Adaptive Telemetry for Software-Defined Mobile Networks},
	volume = {28},
	issn = {1064-7570, 1573-7705},
	url = {http://link.springer.com/10.1007/s10922-020-09524-1},
	doi = {10.1007/s10922-020-09524-1},
	pages = {660--692},
	number = {3},
	journaltitle = {Journal of Network and Systems Management},
	shortjournal = {J Netw Syst Manage},
	author = {Cominardi, Luca and Gonzalez-Diaz, Sergio and de la Oliva, Antonio and Bernardos, Carlos J.},
	urldate = {2021-07-04},
	date = {2020-07},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\445QVP78\\Cominardi et al. - 2020 - Adaptive Telemetry for Software-Defined Mobile Net.pdf:application/pdf}
}

@article{sharafi_practical_2020,
	title = {A practical guide on conducting eye tracking studies in software engineering},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-020-09829-4},
	doi = {10.1007/s10664-020-09829-4},
	pages = {3128--3174},
	number = {5},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Sharafi, Zohreh and Sharif, Bonita and Guéhéneuc, Yann-Gaël and Begel, Andrew and Bednarik, Roman and Crosby, Martha},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xno}
}

@article{fadele_novel_2021,
	title = {A novel classification to categorise original hadith detection techniques},
	issn = {2511-2104, 2511-2112},
	url = {https://link.springer.com/10.1007/s41870-021-00649-3},
	doi = {10.1007/s41870-021-00649-3},
	journaltitle = {International Journal of Information Technology},
	shortjournal = {Int. j. inf. tecnol.},
	author = {Fadele, Alaba Ayotunde and Kamsin, Amirrudin and Ahmad, Khadher and Hamid, Habiba},
	urldate = {2021-07-04},
	date = {2021-05-02},
	langid = {english},
	keywords = {xno}
}

@article{jammalamadaka_testing_2021,
	title = {Testing coverage criteria for optimized deep belief network with search and rescue},
	volume = {8},
	issn = {2196-1115},
	url = {https://journalofbigdata.springeropen.com/articles/10.1186/s40537-021-00453-7},
	doi = {10.1186/s40537-021-00453-7},
	abstract = {Abstract
            A new data-driven programming model is defined by the deep learning ({DL}) that makes the internal structure of a created neuron system over a fixed of training data. {DL} testing structure only depends on the data labeling and manual group. Nowadays, a lot of coverage criteria have been developed, but these criteria basically count the neurons' quantity whose activation during the implementation of a {DL} structure fulfilled certain properties. Also, existing criteria are not adequately fine-grained to capture delicate behaviors. This paper develops an optimized deep belief network ({DBN}) with a search and rescue ({SAR}) algorithm for testing coverage criteria. For an optimal selection of {DBN} structure, the {SAR} algorithm is introduced. The main objective is to test the {DL} structure using different criteria to enhance the coverage accuracy. The different coverage criteria such as {KMNC}, {NBC}, {SNAC}, {TKNC}, and {TKNP} are used for the testing of {DBN}. Using the generated test inputs, the criteria is validated and the developed criteria are capable to capture undesired behaviors in the {DBN} structure. The developed approach is implemented by Python platform using three standard datasets like {MNIST}, {CIFAR}-10, and {ImageNet}. For analysis, the developed approach is compared with the three {LeNet} models like {LeNet}-1, {LeNet}-4 and {LeNet}-5 for the {MNIST} dataset, the {VGG}-16, and {ResNet}-20 models for the {CIFAR}-10 dataset, and the {VGG}-19 and {ResNet}-50 models for the {ImageNet} dataset. These models are tested on the four adversarial test input generation approaches like {BIM}, {JSMA}, {FGSM}, and {CW}, and one {DL} testing method like {DeepGauge} to validate the efficiency of the suggested approach. The simulation results proved that the proposed approach obtained high coverage accuracy for each criterion on four adversarial test inputs and one {DL} testing method as compared to other models.},
	pages = {59},
	number = {1},
	journaltitle = {Journal of Big Data},
	shortjournal = {J Big Data},
	author = {Jammalamadaka, Kiran and Parveen, Nikhat},
	urldate = {2021-07-04},
	date = {2021-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\7ZCVGFJP\\Jammalamadaka and Parveen - 2021 - Testing coverage criteria for optimized deep belie.pdf:application/pdf}
}

@article{hu_quality_2020,
	title = {Quality assessment in competition-based software crowdsourcing},
	volume = {14},
	issn = {2095-2228, 2095-2236},
	url = {http://link.springer.com/10.1007/s11704-019-8418-4},
	doi = {10.1007/s11704-019-8418-4},
	pages = {146207},
	number = {6},
	journaltitle = {Frontiers of Computer Science},
	shortjournal = {Front. Comput. Sci.},
	author = {Hu, Zhenghui and Wu, Wenjun and Luo, Jie and Wang, Xin and Li, Boshu},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno}
}

@article{batur_sahin_novel_2021,
	title = {A novel deep learning-based feature selection model for improving the static analysis of vulnerability detection},
	issn = {0941-0643, 1433-3058},
	url = {https://link.springer.com/10.1007/s00521-021-06047-x},
	doi = {10.1007/s00521-021-06047-x},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Batur Şahin, Canan and Abualigah, Laith},
	urldate = {2021-07-04},
	date = {2021-05-01},
	langid = {english},
	keywords = {xno}
}

@article{galli_software_2020,
	title = {Software Product Quality Models, Developments, Trends, and Evaluation},
	volume = {1},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-020-00140-z},
	doi = {10.1007/s42979-020-00140-z},
	pages = {154},
	number = {3},
	journaltitle = {{SN} Computer Science},
	shortjournal = {{SN} {COMPUT}. {SCI}.},
	author = {Galli, Tamas and Chiclana, Francisco and Siewe, Francois},
	urldate = {2021-07-04},
	date = {2020-05},
	langid = {english},
	keywords = {xno}
}

@article{liu_survey_2020,
	title = {A survey of model-driven techniques and tools for cyber-physical systems},
	volume = {21},
	issn = {2095-9184, 2095-9230},
	url = {http://link.springer.com/10.1631/FITEE.2000311},
	doi = {10.1631/FITEE.2000311},
	pages = {1567--1590},
	number = {11},
	journaltitle = {Frontiers of Information Technology \& Electronic Engineering},
	shortjournal = {Front Inform Technol Electron Eng},
	author = {Liu, Bo and Zhang, Yuan-rui and Cao, Xue-lian and Liu, Yu and Gu, Bin and Wang, Tie-xin},
	urldate = {2021-07-04},
	date = {2020-11},
	langid = {english},
	keywords = {xno}
}

@article{kannao_system_2020,
	title = {A system for semantic segmentation of {TV} news broadcast videos},
	volume = {79},
	issn = {1380-7501, 1573-7721},
	url = {http://link.springer.com/10.1007/s11042-019-08445-9},
	doi = {10.1007/s11042-019-08445-9},
	pages = {6191--6225},
	number = {9},
	journaltitle = {Multimedia Tools and Applications},
	shortjournal = {Multimed Tools Appl},
	author = {Kannao, Raghvendra and Guha, Prithwijit},
	urldate = {2021-07-04},
	date = {2020-03},
	langid = {english},
	keywords = {xno}
}

@article{sadler_er2c_2020,
	title = {{ER}2C {SDMLC}: enterprise release risk-centric systems development and maintenance life cycle},
	volume = {28},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-019-09452-7},
	doi = {10.1007/s11219-019-09452-7},
	shorttitle = {{ER}2C {SDMLC}},
	pages = {1755--1787},
	number = {4},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Sadler, Hamish},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno}
}

@article{gao_automatic_2020,
	title = {Automatic Buffer Overflow Warning Validation},
	volume = {35},
	issn = {1000-9000, 1860-4749},
	url = {http://link.springer.com/10.1007/s11390-020-0525-z},
	doi = {10.1007/s11390-020-0525-z},
	pages = {1406--1427},
	number = {6},
	journaltitle = {Journal of Computer Science and Technology},
	shortjournal = {J. Comput. Sci. Technol.},
	author = {Gao, Feng-Juan and Wang, Yu and Wang, Lin-Zhang and Yang, Zijiang and Li, Xuan-Dong},
	urldate = {2021-07-04},
	date = {2020-11},
	langid = {english},
	keywords = {xno}
}

@article{alseadoon_migration_2021,
	title = {Migration of existing software systems to mobile computing platforms: a systematic mapping study},
	volume = {15},
	issn = {2095-2228, 2095-2236},
	url = {http://link.springer.com/10.1007/s11704-019-8166-5},
	doi = {10.1007/s11704-019-8166-5},
	shorttitle = {Migration of existing software systems to mobile computing platforms},
	pages = {152204},
	number = {2},
	journaltitle = {Frontiers of Computer Science},
	shortjournal = {Front. Comput. Sci.},
	author = {Alseadoon, Ibrahim and Ahmad, Aakash and Alkhalil, Adel and Sultan, Khalid},
	urldate = {2021-07-04},
	date = {2021-04},
	langid = {english},
	keywords = {xno}
}

@article{santana_increasing_2021,
	title = {Increasing the availability of {IoT} applications with reactive microservices},
	volume = {15},
	issn = {1863-2386, 1863-2394},
	url = {https://link.springer.com/10.1007/s11761-020-00308-8},
	doi = {10.1007/s11761-020-00308-8},
	pages = {109--126},
	number = {2},
	journaltitle = {Service Oriented Computing and Applications},
	shortjournal = {{SOCA}},
	author = {Santana, Cleber and Andrade, Leandro and Delicato, Flávia C. and Prazeres, Cássio},
	urldate = {2021-07-04},
	date = {2021-06},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\78EMZWBT\\Santana et al. - 2021 - Increasing the availability of IoT applications wi.pdf:application/pdf}
}

@article{shi_automatically_2021,
	title = {Automatically detecting feature requests from development emails by leveraging semantic sequence mining},
	volume = {26},
	issn = {0947-3602, 1432-010X},
	url = {https://link.springer.com/10.1007/s00766-020-00344-y},
	doi = {10.1007/s00766-020-00344-y},
	pages = {255--271},
	number = {2},
	journaltitle = {Requirements Engineering},
	shortjournal = {Requirements Eng},
	author = {Shi, Lin and Chen, Celia and Wang, Qing and Boehm, Barry},
	urldate = {2021-07-04},
	date = {2021-06},
	langid = {english},
	keywords = {xno}
}

@article{zheng_guest_2020,
	title = {Guest editorial: special issue on modeling and mitigation techniques for software aging},
	volume = {28},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-020-09496-0},
	doi = {10.1007/s11219-020-09496-0},
	shorttitle = {Guest editorial},
	pages = {3--5},
	number = {1},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Zheng, Zheng and Trivedi, Kishor S.},
	urldate = {2021-07-04},
	date = {2020-03},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\J42TCM3W\\Zheng and Trivedi - 2020 - Guest editorial special issue on modeling and mit.pdf:application/pdf}
}

@article{da_s_carvalho_relationships_2020,
	title = {Relationships between design problem agglomerations and concerns having types and domains of software as transverse dimensions},
	volume = {26},
	issn = {0104-6500, 1678-4804},
	url = {https://journal-bcs.springeropen.com/articles/10.1186/s13173-020-00099-y},
	doi = {10.1186/s13173-020-00099-y},
	abstract = {Abstract
            
              Context
              Design problems have been recognized as one of the main causes behind the loss of software systems’ quality. Agglomerated design problems impact the quality even more. So, organizing and analyzing the relationship between design problems and concerns as agglomerations is a possible way to enhance the identification of defective source code artifacts.
            
            
              Problem
              As different systems evolve in varied manners, it is important to analyze if the evolution of agglomerated design problems can reveal cases of discrepancies and inconstancies through time. We call these cases non-uniformity of agglomerations, and they can prevent the use of agglomerations in approaches to mitigate design problems (e.g., prediction models). To the best of our knowledge, we consider that this problem has not been investigated yet.
            
            
              Goal
              This study aims to comprehend the degree to which the non-uniformity of agglomerations is either the most common or the most exceptional situation during the evolution of software projects. We perform this investigation by grouping software projects under two transverse dimensions: types and domains of software.
            
            
              Method
              To this end, we performed a two-phase investigation: in phase I, we analyzed the historical data obtained from fifteen software projects split as three groups of types of software (distributed, service-oriented, and mobile projects); in phase {II}, we analyzed the evolution of six projects grouped as two domains of software (graph and timeseries databases). For each phase, we (i) mined instances of a design problem (code complexity) and concerns from the source code of projects, (ii) agglomerated the instances of code complexity around the concerns and analyzed them according to the grouped projects, and (iii) examined the resulting dataset with the help of visualizations and a statistical analysis.
            
            
              Results/Discussion
              Types of software actually shows a tendency to reveal cases of non-uniformity. On the other hand, domains of software show a partial advantage regarding the production of more uniform agglomerations through evolution.},
	pages = {5},
	number = {1},
	journaltitle = {Journal of the Brazilian Computer Society},
	shortjournal = {J Braz Comput Soc},
	author = {da S. Carvalho, Luis Paulo and Novais, Renato L. and Mendonça, Manoel},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\YPG5FSNR\\da S. Carvalho et al. - 2020 - Relationships between design problem agglomeration.pdf:application/pdf}
}

@article{beyer_what_2020,
	title = {What kind of questions do developers ask on Stack Overflow? A comparison of automated approaches to classify posts into question categories},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-019-09758-x},
	doi = {10.1007/s10664-019-09758-x},
	shorttitle = {What kind of questions do developers ask on Stack Overflow?},
	pages = {2258--2301},
	number = {3},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Beyer, Stefanie and Macho, Christian and Di Penta, Massimiliano and Pinzger, Martin},
	urldate = {2021-07-04},
	date = {2020-05},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\R4RW2YD2\\Beyer et al. - 2020 - What kind of questions do developers ask on Stack .pdf:application/pdf}
}

@article{weber_vanet_2021,
	title = {{VANET} simulators: an updated review},
	volume = {27},
	issn = {0104-6500, 1678-4804},
	url = {https://journal-bcs.springeropen.com/articles/10.1186/s13173-021-00113-x},
	doi = {10.1186/s13173-021-00113-x},
	shorttitle = {{VANET} simulators},
	abstract = {Abstract
            Research on {VANETs} (vehicular ad hoc networks) date back to the beginning of the 2000s. The possibility of enabling communication between vehicles through a wireless network stimulated the creation of new protocols, devices, and diverse utilization scenarios. Due to the intrinsic difficulties of using a real testbed to evaluate these research contributions, several simulators were developed at the time. Recently, with the advent of autonomous vehicles and the emergence of novel technologies (e.g., 5G and edge computing), new research challenges on {VANETs} are coming into sight. Therefore, revisiting {VANET} simulators is required to identify if they are still capable of evaluating these new scenarios. This paper presents an updated review of {VANET} simulators, showing their current state and capabilities to assess novel scenarios in {VANET} research. Based on this analysis, we identify open research challenges that should be addressed in current and future {VANET} simulators.},
	pages = {8},
	number = {1},
	journaltitle = {Journal of the Brazilian Computer Society},
	shortjournal = {J Braz Comput Soc},
	author = {Weber, Julia Silva and Neves, Miguel and Ferreto, Tiago},
	urldate = {2021-07-04},
	date = {2021-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\DPUHPZKT\\Weber et al. - 2021 - VANET simulators an updated review.pdf:application/pdf}
}

@article{liu_human-cyber-physical_2020,
	title = {Human-cyber-physical systems: concepts, challenges, and research opportunities},
	volume = {21},
	issn = {2095-9184, 2095-9230},
	url = {http://link.springer.com/10.1631/FITEE.2000537},
	doi = {10.1631/FITEE.2000537},
	shorttitle = {Human-cyber-physical systems},
	pages = {1535--1553},
	number = {11},
	journaltitle = {Frontiers of Information Technology \& Electronic Engineering},
	shortjournal = {Front Inform Technol Electron Eng},
	author = {Liu, Zhiming and Wang, Ji},
	urldate = {2021-07-04},
	date = {2020-11},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\7ML4PWMK\\Liu and Wang - 2020 - Human-cyber-physical systems concepts, challenges.pdf:application/pdf}
}

@article{cui_research_2020,
	title = {Research on basic theory of space fault network and system fault evolution process},
	volume = {32},
	issn = {0941-0643, 1433-3058},
	url = {http://link.springer.com/10.1007/s00521-019-04247-0},
	doi = {10.1007/s00521-019-04247-0},
	pages = {1725--1744},
	number = {6},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Cui, Tie-jun and Li, Sha-sha},
	urldate = {2021-07-04},
	date = {2020-03},
	langid = {english},
	keywords = {xno}
}

@article{amalio_experimental_2020,
	title = {An experimental scrutiny of visual design modelling: {VCL} up against {UML}+{OCL}},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-019-09784-9},
	doi = {10.1007/s10664-019-09784-9},
	shorttitle = {An experimental scrutiny of visual design modelling},
	abstract = {Abstract
            The graphical nature of prominent modelling notations, such as the standards {UML} and {SysML}, enables them to tap into the cognitive benefits of diagrams. However, these notations hardly exploit the cognitive potential of diagrams and are only partially graphical with invariants and operations being expressed textually. The Visual Contract Language ({VCL}) aims at improving visual modelling; it tries to (a) maximise diagrammatic cognitive effectiveness, (b) increase visual expressivity, and (c) level of rigour and formality. It is an alternative to {UML} that does largely pictorially what is traditionally done textually. The paper presents the results of a controlled experiment carried out four times in different academic settings and involving 43 participants, which compares {VCL} against {UML} and {OCL} and whose goal is to provide insight on benefits and limitations of visual modelling. The paper’s hypotheses are evaluated using a crossover design with the following tasks: (i) modelling of state space, invariants and operations, (ii) comprehension of modelled problem, (iii) detection of model defects and (iv) comprehension of a given model. Although visual approaches have been used and advocated for decades, this is the first empirical investigation looking into the effects of graphical expression of invariants and operations on modelling and model usage tasks. Results suggest {VCL} benefits in defect detection, model comprehension, and modelling of operations, providing some empirical evidence on the benefits of graphical software design.},
	pages = {1205--1258},
	number = {2},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Amálio, Nuno and Briand, Lionel and Kelsen, Pierre},
	urldate = {2021-07-04},
	date = {2020-03},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\I6HPEM6H\\Amálio et al. - 2020 - An experimental scrutiny of visual design modellin.pdf:application/pdf}
}

@article{medeiros_survey_2020,
	title = {A survey on data analysis on large-Scale wireless networks: online stream processing, trends, and challenges},
	volume = {11},
	issn = {1867-4828, 1869-0238},
	url = {https://jisajournal.springeropen.com/articles/10.1186/s13174-020-00127-2},
	doi = {10.1186/s13174-020-00127-2},
	shorttitle = {A survey on data analysis on large-Scale wireless networks},
	abstract = {Abstract
            In this paper we focus on knowledge extraction from large-scale wireless networks through stream processing. We present the primary methods for sampling, data collection, and monitoring of wireless networks and we characterize knowledge extraction as a machine learning problem on big data stream processing. We show the main trends in big data stream processing frameworks. Additionally, we explore the data preprocessing, feature engineering, and the machine learning algorithms applied to the scenario of wireless network analytics. We address challenges and present research projects in wireless network monitoring and stream processing. Finally, future perspectives, such as deep learning and reinforcement learning in stream processing, are anticipated.},
	pages = {6},
	number = {1},
	journaltitle = {Journal of Internet Services and Applications},
	shortjournal = {J Internet Serv Appl},
	author = {Medeiros, Dianne S. V. and Cunha Neto, Helio N. and Lopez, Martin Andreoni and S. Magalhães, Luiz Claudio and Fernandes, Natalia C. and Vieira, Alex B. and Silva, Edelberto F. and F. Mattos, Diogo M.},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\2HMEBJV7\\Medeiros et al. - 2020 - A survey on data analysis on large-Scale wireless .pdf:application/pdf}
}

@article{moghadam_autonomous_2021,
	title = {An autonomous performance testing framework using self-adaptive fuzzy reinforcement learning},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-020-09532-z},
	doi = {10.1007/s11219-020-09532-z},
	abstract = {Abstract
            Test automation brings the potential to reduce costs and human effort, but several aspects of software testing remain challenging to automate. One such example is automated performance testing to find performance breaking points. Current approaches to tackle automated generation of performance test cases mainly involve using source code or system model analysis or use-case-based techniques. However, source code and system models might not always be available at testing time. On the other hand, if the optimal performance testing policy for the intended objective in a testing process instead could be learned by the testing system, then test automation without advanced performance models could be possible. Furthermore, the learned policy could later be reused for similar software systems under test, thus leading to higher test efficiency. We propose {SaFReL}, a self-adaptive fuzzy reinforcement learning-based performance testing framework. {SaFReL} learns the optimal policy to generate performance test cases through an initial learning phase, then reuses it during a transfer learning phase, while keeping the learning running and updating the policy in the long term. Through multiple experiments in a simulated performance testing setup, we demonstrate that our approach generates the target performance test cases for different programs more efficiently than a typical testing process and performs adaptively without access to source code and performance models.},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Moghadam, Mahshid Helali and Saadatmand, Mehrdad and Borg, Markus and Bohlin, Markus and Lisper, Björn},
	urldate = {2021-07-04},
	date = {2021-03-10},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\JFNB8U2R\\Moghadam et al. - 2021 - An autonomous performance testing framework using .pdf:application/pdf}
}

@article{oleghe_predictive_2020,
	title = {A predictive noise correction methodology for manufacturing process datasets},
	volume = {7},
	issn = {2196-1115},
	url = {https://journalofbigdata.springeropen.com/articles/10.1186/s40537-020-00367-w},
	doi = {10.1186/s40537-020-00367-w},
	abstract = {Abstract
            In manufacturing processes, datasets intended for data driven decisions are majorly generated from time-sequenced sensor readings. Industrial sensor systems are prone to transmit inaccurate readings, which result in noisy datasets. Noisy datasets inhibit machine learning and knowledge discovery. Using a multi-stage, multi-output process dataset as an experimental case, this article reports a methodology for replacing erroneous sensor values with their predicted likely values. In the methodology, invalid values specified by process owners are first converted to missing values. Then, {ReliefF} algorithm is used to select the most relevant features to progress for prediction modelling, and also to boost the performance of the prediction model. A Random Forest classifier model is built to predict replacement values for the missing values. Finally, predicted values are inserted into the dataset to fill in the missing entries. With many attributes having a significant number of erroneous values, the invalid values replacement is done one attribute at a time. To do this systematically, the process flow direction and stages in the manufacturing process are exploited to partition the dataset into subsets for model building. The results indicate that the methodology is able to replace erroneous values with likely true values, to a very high degree of accuracy. There is a paucity of this type of methodology for dealing with invalid entries in process datasets. The methodology is useful for both missing and invalid value correction in process datasets. In the future, the plan is to inject the prediction models into streaming data to simultaneously enable erroneous value correction and predictive process monitoring in real-time.},
	pages = {89},
	number = {1},
	journaltitle = {Journal of Big Data},
	shortjournal = {J Big Data},
	author = {Oleghe, Omogbai},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\T3UFY7RK\\Oleghe - 2020 - A predictive noise correction methodology for manu.pdf:application/pdf}
}

@article{alkhazi_multi-criteria_2020,
	title = {Multi-criteria test cases selection for model transformations},
	volume = {27},
	issn = {0928-8910, 1573-7535},
	url = {https://link.springer.com/10.1007/s10515-020-00271-w},
	doi = {10.1007/s10515-020-00271-w},
	pages = {91--118},
	number = {1},
	journaltitle = {Automated Software Engineering},
	shortjournal = {Autom Softw Eng},
	author = {Alkhazi, Bader and Abid, Chaima and Kessentini, Marouane and Leroy, Dorian and Wimmer, Manuel},
	urldate = {2021-07-04},
	date = {2020-06},
	langid = {english},
	keywords = {xno}
}

@article{zhang_improved_2020,
	title = {An improved {MobileNet}-{SSD} algorithm for automatic defect detection on vehicle body paint},
	volume = {79},
	issn = {1380-7501, 1573-7721},
	url = {https://link.springer.com/10.1007/s11042-020-09152-6},
	doi = {10.1007/s11042-020-09152-6},
	pages = {23367--23385},
	number = {31},
	journaltitle = {Multimedia Tools and Applications},
	shortjournal = {Multimed Tools Appl},
	author = {Zhang, Jindong and Xu, Jiabin and Zhu, Linyao and Zhang, Kunpeng and Liu, Tong and Wang, Donghui and Wang, Xue},
	urldate = {2021-07-04},
	date = {2020-08},
	langid = {english},
	keywords = {xno}
}

@article{zimmermann_adaptive_2020,
	title = {An adaptive system for autonomous driving},
	volume = {28},
	issn = {0963-9314, 1573-1367},
	url = {https://link.springer.com/10.1007/s11219-020-09519-w},
	doi = {10.1007/s11219-020-09519-w},
	abstract = {Abstract
            Having systems that can adapt themselves in case of faults or changing environmental conditions is of growing interest for industry and especially for the automotive industry considering autonomous driving. In autonomous driving, it is vital to have a system that is able to cope with faults in order to enable the system to reach a safe state. In this paper, we present an adaptive control method that can be used for this purpose. The method selects alternative actions so that given goal states can be reached, providing the availability of a certain degree of redundancy. The action selection is based on weight models that are adapted over time, capturing the success rate of certain actions. Besides the method, we present a Java implementation and its validation based on two case studies motivated by the requirements of the autonomous driving domain. We show that the presented approach is applicable both in case of environmental changes but also in case of faults occurring during operation. In the latter case, the methods provide an adaptive behavior very much close to the optimal selection.},
	pages = {1189--1212},
	number = {3},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Zimmermann, Martin and Wotawa, Franz},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\6JM9XKFI\\Zimmermann and Wotawa - 2020 - An adaptive system for autonomous driving.pdf:application/pdf}
}

@article{adi_machine_2020,
	title = {Machine learning and data analytics for the {IoT}},
	volume = {32},
	issn = {0941-0643, 1433-3058},
	url = {https://link.springer.com/10.1007/s00521-020-04874-y},
	doi = {10.1007/s00521-020-04874-y},
	pages = {16205--16233},
	number = {20},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Adi, Erwin and Anwar, Adnan and Baig, Zubair and Zeadally, Sherali},
	urldate = {2021-07-04},
	date = {2020-10},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\SPT6KGBX\\Adi et al. - 2020 - Machine learning and data analytics for the IoT.pdf:application/pdf}
}

@article{heumuller_publish_2020,
	title = {Publish or perish, but do not forget your software artifacts},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09851-6},
	doi = {10.1007/s10664-020-09851-6},
	abstract = {Abstract
            Open-science initiatives have gained substantial momentum in computer science, and particularly in software-engineering research. A critical aspect of open-science is the public availability of artifacts (e.g., tools), which facilitates the replication, reproduction, extension, and verification of results. While we experienced that many artifacts are not publicly available, we are not aware of empirical evidence supporting this subjective claim. In this article, we report an empirical study on software artifact papers ({SAPs}) published at the International Conference on Software Engineering ({ICSE}), in which we investigated whether and how researchers have published their software artifacts, and whether this had scientific impact. Our dataset comprises 789 {ICSE} research track papers, including 604 {SAPs} (76.6 \%), from the years 2007 to 2017. While showing a positive trend towards artifact availability, our results are still sobering. Even in 2017, only 58.5 \% of the papers that stated to have developed a software artifact made that artifact publicly available. As we did find a small, but statistically significant, positive correlation between linking to artifacts in a paper and its scientific impact in terms of citations, we hope to motivate the research community to share more artifacts. With our insights, we aim to support the advancement of open science by discussing our results in the context of existing initiatives and guidelines. In particular, our findings advocate the need for clearly communicating artifacts and the use of non-commercial, persistent archives to provide replication packages.},
	pages = {4585--4616},
	number = {6},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Heumüller, Robert and Nielebock, Sebastian and Krüger, Jacob and Ortmeier, Frank},
	urldate = {2021-07-04},
	date = {2020-11},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\DLKME73A\\Heumüller et al. - 2020 - Publish or perish, but do not forget your software.pdf:application/pdf}
}

@article{benslimen_attacks_2021,
	title = {Attacks and failures prediction framework for a collaborative 5G mobile network},
	volume = {103},
	issn = {0010-485X, 1436-5057},
	url = {https://link.springer.com/10.1007/s00607-020-00893-8},
	doi = {10.1007/s00607-020-00893-8},
	pages = {1165--1181},
	number = {6},
	journaltitle = {Computing},
	shortjournal = {Computing},
	author = {Benslimen, Yosra and Sedjelmaci, Hichem and Manenti, Ana-Cristina},
	urldate = {2021-07-04},
	date = {2021-06},
	langid = {english},
	keywords = {xno}
}

@article{mustafa_analyzing_2021,
	title = {Analyzing gene polymorphism and metal folic acid interactions in neural tube defects using optimized deep recurrent neural networks},
	issn = {1617-4909, 1617-4917},
	url = {http://link.springer.com/10.1007/s00779-021-01538-z},
	doi = {10.1007/s00779-021-01538-z},
	journaltitle = {Personal and Ubiquitous Computing},
	shortjournal = {Pers Ubiquit Comput},
	author = {Mustafa, Ibrahim and Saad, Aldosary and Mahmoud, Mohamed H. and Alamery, Salman and Mahmoud, Nourelhoda M.},
	urldate = {2021-07-04},
	date = {2021-03-06},
	langid = {english},
	keywords = {xno}
}

@article{vassallo_how_2020,
	title = {How developers engage with static analysis tools in different contexts},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-019-09750-5},
	doi = {10.1007/s10664-019-09750-5},
	pages = {1419--1457},
	number = {2},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Vassallo, Carmine and Panichella, Sebastiano and Palomba, Fabio and Proksch, Sebastian and Gall, Harald C. and Zaidman, Andy},
	urldate = {2021-07-04},
	date = {2020-03},
	langid = {english},
	keywords = {xno},
	file = {Accepted Version:C\:\\Users\\michalm\\Zotero\\storage\\2PTRVBEY\\Vassallo et al. - 2020 - How developers engage with static analysis tools i.pdf:application/pdf}
}

@article{gleirscher_riskstructures_2021,
	title = {{RiskStructures}: A design algebra for risk-aware machines},
	issn = {0934-5043, 1433-299X},
	url = {https://link.springer.com/10.1007/s00165-021-00545-4},
	doi = {10.1007/s00165-021-00545-4},
	shorttitle = {{RiskStructures}},
	abstract = {Abstract
            
              Machines, such as mobile robots and delivery drones, incorporate controllers responsible for a task while
              handling risk
              (e.g. anticipating and mitigating hazards; preventing and alleviating accidents). We refer to machines with this capability as risk-awaremachines.
              Risk awareness
              includes robustness and resilience and complicates monitoring (i.e., introspection, sensing, prediction), decision making, and control. From an engineering perspective, risk awareness adds a range of dependability requirements to
              system assurance
              . Such assurance mandates a correct-by-construction approach to controller design, based on mathematical theory.We introduce {RiskStructures}, an algebraic framework for risk modelling intended to support the design of
              safety controllers
              for risk-aware machines. Using the concept of a
              risk factor
              as a modelling primitive, this framework provides facilities to construct, examine, and assure these controllers.We prove desirable algebraic properties of these facilities, and demonstrate their applicability by using them to specify key aspects of safety controllers for risk-aware automated driving and collaborative robots.},
	journaltitle = {Formal Aspects of Computing},
	shortjournal = {Form Asp Comp},
	author = {Gleirscher, Mario and Calinescu, Radu and Woodcock, Jim},
	urldate = {2021-07-04},
	date = {2021-05-26},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\5AF773DU\\Gleirscher et al. - 2021 - RiskStructures A design algebra for risk-aware ma.pdf:application/pdf}
}

@article{chen_safety_2021,
	title = {Safety evaluation method of hoisting machinery based on neural network},
	volume = {33},
	issn = {0941-0643, 1433-3058},
	url = {https://link.springer.com/10.1007/s00521-020-04963-y},
	doi = {10.1007/s00521-020-04963-y},
	pages = {565--576},
	number = {2},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Chen, Fujiang},
	urldate = {2021-07-04},
	date = {2021-01},
	langid = {english},
	keywords = {xno}
}

@article{aronshtam_can_2021,
	title = {Can we do better? a classification of algorithm run-time-complexity improvement using the {SOLO} taxonomy},
	issn = {1360-2357, 1573-7608},
	url = {https://link.springer.com/10.1007/s10639-021-10532-0},
	doi = {10.1007/s10639-021-10532-0},
	shorttitle = {Can we do better?},
	journaltitle = {Education and Information Technologies},
	shortjournal = {Educ Inf Technol},
	author = {Aronshtam, Lior and Shrot, Tammar and Shmallo, Ronit},
	urldate = {2021-07-04},
	date = {2021-05-05},
	langid = {english},
	keywords = {xno}
}

@article{wang_iiag_2021,
	title = {{IIAG}: a data-driven and theory-inspired approach for advising how to interact with new remote collaborators in {OSS} teams},
	volume = {28},
	issn = {0928-8910, 1573-7535},
	url = {https://link.springer.com/10.1007/s10515-021-00283-0},
	doi = {10.1007/s10515-021-00283-0},
	shorttitle = {{IIAG}},
	pages = {5},
	number = {2},
	journaltitle = {Automated Software Engineering},
	shortjournal = {Autom Softw Eng},
	author = {Wang, Yi and Redmiles, David},
	urldate = {2021-07-04},
	date = {2021-11},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\SXUR4QHT\\Wang and Redmiles - 2021 - IIAG a data-driven and theory-inspired approach f.pdf:application/pdf}
}

@article{mohamed_state_2020,
	title = {The state of the art and taxonomy of big data analytics: view from new big data framework},
	volume = {53},
	issn = {0269-2821, 1573-7462},
	url = {http://link.springer.com/10.1007/s10462-019-09685-9},
	doi = {10.1007/s10462-019-09685-9},
	shorttitle = {The state of the art and taxonomy of big data analytics},
	pages = {989--1037},
	number = {2},
	journaltitle = {Artificial Intelligence Review},
	shortjournal = {Artif Intell Rev},
	author = {Mohamed, Azlinah and Najafabadi, Maryam Khanian and Wah, Yap Bee and Zaman, Ezzatul Akmal Kamaru and Maskat, Ruhaila},
	urldate = {2021-07-04},
	date = {2020-02},
	langid = {english},
	keywords = {xno}
}

@article{kaur_fuzzy_2020,
	title = {A Fuzzy Approach for Estimating Quality of Aspect Oriented Systems},
	volume = {48},
	issn = {0885-7458, 1573-7640},
	url = {http://link.springer.com/10.1007/s10766-018-0618-2},
	doi = {10.1007/s10766-018-0618-2},
	pages = {850--869},
	number = {5},
	journaltitle = {International Journal of Parallel Programming},
	shortjournal = {Int J Parallel Prog},
	author = {Kaur, Puneet Jai and Kaushal, Sakshi},
	urldate = {2021-07-04},
	date = {2020-10},
	langid = {english},
	keywords = {xno}
}

@article{verma_auto-scaling_2021,
	title = {Auto-scaling techniques for {IoT}-based cloud applications: a review},
	issn = {1386-7857, 1573-7543},
	url = {http://link.springer.com/10.1007/s10586-021-03265-9},
	doi = {10.1007/s10586-021-03265-9},
	shorttitle = {Auto-scaling techniques for {IoT}-based cloud applications},
	journaltitle = {Cluster Computing},
	shortjournal = {Cluster Comput},
	author = {Verma, Shveta and Bala, Anju},
	urldate = {2021-07-04},
	date = {2021-04-03},
	langid = {english},
	keywords = {xno}
}

@article{suo_extension_2020,
	title = {Extension of labeled multiple attribute decision making based on fuzzy neighborhood three-way decision},
	volume = {32},
	issn = {0941-0643, 1433-3058},
	url = {https://link.springer.com/10.1007/s00521-020-04946-z},
	doi = {10.1007/s00521-020-04946-z},
	pages = {17731--17758},
	number = {23},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Suo, Mingliang and Cheng, Yujie and Zhuang, Chunqing and Ding, Yu and Lu, Chen and Tao, Laifa},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno}
}

@article{wu_semigroup_2020,
	title = {Semigroup of fuzzy automata and its application for fast accurate fault diagnosis on machine and anti-fatigue control},
	volume = {50},
	issn = {0924-669X, 1573-7497},
	url = {http://link.springer.com/10.1007/s10489-019-01611-4},
	doi = {10.1007/s10489-019-01611-4},
	pages = {1542--1557},
	number = {5},
	journaltitle = {Applied Intelligence},
	shortjournal = {Appl Intell},
	author = {Wu, Qing E and Guang, Mengke and Chen, Hu and Sun, Lijun},
	urldate = {2021-07-04},
	date = {2020-05},
	langid = {english},
	keywords = {xno}
}

@article{ma_testing_2021,
	title = {Testing self-healing cyber-physical systems under uncertainty with reinforcement learning: an empirical study},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-09941-z},
	doi = {10.1007/s10664-021-09941-z},
	shorttitle = {Testing self-healing cyber-physical systems under uncertainty with reinforcement learning},
	pages = {52},
	number = {3},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Ma, Tao and Ali, Shaukat and Yue, Tao},
	urldate = {2021-07-04},
	date = {2021-05},
	langid = {english},
	keywords = {xno}
}

@article{wu_networked_2020,
	title = {Networked Fault Detection of Field Equipment from Monitoring System Based on Fusing of Motion Sensing and Appearance Information},
	volume = {79},
	issn = {1380-7501, 1573-7721},
	url = {https://link.springer.com/10.1007/s11042-020-08885-8},
	doi = {10.1007/s11042-020-08885-8},
	pages = {16319--16348},
	number = {23},
	journaltitle = {Multimedia Tools and Applications},
	shortjournal = {Multimed Tools Appl},
	author = {Wu, Chunxue and Guo, Shengnan and Wu, Yan and Ai, Jun and Xiong, Neal N.},
	urldate = {2021-07-04},
	date = {2020-06},
	langid = {english},
	keywords = {xno}
}

@article{park_root_2021,
	title = {Root Cause Analysis Based on Relations Among Sentiment Words},
	issn = {1866-9956, 1866-9964},
	url = {https://link.springer.com/10.1007/s12559-021-09872-3},
	doi = {10.1007/s12559-021-09872-3},
	journaltitle = {Cognitive Computation},
	shortjournal = {Cogn Comput},
	author = {Park, Sang-Min and Kim, Young-Gab},
	urldate = {2021-07-04},
	date = {2021-05-04},
	langid = {english},
	keywords = {xno}
}

@article{le_frontier_2020,
	title = {A Frontier: Dependable, Reliable and Secure Machine Learning for Network/System Management},
	volume = {28},
	issn = {1064-7570, 1573-7705},
	url = {http://link.springer.com/10.1007/s10922-020-09512-5},
	doi = {10.1007/s10922-020-09512-5},
	shorttitle = {A Frontier},
	pages = {827--849},
	number = {4},
	journaltitle = {Journal of Network and Systems Management},
	shortjournal = {J Netw Syst Manage},
	author = {Le, Duc C. and Zincir-Heywood, Nur},
	urldate = {2021-07-04},
	date = {2020-10},
	langid = {english},
	keywords = {xno}
}

@article{lima_smart_2021,
	title = {Smart predictive maintenance for high-performance computing systems: a literature review},
	issn = {0920-8542, 1573-0484},
	url = {https://link.springer.com/10.1007/s11227-021-03811-7},
	doi = {10.1007/s11227-021-03811-7},
	shorttitle = {Smart predictive maintenance for high-performance computing systems},
	journaltitle = {The Journal of Supercomputing},
	shortjournal = {J Supercomput},
	author = {Lima, André Luis da Cunha Dantas and Aranha, Vitor Moraes and Carvalho, Caio Jordão de Lima and Nascimento, Erick Giovani Sperandio},
	urldate = {2021-07-04},
	date = {2021-04-27},
	langid = {english},
	keywords = {xno}
}

@article{shah_heart_2020,
	title = {Heart Disease Prediction using Machine Learning Techniques},
	volume = {1},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-020-00365-y},
	doi = {10.1007/s42979-020-00365-y},
	pages = {345},
	number = {6},
	journaltitle = {{SN} Computer Science},
	shortjournal = {{SN} {COMPUT}. {SCI}.},
	author = {Shah, Devansh and Patel, Samir and Bharti, Santosh Kumar},
	urldate = {2021-07-04},
	date = {2020-11},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\PWKQGJWP\\Shah et al. - 2020 - Heart Disease Prediction using Machine Learning Te.pdf:application/pdf}
}

@article{amanatidis_evaluating_2020,
	title = {Evaluating the agreement among technical debt measurement tools: building an empirical benchmark of technical debt liabilities},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09869-w},
	doi = {10.1007/s10664-020-09869-w},
	shorttitle = {Evaluating the agreement among technical debt measurement tools},
	pages = {4161--4204},
	number = {5},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Amanatidis, Theodoros and Mittas, Nikolaos and Moschou, Athanasia and Chatzigeorgiou, Alexander and Ampatzoglou, Apostolos and Angelis, Lefteris},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xno}
}

@article{alshinwan_dragonfly_2021,
	title = {Dragonfly algorithm: a comprehensive survey of its results, variants, and applications},
	volume = {80},
	issn = {1380-7501, 1573-7721},
	url = {https://link.springer.com/10.1007/s11042-020-10255-3},
	doi = {10.1007/s11042-020-10255-3},
	shorttitle = {Dragonfly algorithm},
	pages = {14979--15016},
	number = {10},
	journaltitle = {Multimedia Tools and Applications},
	shortjournal = {Multimed Tools Appl},
	author = {Alshinwan, Mohammad and Abualigah, Laith and Shehab, Mohammad and Elaziz, Mohamed Abd and Khasawneh, Ahmad M. and Alabool, Hamzeh and Hamad, Husam Al},
	urldate = {2021-07-04},
	date = {2021-04},
	langid = {english},
	keywords = {xno}
}

@article{guggulothu_code_2020,
	title = {Code smell detection using multi-label classification approach},
	volume = {28},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-020-09498-y},
	doi = {10.1007/s11219-020-09498-y},
	pages = {1063--1086},
	number = {3},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Guggulothu, Thirupathi and Moiz, Salman Abdul},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xno},
	file = {Submitted Version:C\:\\Users\\michalm\\Zotero\\storage\\QKFGWTZE\\Guggulothu and Moiz - 2020 - Code smell detection using multi-label classificat.pdf:application/pdf}
}

@article{kumari_hybridized_2021,
	title = {Hybridized approach of image segmentation in classification of fruit mango using {BPNN} and discriminant analyzer},
	volume = {80},
	issn = {1380-7501, 1573-7721},
	url = {http://link.springer.com/10.1007/s11042-020-09747-z},
	doi = {10.1007/s11042-020-09747-z},
	pages = {4943--4973},
	number = {4},
	journaltitle = {Multimedia Tools and Applications},
	shortjournal = {Multimed Tools Appl},
	author = {Kumari, Neeraj and Kr. Bhatt, Ashutosh and Kr. Dwivedi, Rakesh and Belwal, Rajendra},
	urldate = {2021-07-04},
	date = {2021-02},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\4Z8E6PMQ\\Kumari et al. - 2021 - Hybridized approach of image segmentation in class.pdf:application/pdf}
}

@article{tan_surface_2021,
	title = {Surface defect identification of Citrus based on {KF}-2D-Renyi and {ABC}-{SVM}},
	volume = {80},
	issn = {1380-7501, 1573-7721},
	url = {http://link.springer.com/10.1007/s11042-020-10036-y},
	doi = {10.1007/s11042-020-10036-y},
	pages = {9109--9136},
	number = {6},
	journaltitle = {Multimedia Tools and Applications},
	shortjournal = {Multimed Tools Appl},
	author = {Tan, Aijiao and Zhou, Guoxiong and He, Mingfang},
	urldate = {2021-07-04},
	date = {2021-03},
	langid = {english},
	keywords = {xno}
}

@article{rios_practitioners_2020,
	title = {The practitioners’ point of view on the concept of technical debt and its causes and consequences: a design for a global family of industrial surveys and its first results from Brazil},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-020-09832-9},
	doi = {10.1007/s10664-020-09832-9},
	shorttitle = {The practitioners’ point of view on the concept of technical debt and its causes and consequences},
	pages = {3216--3287},
	number = {5},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Rios, Nicolli and Spínola, Rodrigo Oliveira and Mendonça, Manoel and Seaman, Carolyn},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xno}
}

@article{kim_are_2021,
	title = {Are datasets for information retrieval-based bug localization techniques trustworthy?: Impact analysis of bug types on {IRBL}},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-021-09946-8},
	doi = {10.1007/s10664-021-09946-8},
	shorttitle = {Are datasets for information retrieval-based bug localization techniques trustworthy?},
	pages = {35},
	number = {3},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Kim, Misoo and Lee, Eunseok},
	urldate = {2021-07-04},
	date = {2021-05},
	langid = {english},
	keywords = {xno}
}

@article{franca_architecture-driven_2020,
	title = {Architecture-Driven Development of an Electronic Health Record Considering the {SOAQM} Quality Model},
	volume = {1},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-020-00150-x},
	doi = {10.1007/s42979-020-00150-x},
	pages = {140},
	number = {3},
	journaltitle = {{SN} Computer Science},
	shortjournal = {{SN} {COMPUT}. {SCI}.},
	author = {França, Joyce M. S. and da Costa Junior, Ademir Almeida and Soares, Michel S.},
	urldate = {2021-07-04},
	date = {2020-05},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\D7L63H6W\\França et al. - 2020 - Architecture-Driven Development of an Electronic H.pdf:application/pdf}
}

@article{you_towards_2021,
	title = {Towards 6G wireless communication networks: vision, enabling technologies, and new paradigm shifts},
	volume = {64},
	issn = {1674-733X, 1869-1919},
	url = {http://link.springer.com/10.1007/s11432-020-2955-6},
	doi = {10.1007/s11432-020-2955-6},
	shorttitle = {Towards 6G wireless communication networks},
	abstract = {Abstract
            The fifth generation (5G) wireless communication networks are being deployed worldwide from 2020 and more capabilities are in the process of being standardized, such as mass connectivity, ultra-reliability, and guaranteed low latency. However, 5G will not meet all requirements of the future in 2030 and beyond, and sixth generation (6G) wireless communication networks are expected to provide global coverage, enhanced spectral/energy/cost efficiency, better intelligence level and security, etc. To meet these requirements, 6G networks will rely on new enabling technologies, i.e., air interface and transmission technologies and novel network architecture, such as waveform design, multiple access, channel coding schemes, multi-antenna technologies, network slicing, cell-free architecture, and cloud/fog/edge computing. Our vision on 6G is that it will have four new paradigm shifts. First, to satisfy the requirement of global coverage, 6G will not be limited to terrestrial communication networks, which will need to be complemented with non-terrestrial networks such as satellite and unmanned aerial vehicle ({UAV}) communication networks, thus achieving a space-air-ground-sea integrated communication network. Second, all spectra will be fully explored to further increase data rates and connection density, including the sub-6 {GHz}, millimeter wave ({mmWave}), terahertz ({THz}), and optical frequency bands. Third, facing the big datasets generated by the use of extremely heterogeneous networks, diverse communication scenarios, large numbers of antennas, wide bandwidths, and new service requirements, 6G networks will enable a new range of smart applications with the aid of artificial intelligence ({AI}) and big data technologies. Fourth, network security will have to be strengthened when developing 6G networks. This article provides a comprehensive survey of recent advances and future trends in these four aspects. Clearly, 6G with additional technical requirements beyond those of 5G will enable faster and further communications to the extent that the boundary between physical and cyber worlds disappears.},
	pages = {110301},
	number = {1},
	journaltitle = {Science China Information Sciences},
	shortjournal = {Sci. China Inf. Sci.},
	author = {You, Xiaohu and Wang, Cheng-Xiang and Huang, Jie and Gao, Xiqi and Zhang, Zaichen and Wang, Mao and Huang, Yongming and Zhang, Chuan and Jiang, Yanxiang and Wang, Jiaheng and Zhu, Min and Sheng, Bin and Wang, Dongming and Pan, Zhiwen and Zhu, Pengcheng and Yang, Yang and Liu, Zening and Zhang, Ping and Tao, Xiaofeng and Li, Shaoqian and Chen, Zhi and Ma, Xinying and I, Chih-Lin and Han, Shuangfeng and Li, Ke and Pan, Chengkang and Zheng, Zhimin and Hanzo, Lajos and Shen, Xuemin (Sherman) and Guo, Yingjie Jay and Ding, Zhiguo and Haas, Harald and Tong, Wen and Zhu, Peiying and Yang, Ganghua and Wang, Jun and Larsson, Erik G. and Ngo, Hien Quoc and Hong, Wei and Wang, Haiming and Hou, Debin and Chen, Jixin and Chen, Zhe and Hao, Zhangcheng and Li, Geoffrey Ye and Tafazolli, Rahim and Gao, Yue and Poor, H. Vincent and Fettweis, Gerhard P. and Liang, Ying-Chang},
	urldate = {2021-07-04},
	date = {2021-01},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\GVCLC3ZH\\You et al. - 2021 - Towards 6G wireless communication networks vision.pdf:application/pdf}
}

@article{xiao_architecture-level_2020,
	title = {Architecture-level particular risk modeling and analysis for a cyber-physical system with {AADL}},
	volume = {21},
	issn = {2095-9184, 2095-9230},
	url = {http://link.springer.com/10.1631/FITEE.2000428},
	doi = {10.1631/FITEE.2000428},
	pages = {1607--1625},
	number = {11},
	journaltitle = {Frontiers of Information Technology \& Electronic Engineering},
	shortjournal = {Front Inform Technol Electron Eng},
	author = {Xiao, Ming-rui and Dong, Yun-wei and Gou, Qian-wen and Xue, Feng and Chen, Yong-hua},
	urldate = {2021-07-04},
	date = {2020-11},
	langid = {english},
	keywords = {xno}
}

@article{tanha_boosting_2020,
	title = {Boosting methods for multi-class imbalanced data classification: an experimental review},
	volume = {7},
	issn = {2196-1115},
	url = {https://journalofbigdata.springeropen.com/articles/10.1186/s40537-020-00349-y},
	doi = {10.1186/s40537-020-00349-y},
	shorttitle = {Boosting methods for multi-class imbalanced data classification},
	pages = {70},
	number = {1},
	journaltitle = {Journal of Big Data},
	shortjournal = {J Big Data},
	author = {Tanha, Jafar and Abdi, Yousef and Samadi, Negin and Razzaghi, Nazila and Asadpour, Mohammad},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\7ADVIQLX\\Tanha et al. - 2020 - Boosting methods for multi-class imbalanced data c.pdf:application/pdf}
}

@article{gupta_reliability_2021,
	title = {Reliability and Survivability Analysis of Long-Term Evolution Vehicular Ad-Hoc Networks: An Analytical Approach},
	volume = {29},
	issn = {1064-7570, 1573-7705},
	url = {http://link.springer.com/10.1007/s10922-020-09582-5},
	doi = {10.1007/s10922-020-09582-5},
	shorttitle = {Reliability and Survivability Analysis of Long-Term Evolution Vehicular Ad-Hoc Networks},
	pages = {11},
	number = {2},
	journaltitle = {Journal of Network and Systems Management},
	shortjournal = {J Netw Syst Manage},
	author = {Gupta, Shivani and Khaitan, Vandana},
	urldate = {2021-07-04},
	date = {2021-04},
	langid = {english},
	keywords = {xno}
}

@article{wu_intelligent_2021,
	title = {Intelligent fault diagnosis of rolling bearings using a semi-supervised convolutional neural network},
	volume = {51},
	issn = {0924-669X, 1573-7497},
	url = {http://link.springer.com/10.1007/s10489-020-02006-6},
	doi = {10.1007/s10489-020-02006-6},
	pages = {2144--2160},
	number = {4},
	journaltitle = {Applied Intelligence},
	shortjournal = {Appl Intell},
	author = {Wu, Yaochun and Zhao, Rongzhen and Jin, Wuyin and He, Tianjing and Ma, Sencai and Shi, Mingkuan},
	urldate = {2021-07-04},
	date = {2021-04},
	langid = {english},
	keywords = {xno}
}

@article{taylor_guidance_2020,
	title = {Guidance systems: from autonomous directives to legal sensor-bilities},
	issn = {0951-5666, 1435-5655},
	url = {http://link.springer.com/10.1007/s00146-020-01012-z},
	doi = {10.1007/s00146-020-01012-z},
	shorttitle = {Guidance systems},
	journaltitle = {{AI} \& {SOCIETY}},
	shortjournal = {{AI} \& Soc},
	author = {Taylor, Simon M. and De Leeuw, Marc},
	urldate = {2021-07-04},
	date = {2020-08-18},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\DDAIXI5R\\Taylor and De Leeuw - 2020 - Guidance systems from autonomous directives to le.pdf:application/pdf}
}

@article{masood_machine_2021,
	title = {A machine learning approach for performance-oriented decision support in service-oriented architectures},
	volume = {56},
	issn = {0925-9902, 1573-7675},
	url = {http://link.springer.com/10.1007/s10844-020-00617-6},
	doi = {10.1007/s10844-020-00617-6},
	pages = {255--277},
	number = {2},
	journaltitle = {Journal of Intelligent Information Systems},
	shortjournal = {J Intell Inf Syst},
	author = {Masood, Tehreem and Cherifi, Chantal Bonner and Moalla, Nejib},
	urldate = {2021-07-04},
	date = {2021-04},
	langid = {english},
	keywords = {xno}
}

@article{zhang_developer_2020,
	title = {Developer recommendation for Topcoder through a meta-learning based policy model},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-019-09755-0},
	doi = {10.1007/s10664-019-09755-0},
	pages = {859--889},
	number = {1},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Zhang, Zhenyu and Sun, Hailong and Zhang, Hongyu},
	urldate = {2021-07-04},
	date = {2020-01},
	langid = {english},
	keywords = {xno}
}

@article{shaik_intelligent_2021,
	title = {An intelligent model to predict the life condition of crude oil pipelines using artificial neural networks},
	issn = {0941-0643, 1433-3058},
	url = {https://link.springer.com/10.1007/s00521-021-06116-1},
	doi = {10.1007/s00521-021-06116-1},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Shaik, Nagoor Basha and Pedapati, Srinivasa Rao and Othman, A. R. and Bingi, Kishore and Dzubir, Faizul Azly Abd},
	urldate = {2021-07-04},
	date = {2021-05-26},
	langid = {english},
	keywords = {xno}
}

@article{anjorin_benchmarking_2020,
	title = {Benchmarking bidirectional transformations: theory, implementation, application, and assessment},
	volume = {19},
	issn = {1619-1366, 1619-1374},
	url = {http://link.springer.com/10.1007/s10270-019-00752-x},
	doi = {10.1007/s10270-019-00752-x},
	shorttitle = {Benchmarking bidirectional transformations},
	pages = {647--691},
	number = {3},
	journaltitle = {Software and Systems Modeling},
	shortjournal = {Softw Syst Model},
	author = {Anjorin, Anthony and Buchmann, Thomas and Westfechtel, Bernhard and Diskin, Zinovy and Ko, Hsiang-Shang and Eramo, Romina and Hinkel, Georg and Samimi-Dehkordi, Leila and Zündorf, Albert},
	urldate = {2021-07-04},
	date = {2020-05},
	langid = {english},
	keywords = {xno}
}

@article{sleimi_automated_2021,
	title = {An automated framework for the extraction of semantic legal metadata from legal texts},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-020-09933-5},
	doi = {10.1007/s10664-020-09933-5},
	pages = {43},
	number = {3},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Sleimi, Amin and Sannier, Nicolas and Sabetzadeh, Mehrdad and Briand, Lionel and Ceci, Marcello and Dann, John},
	urldate = {2021-07-04},
	date = {2021-05},
	langid = {english},
	keywords = {xno},
	file = {Submitted Version:C\:\\Users\\michalm\\Zotero\\storage\\7WPKNACR\\Sleimi et al. - 2021 - An automated framework for the extraction of seman.pdf:application/pdf}
}

@article{wankhade_data_2020,
	title = {Data stream classification: a review},
	volume = {3},
	issn = {2520-8438, 2520-8446},
	url = {https://link.springer.com/10.1007/s42044-020-00061-3},
	doi = {10.1007/s42044-020-00061-3},
	shorttitle = {Data stream classification},
	pages = {239--260},
	number = {4},
	journaltitle = {Iran Journal of Computer Science},
	shortjournal = {Iran J Comput Sci},
	author = {Wankhade, Kapil K. and Dongre, Snehlata S. and Jondhale, Kalpana C.},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno}
}

@article{nassiri_joint_2020,
	title = {A joint energy- and {QoS}-aware routing mechanism for {WMNs} using software-defined networking paradigm},
	volume = {76},
	issn = {0920-8542, 1573-0484},
	url = {http://link.springer.com/10.1007/s11227-019-03000-7},
	doi = {10.1007/s11227-019-03000-7},
	pages = {68--86},
	number = {1},
	journaltitle = {The Journal of Supercomputing},
	shortjournal = {J Supercomput},
	author = {Nassiri, Mohammad and Mohammadi, Reza},
	urldate = {2021-07-04},
	date = {2020-01},
	langid = {english},
	keywords = {xno}
}

@article{salza_third-party_2020,
	title = {Third-party libraries in mobile apps: When, how, and why developers update them},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-019-09754-1},
	doi = {10.1007/s10664-019-09754-1},
	shorttitle = {Third-party libraries in mobile apps},
	pages = {2341--2377},
	number = {3},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Salza, Pasquale and Palomba, Fabio and Di Nucci, Dario and De Lucia, Andrea and Ferrucci, Filomena},
	urldate = {2021-07-04},
	date = {2020-05},
	langid = {english},
	keywords = {xno}
}

@article{chelly_dagdia_biological_2021,
	title = {Biological computation and computational biology: survey, challenges, and discussion},
	issn = {0269-2821, 1573-7462},
	url = {http://link.springer.com/10.1007/s10462-020-09951-1},
	doi = {10.1007/s10462-020-09951-1},
	shorttitle = {Biological computation and computational biology},
	journaltitle = {Artificial Intelligence Review},
	shortjournal = {Artif Intell Rev},
	author = {Chelly Dagdia, Zaineb and Avdeyev, Pavel and Bayzid, Md. Shamsuzzoha},
	urldate = {2021-07-04},
	date = {2021-01-27},
	langid = {english},
	keywords = {xno},
	file = {Submitted Version:C\:\\Users\\michalm\\Zotero\\storage\\727WLF9Q\\Chelly Dagdia et al. - 2021 - Biological computation and computational biology .pdf:application/pdf}
}

@article{ye_automated_2021,
	title = {Automated patch assessment for program repair at scale},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09920-w},
	doi = {10.1007/s10664-020-09920-w},
	abstract = {Abstract
            In this paper, we do automatic correctness assessment for patches generated by program repair systems. We consider the human-written patch as ground truth oracle and randomly generate tests based on it, a technique proposed by Shamshiri et al., called Random testing with Ground Truth ({RGT}) in this paper. We build a curated dataset of 638 patches for Defects4J generated by 14 state-of-the-art repair systems, we evaluate automated patch assessment on this dataset. The results of this study are novel and significant: First, we improve the state of the art performance of automatic patch assessment with {RGT} by 190\% by improving the oracle; Second, we show that {RGT} is reliable enough to help scientists to do overfitting analysis when they evaluate program repair systems; Third, we improve the external validity of the program repair knowledge with the largest study ever.},
	pages = {20},
	number = {2},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Ye, He and Martinez, Matias and Monperrus, Martin},
	urldate = {2021-07-04},
	date = {2021-03},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\Y9WGQ836\\Ye et al. - 2021 - Automated patch assessment for program repair at s.pdf:application/pdf}
}

@article{shakarami_data_2021,
	title = {Data replication schemes in cloud computing: a survey},
	issn = {1386-7857, 1573-7543},
	url = {https://link.springer.com/10.1007/s10586-021-03283-7},
	doi = {10.1007/s10586-021-03283-7},
	shorttitle = {Data replication schemes in cloud computing},
	journaltitle = {Cluster Computing},
	shortjournal = {Cluster Comput},
	author = {Shakarami, Ali and Ghobaei-Arani, Mostafa and Shahidinejad, Ali and Masdari, Mohammad and Shakarami, Hamid},
	urldate = {2021-07-04},
	date = {2021-04-16},
	langid = {english},
	keywords = {xno}
}

@article{shu_how_2021,
	title = {How to Better Distinguish Security Bug Reports (Using Dual Hyperparameter Optimization)},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-020-09906-8},
	doi = {10.1007/s10664-020-09906-8},
	pages = {53},
	number = {3},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Shu, Rui and Xia, Tianpei and Chen, Jianfeng and Williams, Laurie and Menzies, Tim},
	urldate = {2021-07-04},
	date = {2021-05},
	langid = {english},
	keywords = {xno},
	file = {Submitted Version:C\:\\Users\\michalm\\Zotero\\storage\\I3GSVLNT\\Shu et al. - 2021 - How to Better Distinguish Security Bug Reports (Us.pdf:application/pdf}
}

@article{sharma_empirical_2020,
	title = {An empirical investigation on the relationship between design and architecture smells},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09847-2},
	doi = {10.1007/s10664-020-09847-2},
	pages = {4020--4068},
	number = {5},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Sharma, Tushar and Singh, Paramvir and Spinellis, Diomidis},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xno}
}

@article{kovacs_monitoring_2020,
	title = {Monitoring Pneumatic Actuators’ Behavior Using Real-World Data Set},
	volume = {1},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-020-00202-2},
	doi = {10.1007/s42979-020-00202-2},
	abstract = {Abstract
            Developing a big data signal processing method is to monitor the behavior of a common component: a pneumatic actuator. The method is aimed at supporting condition-based maintenance activities: monitoring signals over an extended period, and identifying, classifying different machine states that may indicate abnormal behavior. Furthermore, preparing a balanced data set for training supervised machine learning models that represent the component’s all identified conditions. Peak detection, garbage removal and down-sampling by interpolation were applied for signal preprocessing. Undersampling the over-represented signals, Ward’s hierarchical clustering with multivariate Euclidean distance calculation and Kohonen self-organizing map ({KSOM}) methods were used for identifying and grouping similar signal patterns. The study demonstrated that the behavior of equipment displaying complex signals could be monitored with the method described. Both hierarchical clustering and {KSOM} are suitable methods for identifying and clustering signals of different machine states that may be overlooked if screened by humans. Using the proposed methods, signals could be screened thoroughly and over a long period of time that is critical when failures or abnormal behavior is rare. Visual display of the identified clusters over time could help analyzing the deterioration of machine conditions. The clustered signals could be used to create a balanced set of training data for developing supervised machine learning models to automatically identify previously recognized machine conditions that indicate abnormal behavior.},
	pages = {196},
	number = {4},
	journaltitle = {{SN} Computer Science},
	shortjournal = {{SN} {COMPUT}. {SCI}.},
	author = {Kovacs, Tibor and Ko, Andrea},
	urldate = {2021-07-04},
	date = {2020-07},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\TJFTNXPC\\Kovacs and Ko - 2020 - Monitoring Pneumatic Actuators’ Behavior Using Rea.pdf:application/pdf}
}

@article{oteyo_survey_2021,
	title = {A Survey on Mobile Applications for Smart Agriculture: Making Use of Mobile Software in Modern Farming},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {https://link.springer.com/10.1007/s42979-021-00700-x},
	doi = {10.1007/s42979-021-00700-x},
	shorttitle = {A Survey on Mobile Applications for Smart Agriculture},
	pages = {293},
	number = {4},
	journaltitle = {{SN} Computer Science},
	shortjournal = {{SN} {COMPUT}. {SCI}.},
	author = {Oteyo, Isaac Nyabisa and Marra, Matteo and Kimani, Stephen and Meuter, Wolfgang De and Boix, Elisa Gonzalez},
	urldate = {2021-07-04},
	date = {2021-07},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\2GCXKZV8\\Oteyo et al. - 2021 - A Survey on Mobile Applications for Smart Agricult.pdf:application/pdf}
}

@article{ripan_data-driven_2021,
	title = {A Data-Driven Heart Disease Prediction Model Through K-Means Clustering-Based Anomaly Detection},
	volume = {2},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-021-00518-7},
	doi = {10.1007/s42979-021-00518-7},
	pages = {112},
	number = {2},
	journaltitle = {{SN} Computer Science},
	shortjournal = {{SN} {COMPUT}. {SCI}.},
	author = {Ripan, Rony Chowdhury and Sarker, Iqbal H. and Hossain, Syed Md. Minhaz and Anwar, Md. Musfique and Nowrozy, Raza and Hoque, Mohammed Moshiul and Furhad, Md. Hasan},
	urldate = {2021-07-04},
	date = {2021-04},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\7T8F8PTC\\Ripan et al. - 2021 - A Data-Driven Heart Disease Prediction Model Throu.pdf:application/pdf}
}

@article{yu_using_2021,
	title = {Using {BiLSTM} with attention mechanism to automatically detect self-admitted technical debt},
	volume = {15},
	issn = {2095-2228, 2095-2236},
	url = {https://link.springer.com/10.1007/s11704-020-9281-z},
	doi = {10.1007/s11704-020-9281-z},
	pages = {154208},
	number = {4},
	journaltitle = {Frontiers of Computer Science},
	shortjournal = {Front. Comput. Sci.},
	author = {Yu, Dongjin and Wang, Lin and Chen, Xin and Chen, Jie},
	urldate = {2021-07-04},
	date = {2021-08},
	langid = {english},
	keywords = {xno}
}

@article{choi_using_2020,
	title = {Using deep learning to solve computer security challenges: a survey},
	volume = {3},
	issn = {2523-3246},
	url = {https://cybersecurity.springeropen.com/articles/10.1186/s42400-020-00055-5},
	doi = {10.1186/s42400-020-00055-5},
	shorttitle = {Using deep learning to solve computer security challenges},
	pages = {15},
	number = {1},
	journaltitle = {Cybersecurity},
	shortjournal = {Cybersecur},
	author = {Choi, Yoon-Ho and Liu, Peng and Shang, Zitong and Wang, Haizhou and Wang, Zhilong and Zhang, Lan and Zhou, Junwei and Zou, Qingtian},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\JBRCVPKU\\Choi et al. - 2020 - Using deep learning to solve computer security cha.pdf:application/pdf}
}

@article{younas_extraction_2020,
	title = {Extraction of non-functional requirement using semantic similarity distance},
	volume = {32},
	issn = {0941-0643, 1433-3058},
	url = {http://link.springer.com/10.1007/s00521-019-04226-5},
	doi = {10.1007/s00521-019-04226-5},
	pages = {7383--7397},
	number = {11},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Younas, Muhammad and Jawawi, D. N. A. and Ghani, Imran and Shah, Muhammad Arif},
	urldate = {2021-07-04},
	date = {2020-06},
	langid = {english},
	keywords = {xno}
}

@article{li_applications_2020,
	title = {Applications of deep convolutional neural networks in prospecting prediction based on two-dimensional geological big data},
	volume = {32},
	issn = {0941-0643, 1433-3058},
	url = {http://link.springer.com/10.1007/s00521-019-04341-3},
	doi = {10.1007/s00521-019-04341-3},
	pages = {2037--2053},
	number = {7},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Li, Shi and Chen, Jianping and Xiang, Jie},
	urldate = {2021-07-04},
	date = {2020-04},
	langid = {english},
	keywords = {xno}
}

@article{cheng_coqtl_2020,
	title = {{CoqTL}: a Coq {DSL} for rule-based model transformation},
	volume = {19},
	issn = {1619-1366, 1619-1374},
	url = {http://link.springer.com/10.1007/s10270-019-00765-6},
	doi = {10.1007/s10270-019-00765-6},
	shorttitle = {{CoqTL}},
	pages = {425--439},
	number = {2},
	journaltitle = {Software and Systems Modeling},
	shortjournal = {Softw Syst Model},
	author = {Cheng, Zheng and Tisi, Massimo and Douence, Rémi},
	urldate = {2021-07-04},
	date = {2020-03},
	langid = {english},
	keywords = {xno},
	file = {Submitted Version:C\:\\Users\\michalm\\Zotero\\storage\\T7UQBTF9\\Cheng et al. - 2020 - CoqTL a Coq DSL for rule-based model transformati.pdf:application/pdf}
}

@article{lindohf_software_2021,
	title = {Software product-line evaluation in the large},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09913-9},
	doi = {10.1007/s10664-020-09913-9},
	abstract = {Abstract
            Software product-line engineering is arguably one of the most successful methods for establishing large portfolios of software variants in an application domain. However, despite the benefits, establishing a product line requires substantial upfront investments into a software platform with a proper product-line architecture, into new software-engineering processes (domain engineering and application engineering), into business strategies with commercially successful product-line visions and financial planning, as well as into re-organization of development teams. Moreover, establishing a full-fledged product line is not always possible or desired, and thus organizations often adopt product-line engineering only to an extent that deemed necessary or was possible. However, understanding the current state of adoption, namely, the maturity or performance of product-line engineering in an organization, is challenging, while being crucial to steer investments. To this end, several measurement methods have been proposed in the literature, with the most prominent one being the Family Evaluation Framework ({FEF}), introduced almost two decades ago. Unfortunately, applying it is not straightforward, and the benefits of using it have not been assessed so far. We present an experience report of applying the {FEF} to nine medium- to large-scale product lines in the avionics domain. We discuss how we tailored and executed the {FEF}, together with the relevant adaptations and extensions we needed to perform. Specifically, we elicited the data for the {FEF} assessment with 27 interviews over a period of 11 months. We discuss experiences and assess the benefits of using the {FEF}, aiming at helping other organizations assessing their practices for engineering their portfolios of software variants.},
	pages = {30},
	number = {2},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Lindohf, Robert and Krüger, Jacob and Herzog, Erik and Berger, Thorsten},
	urldate = {2021-07-04},
	date = {2021-03},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\FHDS57M3\\Lindohf et al. - 2021 - Software product-line evaluation in the large.pdf:application/pdf}
}

@article{santos_comparing_2021,
	title = {Comparing the results of replications in software engineering},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09907-7},
	doi = {10.1007/s10664-020-09907-7},
	pages = {13},
	number = {2},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Santos, Adrian and Vegas, Sira and Oivo, Markku and Juristo, Natalia},
	urldate = {2021-07-04},
	date = {2021-03},
	langid = {english},
	keywords = {xno},
	file = {Submitted Version:C\:\\Users\\michalm\\Zotero\\storage\\X44ZLBIW\\Santos et al. - 2021 - Comparing the results of replications in software .pdf:application/pdf}
}

@article{ali_towards_2021,
	title = {Towards sustainable smart {IoT} applications architectural elements and design: opportunities, challenges, and open directions},
	volume = {77},
	issn = {0920-8542, 1573-0484},
	url = {https://link.springer.com/10.1007/s11227-020-03477-7},
	doi = {10.1007/s11227-020-03477-7},
	shorttitle = {Towards sustainable smart {IoT} applications architectural elements and design},
	pages = {5668--5725},
	number = {6},
	journaltitle = {The Journal of Supercomputing},
	shortjournal = {J Supercomput},
	author = {Ali, Zainab H. and Ali, Hesham A.},
	urldate = {2021-07-04},
	date = {2021-06},
	langid = {english},
	keywords = {xno}
}

@article{yang_edgekeeper_2021,
	title = {{EdgeKeeper}: a trusted edge computing framework for ubiquitous power Internet of Things},
	volume = {22},
	issn = {2095-9184, 2095-9230},
	url = {http://link.springer.com/10.1631/FITEE.1900636},
	doi = {10.1631/FITEE.1900636},
	shorttitle = {{EdgeKeeper}},
	pages = {374--399},
	number = {3},
	journaltitle = {Frontiers of Information Technology \& Electronic Engineering},
	shortjournal = {Front Inform Technol Electron Eng},
	author = {Yang, Weiyong and Liu, Wei and Wei, Xingshen and Guo, Zixin and Yang, Kangle and Huang, Hao and Qi, Longyun},
	urldate = {2021-07-04},
	date = {2021-03},
	langid = {english},
	keywords = {xno}
}

@article{huang_survey_2020,
	title = {A Survey on Performance Optimization of High-Level Synthesis Tools},
	volume = {35},
	issn = {1000-9000, 1860-4749},
	url = {https://link.springer.com/10.1007/s11390-020-9414-8},
	doi = {10.1007/s11390-020-9414-8},
	pages = {697--720},
	number = {3},
	journaltitle = {Journal of Computer Science and Technology},
	shortjournal = {J. Comput. Sci. Technol.},
	author = {Huang, Lan and Li, Da-Lin and Wang, Kang-Ping and Gao, Teng and Tavares, Adriano},
	urldate = {2021-07-04},
	date = {2020-05},
	langid = {english},
	keywords = {xno}
}

@article{hao_predicting_2021,
	title = {Predicting {QoS} of virtual machines via Bayesian network with {XGboost}-induced classes},
	volume = {24},
	issn = {1386-7857, 1573-7543},
	url = {https://link.springer.com/10.1007/s10586-020-03183-2},
	doi = {10.1007/s10586-020-03183-2},
	pages = {1165--1184},
	number = {2},
	journaltitle = {Cluster Computing},
	shortjournal = {Cluster Comput},
	author = {Hao, Jia and Yue, Kun and Duan, Liang and Zhang, Binbin and Fu, Xiaodong},
	urldate = {2021-07-04},
	date = {2021-06},
	langid = {english},
	keywords = {xno}
}

@article{oh_predicting_2020,
	title = {Predicting product development directions for new product planning using patent classification-based link prediction},
	volume = {125},
	issn = {0138-9130, 1588-2861},
	url = {https://link.springer.com/10.1007/s11192-020-03709-w},
	doi = {10.1007/s11192-020-03709-w},
	pages = {1833--1876},
	number = {3},
	journaltitle = {Scientometrics},
	shortjournal = {Scientometrics},
	author = {Oh, Seunghyun and Choi, Jaewoong and Ko, Namuk and Yoon, Janghyeok},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno}
}

@article{mostafavi_quality_2021,
	title = {Quality of service provisioning in network function virtualization: a survey},
	volume = {103},
	issn = {0010-485X, 1436-5057},
	url = {https://link.springer.com/10.1007/s00607-021-00925-x},
	doi = {10.1007/s00607-021-00925-x},
	shorttitle = {Quality of service provisioning in network function virtualization},
	pages = {917--991},
	number = {5},
	journaltitle = {Computing},
	shortjournal = {Computing},
	author = {Mostafavi, Seyedakbar and Hakami, Vesal and Sanaei, Maryam},
	urldate = {2021-07-04},
	date = {2021-05},
	langid = {english},
	keywords = {xno}
}

@article{sun_ksconf_2020,
	title = {{KS}(conf): A Light-Weight Test if a Multiclass Classifier Operates Outside of Its Specifications},
	volume = {128},
	issn = {0920-5691, 1573-1405},
	url = {http://link.springer.com/10.1007/s11263-019-01232-x},
	doi = {10.1007/s11263-019-01232-x},
	shorttitle = {{KS}(conf)},
	abstract = {Abstract
            
              We study the problem of automatically detecting if a given multi-class classifier operates
              outside of its specifications (out-of-specs)
              , i.e. on input data from a different distribution than what it was trained for. This is an important problem to solve on the road towards creating reliable computer vision systems for real-world applications, because the quality of a classifier’s predictions cannot be guaranteed if it operates out-of-specs. Previously proposed methods for out-of-specs detection make decisions on the level of single inputs. This, however, is insufficient to achieve low false positive rate and high false negative rates at the same time. In this work, we describe a new procedure named {KS}(conf), based on statistical reasoning. Its main component is a classical Kolmogorov–Smirnov test that is applied to the set of predicted confidence values for batches of samples. Working with batches instead of single samples allows increasing the true positive rate without negatively affecting the false positive rate, thereby overcoming a crucial limitation of single sample tests. We show by extensive experiments using a variety of convolutional network architectures and datasets that {KS}(conf) reliably detects out-of-specs situations even under conditions where other tests fail. It furthermore has a number of properties that make it an excellent candidate for practical deployment: it is easy to implement, adds almost no overhead to the system, works with any classifier that outputs confidence scores, and requires no a priori knowledge about how the data distribution could change.},
	pages = {970--995},
	number = {4},
	journaltitle = {International Journal of Computer Vision},
	shortjournal = {Int J Comput Vis},
	author = {Sun, Rémy and Lampert, Christoph H.},
	urldate = {2021-07-04},
	date = {2020-04},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\FFIMJQ22\\Sun and Lampert - 2020 - KS(conf) A Light-Weight Test if a Multiclass Clas.pdf:application/pdf}
}

@article{moore_iot_2020,
	title = {{IoT} reliability: a review leading to 5 key research directions},
	volume = {2},
	issn = {2524-521X, 2524-5228},
	url = {http://link.springer.com/10.1007/s42486-020-00037-z},
	doi = {10.1007/s42486-020-00037-z},
	shorttitle = {{IoT} reliability},
	abstract = {Abstract
            The Internet of Things ({IoT}) is rapidly changing the way in which we engage with technology on a daily basis. The {IoT} paradigm enables low-resource devices to intercommunicate in a fully flexible and pervasive manner, and the data from these devices is used for decision-making in critical applications such as; traffic infrastructure, health-care and home security, to name but a few. Due to the scarce resources available in these {IoT} devices, being able to quantify the reliability of them is a critical function. This report presents a detailed evolution of the area of reliability measurement, followed by an in-depth review of the state-of-the-art for quantification of reliability in the {IoT}, revealing the many challenges associated with this task. From this in-depth review, a set of key research directions for {IoT} reliability is determined. Despite the critical nature of the research area, at this current moment, this study is the first detailed review available in the area of assessing {IoT} reliability.},
	pages = {147--163},
	number = {3},
	journaltitle = {{CCF} Transactions on Pervasive Computing and Interaction},
	shortjournal = {{CCF} Trans. Pervasive Comp. Interact.},
	author = {Moore, Samuel J. and Nugent, Chris D. and Zhang, Shuai and Cleland, Ian},
	urldate = {2021-07-04},
	date = {2020-10},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\FJN6R7XB\\Moore et al. - 2020 - IoT reliability a review leading to 5 key researc.pdf:application/pdf}
}

@article{saralaya_cross-layer_2020,
	title = {Cross-layer impact analysis and adaptation of hierarchical service-based applications},
	volume = {14},
	issn = {1863-2386, 1863-2394},
	url = {http://link.springer.com/10.1007/s11761-019-00282-w},
	doi = {10.1007/s11761-019-00282-w},
	pages = {49--63},
	number = {1},
	journaltitle = {Service Oriented Computing and Applications},
	shortjournal = {{SOCA}},
	author = {Saralaya, Sridevi and Saralaya, Vishwas and D’Souza, Rio},
	urldate = {2021-07-04},
	date = {2020-03},
	langid = {english},
	keywords = {xno}
}

@article{botacin_self_2020,
	title = {The self modifying code ({SMC})-aware processor ({SAP}): a security look on architectural impact and support},
	volume = {16},
	issn = {2263-8733},
	url = {http://link.springer.com/10.1007/s11416-020-00348-w},
	doi = {10.1007/s11416-020-00348-w},
	shorttitle = {The self modifying code ({SMC})-aware processor ({SAP})},
	pages = {185--196},
	number = {3},
	journaltitle = {Journal of Computer Virology and Hacking Techniques},
	shortjournal = {J Comput Virol Hack Tech},
	author = {Botacin, Marcus and Zanata, Marco and Grégio, André},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xno}
}

@article{duan_tuning_2020,
	title = {Tuning a general purpose software cache library for {TaihuLight}’s {SW}26010 processor},
	volume = {2},
	issn = {2524-4922, 2524-4930},
	url = {https://link.springer.com/10.1007/s42514-020-00031-y},
	doi = {10.1007/s42514-020-00031-y},
	pages = {164--182},
	number = {2},
	journaltitle = {{CCF} Transactions on High Performance Computing},
	shortjournal = {{CCF} Trans. {HPC}},
	author = {Duan, Xiaohui and Zhang, Meng and Liu, Weiguo and Fu, Haohuan and Gan, Lin and Xue, Wei and Yang, Guangwen},
	urldate = {2021-07-04},
	date = {2020-06},
	langid = {english},
	keywords = {xno}
}

@article{bhatore_machine_2020,
	title = {Machine learning techniques for credit risk evaluation: a systematic literature review},
	volume = {4},
	issn = {2524-7956, 2524-7964},
	url = {https://link.springer.com/10.1007/s42786-020-00020-3},
	doi = {10.1007/s42786-020-00020-3},
	shorttitle = {Machine learning techniques for credit risk evaluation},
	pages = {111--138},
	number = {1},
	journaltitle = {Journal of Banking and Financial Technology},
	shortjournal = {J {BANK} {FINANC} {TECHNOL}},
	author = {Bhatore, Siddharth and Mohan, Lalit and Reddy, Y. Raghu},
	urldate = {2021-07-04},
	date = {2020-04},
	langid = {english},
	keywords = {xno}
}

@article{yaacoub_robotics_2021,
	title = {Robotics cyber security: vulnerabilities, attacks, countermeasures, and recommendations},
	issn = {1615-5262, 1615-5270},
	url = {http://link.springer.com/10.1007/s10207-021-00545-8},
	doi = {10.1007/s10207-021-00545-8},
	shorttitle = {Robotics cyber security},
	journaltitle = {International Journal of Information Security},
	shortjournal = {Int. J. Inf. Secur.},
	author = {Yaacoub, Jean-Paul A. and Noura, Hassan N. and Salman, Ola and Chehab, Ali},
	urldate = {2021-07-04},
	date = {2021-03-19},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\CCTHKGXQ\\Yaacoub et al. - 2021 - Robotics cyber security vulnerabilities, attacks,.pdf:application/pdf}
}

@article{xu_apf-aco_2020,
	title = {An {APF}-{ACO} algorithm for automatic defect detection on vehicle paint},
	volume = {79},
	issn = {1380-7501, 1573-7721},
	url = {https://link.springer.com/10.1007/s11042-020-09245-2},
	doi = {10.1007/s11042-020-09245-2},
	pages = {25315--25333},
	number = {35},
	journaltitle = {Multimedia Tools and Applications},
	shortjournal = {Multimed Tools Appl},
	author = {Xu, Jiabin and Zhang, Jindong and Zhang, Kunpeng and Liu, Tong and Wang, Donghui and Wang, Xue},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xno}
}

@article{mahdevari_hierarchical_2021,
	title = {A hierarchical local-model tree for predicting roof displacement in longwall tailgates},
	issn = {0941-0643, 1433-3058},
	url = {https://link.springer.com/10.1007/s00521-021-06127-y},
	doi = {10.1007/s00521-021-06127-y},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Mahdevari, Satar and Khodabakhshi, Mohammad Bagher},
	urldate = {2021-07-04},
	date = {2021-05-26},
	langid = {english},
	keywords = {xno}
}

@article{gote_analysing_2021,
	title = {Analysing Time-Stamped Co-Editing Networks in Software Development Teams using git2net},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-020-09928-2},
	doi = {10.1007/s10664-020-09928-2},
	abstract = {Abstract
            
              Data from software repositories have become an important foundation for the empirical study of software engineering processes. A recurring theme in the repository mining literature is the inference of developer networks capturing e.g. collaboration, coordination, or communication from the commit history of projects. Many works in this area studied networks of
              co-authorship
              of software artefacts, neglecting detailed information on code changes and code ownership available in software repositories. To address this issue, we introduce , a scalable  software that facilitates the extraction of fine-grained
              co-editing networks
              in large  repositories. It uses text mining techniques to analyse the detailed history of textual modifications
              within
              files. We apply our tool in two case studies using  repositories of multiple Open Source as well as a proprietary software project. Specifically, we use data on more than 1.2 million commits and more than 25,000 developers to test a hypothesis on the relation between developer productivity and co-editing patterns in software teams. We argue that  opens up an important new source of high-resolution data on human collaboration patterns that can be used to advance theory in empirical software engineering, computational social science, and organisational studies.},
	pages = {75},
	number = {4},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Gote, Christoph and Scholtes, Ingo and Schweitzer, Frank},
	urldate = {2021-07-04},
	date = {2021-07},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\N8CI4T6G\\Gote et al. - 2021 - Analysing Time-Stamped Co-Editing Networks in Soft.pdf:application/pdf}
}

@article{sun_reliable_2021,
	title = {Reliable H∞ guaranteed cost control for uncertain switched fuzzy stochastic systems with multiple time-varying delays and intermittent actuator and sensor faults},
	volume = {33},
	issn = {0941-0643, 1433-3058},
	url = {https://link.springer.com/10.1007/s00521-020-05007-1},
	doi = {10.1007/s00521-020-05007-1},
	pages = {1343--1365},
	number = {4},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Sun, Shaoxin and Zhang, Huaguang and Sun, Jiayue and Li, Weihua},
	urldate = {2021-07-04},
	date = {2021-02},
	langid = {english},
	keywords = {xno}
}

@article{meraihi_comprehensive_2021,
	title = {A comprehensive survey of Crow Search Algorithm and its applications},
	volume = {54},
	issn = {0269-2821, 1573-7462},
	url = {http://link.springer.com/10.1007/s10462-020-09911-9},
	doi = {10.1007/s10462-020-09911-9},
	pages = {2669--2716},
	number = {4},
	journaltitle = {Artificial Intelligence Review},
	shortjournal = {Artif Intell Rev},
	author = {Meraihi, Yassine and Gabis, Asma Benmessaoud and Ramdane-Cherif, Amar and Acheli, Dalila},
	urldate = {2021-07-04},
	date = {2021-04},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\83FQNWRY\\Meraihi et al. - 2021 - A comprehensive survey of Crow Search Algorithm an.pdf:application/pdf}
}

@article{singh_self-adaptive_2021,
	title = {Self-adaptive and secure mechanism for {IoT} based multimedia services: a survey},
	issn = {1380-7501, 1573-7721},
	url = {http://link.springer.com/10.1007/s11042-020-10493-5},
	doi = {10.1007/s11042-020-10493-5},
	shorttitle = {Self-adaptive and secure mechanism for {IoT} based multimedia services},
	journaltitle = {Multimedia Tools and Applications},
	shortjournal = {Multimed Tools Appl},
	author = {Singh, Irish and Lee, Seok-Won},
	urldate = {2021-07-04},
	date = {2021-01-27},
	langid = {english},
	keywords = {xno}
}

@article{higo_ammonia_2020,
	title = {Ammonia: an approach for deriving project-specific bug patterns},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09807-w},
	doi = {10.1007/s10664-020-09807-w},
	shorttitle = {Ammonia},
	abstract = {Abstract
            Finding and fixing buggy code is an important and cost-intensive maintenance task, and static analysis ({SA}) is one of the methods developers use to perform it. {SA} tools warn developers about potential bugs by scanning their source code for commonly occurring bug patterns, thus giving those developers opportunities to fix the warnings (potential bugs) before they release the software. Typically, {SA} tools scan for general bug patterns that are common to any software project (such as null pointer dereference), and not for project specific patterns. However, past research has pointed to this lack of customizability as a severe limiting issue in {SA}. Accordingly, in this paper, we propose an approach called , which is based on statically analyzing changes across the development history of a project, as a means to identify project-specific bug patterns. Furthermore, the bug patterns identified by our tool do not relate to just one developer or one specific commit, they reflect the project as a whole and compliment the warnings from other {SA} tools that identify general bug patterns. Herein, we report on the application of our implemented tool and approach to four Java projects: , , , and . The results obtained show that our tool could detect 19 project specific bug patterns across those four projects. Next, through manual analysis, we determined that six of those change patterns were actual bugs and submitted pull requests based on those bug patterns. As a result, five of the pull requests were merged.},
	pages = {1951--1979},
	number = {3},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Higo, Yoshiki and Hayashi, Shinpei and Hata, Hideaki and Nagappan, Meiyappan},
	urldate = {2021-07-04},
	date = {2020-05},
	langid = {english},
	keywords = {xyes},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\L9XS95KH\\Higo et al. - 2020 - Ammonia an approach for deriving project-specific.pdf:application/pdf}
}

@article{kotseruba_40_2020,
	title = {40 years of cognitive architectures: core cognitive abilities and practical applications},
	volume = {53},
	issn = {0269-2821, 1573-7462},
	url = {http://link.springer.com/10.1007/s10462-018-9646-y},
	doi = {10.1007/s10462-018-9646-y},
	shorttitle = {40 years of cognitive architectures},
	pages = {17--94},
	number = {1},
	journaltitle = {Artificial Intelligence Review},
	shortjournal = {Artif Intell Rev},
	author = {Kotseruba, Iuliia and Tsotsos, John K.},
	urldate = {2021-07-04},
	date = {2020-01},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\D6LF6JK7\\Kotseruba and Tsotsos - 2020 - 40 years of cognitive architectures core cognitiv.pdf:application/pdf}
}

@article{fazel_zarandi_state_2020,
	title = {A state of the art review of intelligent scheduling},
	volume = {53},
	issn = {0269-2821, 1573-7462},
	url = {http://link.springer.com/10.1007/s10462-018-9667-6},
	doi = {10.1007/s10462-018-9667-6},
	pages = {501--593},
	number = {1},
	journaltitle = {Artificial Intelligence Review},
	shortjournal = {Artif Intell Rev},
	author = {Fazel Zarandi, Mohammad Hossein and Sadat Asl, Ali Akbar and Sotudian, Shahabeddin and Castillo, Oscar},
	urldate = {2021-07-04},
	date = {2020-01},
	langid = {english},
	keywords = {xno}
}

@article{mehanovic_feature_2021,
	title = {Feature selection using cloud-based parallel genetic algorithm for intrusion detection data classification},
	issn = {0941-0643, 1433-3058},
	url = {http://link.springer.com/10.1007/s00521-021-05871-5},
	doi = {10.1007/s00521-021-05871-5},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Mehanović, Dželila and Kečo, Dino and Kevrić, Jasmin and Jukić, Samed and Miljković, Adnan and Mašetić, Zerina},
	urldate = {2021-07-04},
	date = {2021-03-17},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\8RKXP5KV\\Mehanović et al. - 2021 - Feature selection using cloud-based parallel genet.pdf:application/pdf}
}

@article{wang_review_2021,
	title = {A review on extreme learning machine},
	issn = {1380-7501, 1573-7721},
	url = {https://link.springer.com/10.1007/s11042-021-11007-7},
	doi = {10.1007/s11042-021-11007-7},
	abstract = {Abstract
            Extreme learning machine ({ELM}) is a training algorithm for single hidden layer feedforward neural network ({SLFN}), which converges much faster than traditional methods and yields promising performance. In this paper, we hope to present a comprehensive review on {ELM}. Firstly, we will focus on the theoretical analysis including universal approximation theory and generalization. Then, the various improvements are listed, which help {ELM} works better in terms of stability, efficiency, and accuracy. Because of its outstanding performance, {ELM} has been successfully applied in many real-time learning tasks for classification, clustering, and regression. Besides, we report the applications of {ELM} in medical imaging: {MRI}, {CT}, and mammogram. The controversies of {ELM} were also discussed in this paper. We aim to report these advances and find some future perspectives.},
	journaltitle = {Multimedia Tools and Applications},
	shortjournal = {Multimed Tools Appl},
	author = {Wang, Jian and Lu, Siyuan and Wang, Shui-Hua and Zhang, Yu-Dong},
	urldate = {2021-07-04},
	date = {2021-05-22},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\ELKT344L\\Wang et al. - 2021 - A review on extreme learning machine.pdf:application/pdf}
}

@article{yates_characterizing_2020,
	title = {Characterizing the transfer of program comprehension in onboarding: an information-push perspective},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-019-09741-6},
	doi = {10.1007/s10664-019-09741-6},
	shorttitle = {Characterizing the transfer of program comprehension in onboarding},
	pages = {940--995},
	number = {1},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Yates, Rebecca and Power, Norah and Buckley, Jim},
	urldate = {2021-07-04},
	date = {2020-01},
	langid = {english},
	keywords = {xno}
}

@article{de_cnudde_benchmarking_2020,
	title = {A benchmarking study of classification techniques for behavioral data},
	volume = {9},
	issn = {2364-415X, 2364-4168},
	url = {http://link.springer.com/10.1007/s41060-019-00185-1},
	doi = {10.1007/s41060-019-00185-1},
	pages = {131--173},
	number = {2},
	journaltitle = {International Journal of Data Science and Analytics},
	shortjournal = {Int J Data Sci Anal},
	author = {De Cnudde, Sofie and Martens, David and Evgeniou, Theodoros and Provost, Foster},
	urldate = {2021-07-04},
	date = {2020-03},
	langid = {english},
	keywords = {xno},
	file = {Accepted Version:C\:\\Users\\michalm\\Zotero\\storage\\C264J4FL\\De Cnudde et al. - 2020 - A benchmarking study of classification techniques .pdf:application/pdf}
}

@article{deepa_fuzzy_2020,
	title = {A fuzzy shape representation of a segmented vessel tree and kernel-induced random forest classifier for the efficient prediction of lung cancer},
	volume = {76},
	issn = {0920-8542, 1573-0484},
	url = {http://link.springer.com/10.1007/s11227-019-03002-5},
	doi = {10.1007/s11227-019-03002-5},
	pages = {5801--5824},
	number = {8},
	journaltitle = {The Journal of Supercomputing},
	shortjournal = {J Supercomput},
	author = {Deepa, P. and Suganthi, M.},
	urldate = {2021-07-04},
	date = {2020-08},
	langid = {english},
	keywords = {xno}
}

@article{bertrand_verification_2021,
	title = {Verification of randomized consensus algorithms under round-rigid adversaries},
	issn = {1433-2779, 1433-2787},
	url = {https://link.springer.com/10.1007/s10009-020-00603-x},
	doi = {10.1007/s10009-020-00603-x},
	abstract = {Abstract
            
              Randomized fault-tolerant distributed algorithms pose a number of challenges for automated verification: (i) parameterization in the number of processes and faults, (ii) randomized choices and probabilistic properties, and (iii) an unbounded number of asynchronous rounds. This combination makes verification hard. Challenge (i) was recently addressed in the framework of threshold automata. We extend threshold automata to model randomized consensus algorithms that perform an unbounded number of asynchronous rounds. For non-probabilistic properties, we show that it is necessary and sufficient to verify these properties under round-rigid schedules, that is, schedules where processes enter round 
              r
              only after all processes finished round
              
                
                  \$\$r-1\$\$
                  
                    
                      r
                      -
                      1
                    
                  
                
              
              . For almost-sure termination, we analyze these algorithms under round-rigid adversaries, that is, fair adversaries that only generate round-rigid schedules. This allows us to do compositional and inductive reasoning that reduces verification of the asynchronous multi-round algorithms to model checking of a one-round threshold automaton. We apply this framework and automatically verify the following classic algorithms: Ben-Or’s and Bracha’s seminal consensus algorithms for crashes and Byzantine faults, 2-set agreement for crash faults, and {RS}-Bosco for the Byzantine case.},
	journaltitle = {International Journal on Software Tools for Technology Transfer},
	shortjournal = {Int J Softw Tools Technol Transfer},
	author = {Bertrand, Nathalie and Konnov, Igor and Lazić, Marijana and Widder, Josef},
	urldate = {2021-07-04},
	date = {2021-02-02},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\L68J2AQQ\\Bertrand et al. - 2021 - Verification of randomized consensus algorithms un.pdf:application/pdf}
}

@article{gu_prediction_2020,
	title = {Prediction of air quality in Shenzhen based on neural network algorithm},
	volume = {32},
	issn = {0941-0643, 1433-3058},
	url = {http://link.springer.com/10.1007/s00521-019-04492-3},
	doi = {10.1007/s00521-019-04492-3},
	pages = {1879--1892},
	number = {7},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Gu, Kuiying and Zhou, Yi and Sun, Hui and Zhao, Lianming and Liu, Shaokun},
	urldate = {2021-07-04},
	date = {2020-04},
	langid = {english},
	keywords = {xno}
}

@article{marmolejos_use_2021,
	title = {On the use of textual feature extraction techniques to support the automated detection of refactoring documentation},
	issn = {1614-5046, 1614-5054},
	url = {http://link.springer.com/10.1007/s11334-021-00388-5},
	doi = {10.1007/s11334-021-00388-5},
	journaltitle = {Innovations in Systems and Software Engineering},
	shortjournal = {Innovations Syst Softw Eng},
	author = {Marmolejos, Licelot and {AlOmar}, Eman Abdullah and Mkaouer, Mohamed Wiem and Newman, Christian and Ouni, Ali},
	urldate = {2021-07-04},
	date = {2021-03-07},
	langid = {english},
	keywords = {xno}
}

@article{procter_guided_2021,
	title = {Guided architecture trade space exploration: fusing model-based engineering and design by shopping},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-021-00889-8},
	doi = {10.1007/s10270-021-00889-8},
	shorttitle = {Guided architecture trade space exploration},
	journaltitle = {Software and Systems Modeling},
	shortjournal = {Softw Syst Model},
	author = {Procter, Sam and Wrage, Lutz},
	urldate = {2021-07-04},
	date = {2021-06-18},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\RPT5S9QR\\Procter and Wrage - 2021 - Guided architecture trade space exploration fusin.pdf:application/pdf}
}

@article{abdellatif_msrbot_2020,
	title = {{MSRBot}: Using bots to answer questions from software repositories},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-019-09788-5},
	doi = {10.1007/s10664-019-09788-5},
	shorttitle = {{MSRBot}},
	pages = {1834--1863},
	number = {3},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Abdellatif, Ahmad and Badran, Khaled and Shihab, Emad},
	urldate = {2021-07-04},
	date = {2020-05},
	langid = {english},
	keywords = {xno},
	file = {Submitted Version:C\:\\Users\\michalm\\Zotero\\storage\\A3KEZ4PD\\Abdellatif et al. - 2020 - MSRBot Using bots to answer questions from softwa.pdf:application/pdf}
}

@article{yang_flexible_2020,
	title = {Flexible automatic detection for security management of dispatching data network},
	volume = {9},
	issn = {2192-113X},
	url = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-020-00163-0},
	doi = {10.1186/s13677-020-00163-0},
	abstract = {Abstract
            Power grid dispatching is among the forefront issues in the power industry for it can highly influence the efficiency of electricity-related industries. At present, power grid dispatching is usually managed manually, which is quite time-consuming with the continuous growth of scale and complexity of electric power systems. To mitigate the time cost of power grid dispatching, an automatic power grid dispatching system is proposed. The system contains devices configuration detection, flexible and automatic device detection and vertical encryption to ensure the efficiency, adaptability and security of power gird dispatching. In this paper, modeling and algorithm details of the automatic power grid dispatching system are presented, and the effectiveness and efficiency of the proposed system was evaluated with power grid data in Kunming, China.},
	pages = {20},
	number = {1},
	journaltitle = {Journal of Cloud Computing},
	shortjournal = {J Cloud Comp},
	author = {Yang, Xianrui and Liu, Yuming and Wang, Jiehong and Yao, Zhao and Zhou, Yanping and Fu, Shucun},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\RXXKEM8T\\Yang et al. - 2020 - Flexible automatic detection for security manageme.pdf:application/pdf}
}

@article{oran_framework_2021,
	title = {A framework for evaluating and improving requirements specifications based on the developers and testers perspective},
	issn = {0947-3602, 1432-010X},
	url = {https://link.springer.com/10.1007/s00766-021-00352-6},
	doi = {10.1007/s00766-021-00352-6},
	journaltitle = {Requirements Engineering},
	shortjournal = {Requirements Eng},
	author = {Oran, Ana Carolina and Santos, Gleison and Gadelha, Bruno and Conte, Tayana},
	urldate = {2021-07-04},
	date = {2021-06-25},
	langid = {english},
	keywords = {xno}
}

@article{zairi_fpga-based_2020,
	title = {{FPGA}-based system for artificial neural network arrhythmia classification},
	volume = {32},
	issn = {0941-0643, 1433-3058},
	url = {http://link.springer.com/10.1007/s00521-019-04081-4},
	doi = {10.1007/s00521-019-04081-4},
	pages = {4105--4120},
	number = {8},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Zairi, Hadjer and Kedir Talha, Malika and Meddah, Karim and Ould Slimane, Saliha},
	urldate = {2021-07-04},
	date = {2020-04},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\784TDSFR\\Zairi et al. - 2020 - FPGA-based system for artificial neural network ar.pdf:application/pdf}
}

@article{scalabrino_api_2020,
	title = {{API} compatibility issues in Android: Causes and effectiveness of data-driven detection techniques},
	volume = {25},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-020-09877-w},
	doi = {10.1007/s10664-020-09877-w},
	shorttitle = {{API} compatibility issues in Android},
	pages = {5006--5046},
	number = {6},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Scalabrino, Simone and Bavota, Gabriele and Linares-Vásquez, Mario and Piantadosi, Valentina and Lanza, Michele and Oliveto, Rocco},
	urldate = {2021-07-04},
	date = {2020-11},
	langid = {english},
	keywords = {xno}
}

@article{mantovan_computerization_2020,
	title = {The Computerization of Archaeology: Survey on Artificial Intelligence Techniques},
	volume = {1},
	issn = {2662-995X, 2661-8907},
	url = {http://link.springer.com/10.1007/s42979-020-00286-w},
	doi = {10.1007/s42979-020-00286-w},
	shorttitle = {The Computerization of Archaeology},
	pages = {267},
	number = {5},
	journaltitle = {{SN} Computer Science},
	shortjournal = {{SN} {COMPUT}. {SCI}.},
	author = {Mantovan, Lorenzo and Nanni, Loris},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\27L5QJIM\\Mantovan and Nanni - 2020 - The Computerization of Archaeology Survey on Arti.pdf:application/pdf}
}

@article{abualigah_salp_2020,
	title = {Salp swarm algorithm: a comprehensive survey},
	volume = {32},
	issn = {0941-0643, 1433-3058},
	url = {http://link.springer.com/10.1007/s00521-019-04629-4},
	doi = {10.1007/s00521-019-04629-4},
	shorttitle = {Salp swarm algorithm},
	pages = {11195--11215},
	number = {15},
	journaltitle = {Neural Computing and Applications},
	shortjournal = {Neural Comput \& Applic},
	author = {Abualigah, Laith and Shehab, Mohammad and Alshinwan, Mohammad and Alabool, Hamzeh},
	urldate = {2021-07-04},
	date = {2020-08},
	langid = {english},
	keywords = {xno}
}

@article{movahedi_toward_2021,
	title = {Toward competitive multi-agents in Polo game based on reinforcement learning},
	issn = {1380-7501, 1573-7721},
	url = {https://link.springer.com/10.1007/s11042-021-10968-z},
	doi = {10.1007/s11042-021-10968-z},
	journaltitle = {Multimedia Tools and Applications},
	shortjournal = {Multimed Tools Appl},
	author = {Movahedi, Zahra and Bastanfard, Azam},
	urldate = {2021-07-04},
	date = {2021-05-09},
	langid = {english},
	keywords = {xno}
}

@article{csontos_improving_2020,
	title = {Improving accessibility of {CMS}-based websites using automated methods},
	issn = {1615-5289, 1615-5297},
	url = {http://link.springer.com/10.1007/s10209-020-00784-x},
	doi = {10.1007/s10209-020-00784-x},
	abstract = {Abstract
            New methods of identifying and fixing accessibility issues on websites are presented in this article. The websites taken into consideration by the research are created with content management systems (like {WordPress} or Joomla!). Our main goal was to develop different methods to improve accessibility that may be used by various user groups (website creators, operators, content editors). Some of our methods are easy to use, some need more proficiency. The three methods we have developed ({CSS}/{SCSS} class override, {MVC}-based extension override, {HTML} output override) are described in detail. The use of an already existing method (Data entry checking) is also introduced, as well as some development options of this method. Each method is introduced in general, furthermore an example of their usage is also presented. Using the proposed methods, websites can fulfil the recommendations of the Web Content Accessibility Guidelines ({WCAG}) in order to make the content of the websites more accessible.},
	journaltitle = {Universal Access in the Information Society},
	shortjournal = {Univ Access Inf Soc},
	author = {Csontos, Balázs and Heckl, István},
	urldate = {2021-07-04},
	date = {2020-11-30},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\IA4K9UYK\\Csontos and Heckl - 2020 - Improving accessibility of CMS-based websites usin.pdf:application/pdf}
}

@article{bozic_ontology-based_2021,
	title = {Ontology-based metamorphic testing for chatbots},
	issn = {0963-9314, 1573-1367},
	url = {https://link.springer.com/10.1007/s11219-020-09544-9},
	doi = {10.1007/s11219-020-09544-9},
	abstract = {Abstract
            Modern-day demands for services often require an availability on a 24/7 basis as well as online accessibility around the globe. For this sake, personalized virtual assistants, called chatbots, are implemented. Such systems offer services, goods or information in natural language. These natural language processing ({NLP}) programs respond to the user in real time and offer an intuitive and simple interface to interact with. Advantages like these make them increasingly popular. Therefore, ensuring correct functionality of chatbots is of increasing importance. However, since different implementations and user behaviour result in unpredictable results, the chatbot’s input and output data are difficult to predict and classify as well. Under such circumstances, test cases can be inferred from the domain of possible inputs of a system under test ({SUT}). Ontologies are concepts used in {AI} to provide formal representations of knowledge for a specific domain. Such ontological models contain structured information that is used for test generation. On the other hand, testing of chatbots represents a challenge because of the absence of a test oracle. In this paper, both challenges are addressed by conceptualizing ontologies for input generation and output processing in form of a metamorphic testing approach. In this scenario, both concepts are applied for automated testing of chatbots. The approach is demonstrated on a real system from the tourism domain, thereby discussing the obtained results.},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Božić, Josip},
	urldate = {2021-07-04},
	date = {2021-04-27},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\C9MT7RJ6\\Božić - 2021 - Ontology-based metamorphic testing for chatbots.pdf:application/pdf}
}

@article{jradi_buildcom_2021,
	title = {{BuildCOM}: automated auditing and continuous commissioning of next generation building management systems},
	volume = {4},
	issn = {2520-8942},
	url = {https://energyinformatics.springeropen.com/articles/10.1186/s42162-020-00136-2},
	doi = {10.1186/s42162-020-00136-2},
	shorttitle = {{BuildCOM}},
	abstract = {Abstract
            A building management system ({BMS}) is generally defined as the ‘Brain’ of the building. Building management systems aid in improving occupant comfort and productivity and, enhance the operational efficiency of building energy generation and supply systems. This paper presents the {BuildCOM} project which is driven by the industry and customer needs. It responds to the increasing demands for energy efficiency, comfort, and safety in the buildings sector. The project brings together academic researchers, industrial companies and public partners, to develop and demonstrate an innovative first-of-its-kind software for {BMS} automated auditing and continuous building commissioning. The software has three major capabilities, initial {BMS} auditing, {BMS} retro-commissioning and continuous building commissioning. Thus, the proposed software will aid the design, development and operation of next generation building management systems. The project builds up partly on the online building energy performance monitoring and evaluation ({ObepME}) tool developed in {COORDICY} which will be combined with a holistic process for building management systems auditing and commissioning within the developed software solution. The set of tools developed under {BuildCOM} will be implemented and demonstrated considering multiple case studies. Implementing the proposed solution, the customers and building owners will have up to 35\% higher energy efficiency in newly built and exiting buildings, around 25\% lower operation costs and less emissions from day one and throughout the building operation phase.},
	pages = {2},
	number = {1},
	journaltitle = {Energy Informatics},
	shortjournal = {Energy Inform},
	author = {Jradi, Muhyiddine and Boel, Niels and Madsen, Bo Eskerod and Jacobsen, Jonas and Hooge, Julie Strandesen and Kildelund, Lars},
	urldate = {2021-07-04},
	date = {2021-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\IXQ24AUS\\Jradi et al. - 2021 - BuildCOM automated auditing and continuous commis.pdf:application/pdf}
}

@article{sedaghat_r2t-dsdn_2021,
	title = {R2T-{DSDN}: reliable real-time distributed controller-based {SDN}},
	issn = {0920-8542, 1573-0484},
	url = {http://link.springer.com/10.1007/s11227-021-03780-x},
	doi = {10.1007/s11227-021-03780-x},
	shorttitle = {R2T-{DSDN}},
	journaltitle = {The Journal of Supercomputing},
	shortjournal = {J Supercomput},
	author = {Sedaghat, Shahrzad and Jahangir, Amir Hossein},
	urldate = {2021-07-04},
	date = {2021-04-08},
	langid = {english},
	keywords = {xno}
}

@article{madala_model_2021,
	title = {Model elements identification using neural networks: a comprehensive study},
	volume = {26},
	issn = {0947-3602, 1432-010X},
	url = {https://link.springer.com/10.1007/s00766-020-00332-2},
	doi = {10.1007/s00766-020-00332-2},
	shorttitle = {Model elements identification using neural networks},
	pages = {67--96},
	number = {1},
	journaltitle = {Requirements Engineering},
	shortjournal = {Requirements Eng},
	author = {Madala, Kaushik and Piparia, Shraddha and Blanco, Eduardo and Do, Hyunsook and Bryce, Renee},
	urldate = {2021-07-04},
	date = {2021-03},
	langid = {english},
	keywords = {xno}
}

@article{patel_forecasting_2020,
	title = {Forecasting health of complex {IT} systems using system log data},
	volume = {4},
	issn = {2524-7956, 2524-7964},
	url = {http://link.springer.com/10.1007/s42786-019-00011-z},
	doi = {10.1007/s42786-019-00011-z},
	pages = {27--35},
	number = {1},
	journaltitle = {Journal of Banking and Financial Technology},
	shortjournal = {J {BANK} {FINANC} {TECHNOL}},
	author = {Patel, Shivshanker Singh},
	urldate = {2021-07-04},
	date = {2020-04},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\MC3CZY29\\Patel - 2020 - Forecasting health of complex IT systems using sys.pdf:application/pdf}
}

@article{ahmad_formal_2020,
	title = {Formal reliability and failure analysis of ethernet based communication networks in a smart grid substation},
	volume = {32},
	issn = {0934-5043, 1433-299X},
	url = {http://link.springer.com/10.1007/s00165-019-00503-1},
	doi = {10.1007/s00165-019-00503-1},
	pages = {71--111},
	number = {1},
	journaltitle = {Formal Aspects of Computing},
	shortjournal = {Form Asp Comp},
	author = {Ahmad, Waqar and Hasan, Osman and Tahar, Sofiène},
	urldate = {2021-07-04},
	date = {2020-02},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\8I8B66MN\\Ahmad et al. - 2020 - Formal reliability and failure analysis of etherne.pdf:application/pdf}
}

@article{zhou_new_2021,
	title = {New health-state assessment model based on belief rule base with interpretability},
	volume = {64},
	issn = {1674-733X, 1869-1919},
	url = {https://link.springer.com/10.1007/s11432-020-3001-7},
	doi = {10.1007/s11432-020-3001-7},
	pages = {172214},
	number = {7},
	journaltitle = {Science China Information Sciences},
	shortjournal = {Sci. China Inf. Sci.},
	author = {Zhou, Zhijie and Cao, You and Hu, Guanyu and Zhang, Youmin and Tang, Shuaiwen and Chen, Yuan},
	urldate = {2021-07-04},
	date = {2021-07},
	langid = {english},
	keywords = {xno}
}

@article{jatana_improved_2020,
	title = {An Improved Crow Search Algorithm for Test Data Generation Using Search-Based Mutation Testing},
	volume = {52},
	issn = {1370-4621, 1573-773X},
	url = {https://link.springer.com/10.1007/s11063-020-10288-7},
	doi = {10.1007/s11063-020-10288-7},
	pages = {767--784},
	number = {1},
	journaltitle = {Neural Processing Letters},
	shortjournal = {Neural Process Lett},
	author = {Jatana, Nishtha and Suri, Bharti},
	urldate = {2021-07-04},
	date = {2020-08},
	langid = {english},
	keywords = {xno}
}

@article{hamadouche_hiding_2020,
	title = {Hiding a fault enabled virus through code construction},
	volume = {16},
	issn = {2263-8733},
	url = {http://link.springer.com/10.1007/s11416-019-00340-z},
	doi = {10.1007/s11416-019-00340-z},
	pages = {103--124},
	number = {2},
	journaltitle = {Journal of Computer Virology and Hacking Techniques},
	shortjournal = {J Comput Virol Hack Tech},
	author = {Hamadouche, Samiya and Lanet, Jean-Louis and Mezghiche, Mohamed},
	urldate = {2021-07-04},
	date = {2020-06},
	langid = {english},
	keywords = {xno},
	file = {Submitted Version:C\:\\Users\\michalm\\Zotero\\storage\\JJJLUISP\\Hamadouche et al. - 2020 - Hiding a fault enabled virus through code construc.pdf:application/pdf}
}

@article{nibareke_using_2020,
	title = {Using Big Data-machine learning models for diabetes prediction and flight delays analytics},
	volume = {7},
	issn = {2196-1115},
	url = {https://journalofbigdata.springeropen.com/articles/10.1186/s40537-020-00355-0},
	doi = {10.1186/s40537-020-00355-0},
	abstract = {Abstract
            
              Introduction
              Nowadays large data volumes are daily generated at a high rate. Data from health system, social network, financial, government, marketing, bank transactions as well as the censors and smart devices are increasing. The tools and models have to be optimized. In this paper we applied and compared Machine Learning algorithms (Linear Regression, Naïve bayes, Decision Tree) to predict diabetes. Further more, we performed analytics on flight delays. The main contribution of this paper is to give an overview of Big Data tools and machine learning models. We highlight some metrics that allow us to choose a more accurate model. We predict diabetes disease using three machine learning models and then compared their performance. Further more we analyzed flight delay and produced a dashboard which can help managers of flight companies to have a 360° view of their flights and take strategic decisions.
            
            
              Case description
              We applied three Machine Learning algorithms for predicting diabetes and we compared the performance to see what model give the best results. We performed analytics on flights datasets to help decision making and predict flight delays.
            
            
              Discussion and evaluation
              The experiment shows that the Linear Regression, Naive Bayesian and Decision Tree give the same accuracy (0.766) but Decision Tree outperforms the two other models with the greatest score (1) and the smallest error (0). For the flight delays analytics, the model could show for example the airport that recorded the most flight delays.
            
            
              Conclusions
              Several tools and machine learning models to deal with big data analytics have been discussed in this paper. We concluded that for the same datasets, we have to carefully choose the model to use in prediction. In our future works, we will test different models in other fields (climate, banking, insurance.).},
	pages = {78},
	number = {1},
	journaltitle = {Journal of Big Data},
	shortjournal = {J Big Data},
	author = {Nibareke, Thérence and Laassiri, Jalal},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\WPUR9JR3\\Nibareke and Laassiri - 2020 - Using Big Data-machine learning models for diabete.pdf:application/pdf}
}

@article{diaz_empirical_2021,
	title = {An empirical study of rules for mapping {BPMN} models to graphical user interfaces},
	volume = {80},
	issn = {1380-7501, 1573-7721},
	url = {http://link.springer.com/10.1007/s11042-020-09651-6},
	doi = {10.1007/s11042-020-09651-6},
	pages = {9813--9848},
	number = {7},
	journaltitle = {Multimedia Tools and Applications},
	shortjournal = {Multimed Tools Appl},
	author = {Díaz, Eduardo and Panach, José Ignacio and Rueda, Silvia and Vanderdonckt, Jean},
	urldate = {2021-07-04},
	date = {2021-03},
	langid = {english},
	keywords = {xno}
}

@article{derakhshandi_model-driven_2021,
	title = {A model-driven framework for developing android-based classic multiplayer 2D board games},
	volume = {28},
	issn = {0928-8910, 1573-7535},
	url = {https://link.springer.com/10.1007/s10515-021-00282-1},
	doi = {10.1007/s10515-021-00282-1},
	pages = {7},
	number = {2},
	journaltitle = {Automated Software Engineering},
	shortjournal = {Autom Softw Eng},
	author = {Derakhshandi, Mohammad and Kolahdouz-Rahimi, Shekoufeh and Troya, Javier and Lano, Kevin},
	urldate = {2021-07-04},
	date = {2021-11},
	langid = {english},
	keywords = {xno}
}

@article{macho_nature_2021,
	title = {The nature of build changes: An empirical study of Maven-based build systems},
	volume = {26},
	issn = {1382-3256, 1573-7616},
	url = {https://link.springer.com/10.1007/s10664-020-09926-4},
	doi = {10.1007/s10664-020-09926-4},
	shorttitle = {The nature of build changes},
	abstract = {Abstract
            
              Build systems are an essential part of modern software projects. As software projects change continuously, it is crucial to understand how the build system changes because neglecting its maintenance can, at best, lead to expensive build breakage, or at worst, introduce user-reported defects due to incorrectly compiled, linked, packaged, or deployed official releases. Recent studies have investigated the (co-)evolution of build configurations and reasons for build breakage; however, the prior analysis focused on a coarse-grained outcome (
              i.e.
              , either build changing or not). In this paper, we present
              {BuildDiff}
              , an approach to extract detailed build changes from
              Maven
              build files and classify them into 143 change types. In a manual evaluation of 400 build-changing commits, we show that
              {BuildDiff}
              can extract and classify build changes with average precision, recall, and f1-scores of 0.97, 0.98, and 0.97, respectively. We then present two studies using the build changes extracted from 144 open source Java projects to study the frequency and time of build changes. The results show that the top-10 most frequent change types account for 51\% of the build changes. Among them, changes to version numbers and changes to dependencies of the projects occur most frequently. We also observe frequently co-occurring changes, such as changes to the source code management definitions, and corresponding changes to the dependency management system and the dependency declaration. Furthermore, our results show that build changes frequently occur around release days. In particular, critical changes, such as updates to plugin configuration parts and dependency insertions, are performed before a release day. The contributions of this paper lay in the foundation for future research, such as for analyzing the (co-)evolution of build files with other artifacts, improving effort estimation approaches by incorporating necessary modifications to the build system specification, or automatic repair approaches for configuration code. Furthermore, our detailed change information enables improvements of refactoring approaches for build configurations and improvements of prediction models to identify error-prone build files.},
	pages = {32},
	number = {3},
	journaltitle = {Empirical Software Engineering},
	shortjournal = {Empir Software Eng},
	author = {Macho, Christian and Beyer, Stefanie and {McIntosh}, Shane and Pinzger, Martin},
	urldate = {2021-07-04},
	date = {2021-05},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\S69EPIQ5\\Macho et al. - 2021 - The nature of build changes An empirical study of.pdf:application/pdf}
}

@article{narayanan_improving_2020,
	title = {Improving prediction with enhanced Distributed Memory-based Resilient Dataset Filter},
	volume = {7},
	issn = {2196-1115},
	url = {https://journalofbigdata.springeropen.com/articles/10.1186/s40537-020-00292-y},
	doi = {10.1186/s40537-020-00292-y},
	abstract = {Abstract
            Launching new products in the consumer electronics market is challenging. Developing and marketing the same in limited time affect the sustainability of such companies. This research work introduces a model that can predict the success of a product. A Feature Information Gain ({FIG}) measure is used for significant feature identification and Distributed Memory-based Resilient Dataset Filter ({DMRDF}) is used to eliminate duplicate reviews, which in turn improves the reliability of the product reviews. The pre-processed dataset is used for prediction of product pre-launch in the market using classifiers such as Logistic regression and Support vector machine. {DMRDF} method is fault-tolerant because of its resilience property and also reduces the dataset redundancy; hence, it increases the prediction accuracy of the model. The proposed model works in a distributed environment to handle a massive volume of the dataset and therefore, it is scalable. The output of this feature modelling and prediction allows the manufacturer to optimize the design of his new product.},
	pages = {13},
	number = {1},
	journaltitle = {Journal of Big Data},
	shortjournal = {J Big Data},
	author = {Narayanan, Sandhya and Samuel, Philip and Chacko, Mariamma},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\UYV2BQ6N\\Narayanan et al. - 2020 - Improving prediction with enhanced Distributed Mem.pdf:application/pdf}
}

@article{gassais_multi-level_2020,
	title = {Multi-level host-based intrusion detection system for Internet of things},
	volume = {9},
	issn = {2192-113X},
	url = {https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-020-00206-6},
	doi = {10.1186/s13677-020-00206-6},
	abstract = {Abstract
            The growth of the Internet of things ({IoT}) has ushered in a new area of inter-connectivity and innovation in the home. Many devices, once separate, can now be interacted with remotely, improving efficiency and organization. This, however, comes at the cost of rising security vulnerabilities. Vendors are competing to create and release quickly innovative connected objects, without focusing on the security issues. As a consequence, attacks involving smart devices, or targeting them, are proliferating, creating threats to user’s privacy and even their physical security. Additionally, the heterogeneous technologies involved in {IoT} make attempts to develop protection on smart devices much harder. Most of the intrusion detection systems developed for those platforms are based on network activity. However, on many systems, intrusions cannot easily or reliably be detected from network traces. We propose a novel host-based automated framework for intrusion detection. Our work combines user space and kernel space information and machine learning techniques to detect various kinds of intrusions in smart devices. Our solution use tracing techniques to automatically get devices behavior, process this data into numeric arrays to train several machine learning algorithms, and raise alerts whenever an intrusion is found. We implemented several machine learning algorithms, including deep learning ones, to achieve high detection capabilities, while adding little overhead on the monitored devices. We tested our solution within a realistic home automation system with actual threats.},
	pages = {62},
	number = {1},
	journaltitle = {Journal of Cloud Computing},
	shortjournal = {J Cloud Comp},
	author = {Gassais, Robin and Ezzati-Jivan, Naser and Fernandez, Jose M. and Aloise, Daniel and Dagenais, Michel R.},
	urldate = {2021-07-04},
	date = {2020-12},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\PN2H2WD3\\Gassais et al. - 2020 - Multi-level host-based intrusion detection system .pdf:application/pdf}
}

@article{baldassarre_integrating_2020,
	title = {Integrating security and privacy in software development},
	volume = {28},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-020-09501-6},
	doi = {10.1007/s11219-020-09501-6},
	pages = {987--1018},
	number = {3},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Baldassarre, Maria Teresa and Barletta, Vita Santa and Caivano, Danilo and Scalera, Michele},
	urldate = {2021-07-04},
	date = {2020-09},
	langid = {english},
	keywords = {xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\HI6AMJQX\\Baldassarre et al. - 2020 - Integrating security and privacy in software devel.pdf:application/pdf}
}

@article{ochodek_recognizing_2020,
	title = {Recognizing lines of code violating company-specific coding guidelines using machine learning: A Method and Its Evaluation},
	volume = {25},
	issn = {13823256},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85075204546&doi=10.1007%2fs10664-019-09769-8&partnerID=40&md5=8cf3824cf1e4c7096ea29752f6a12917},
	doi = {10.1007/s10664-019-09769-8},
	abstract = {Software developers in big and medium-size companies are working with millions of lines of code in their codebases. Assuring the quality of this code has shifted from simple defect management to proactive assurance of internal code quality. Although static code analysis and code reviews have been at the forefront of research and practice in this area, code reviews are still an effort-intensive and interpretation-prone activity. The aim of this research is to support code reviews by automatically recognizing company-specific code guidelines violations in large-scale, industrial source code. In our action research project, we constructed a machine-learning-based tool for code analysis where software developers and architects in big and medium-sized companies can use a few examples of source code lines violating code/design guidelines (up to 700 lines of code) to train decision-tree classifiers to find similar violations in their codebases (up to 3 million lines of code). Our action research project consisted of (i) understanding the challenges of two large software development companies, (ii) applying the machine-learning-based tool to detect violations of Sun’s and Google’s coding conventions in the code of three large open source projects implemented in Java, (iii) evaluating the tool on evolving industrial codebase, and (iv) finding the best learning strategies to reduce the cost of training the classifiers. We were able to achieve the average accuracy of over 99\% and the average F-score of 0.80 for open source projects when using ca. 40K lines for training the tool. We obtained a similar average F-score of 0.78 for the industrial code but this time using only up to 700 lines of code as a training dataset. Finally, we observed the tool performed visibly better for the rules requiring to understand a single line of code or the context of a few lines (often allowing to reach the F-score of 0.90 or higher). Based on these results, we could observe that this approach can provide modern software development companies with the ability to use examples to teach an algorithm to recognize violations of code/design guidelines and thus increase the number of reviews conducted before the product release. This, in turn, leads to the increased quality of the final software. © 2019, The Author(s).},
	pages = {220--265},
	number = {1},
	journaltitle = {Empirical Software Engineering},
	author = {Ochodek, M. and Hebig, R. and Meding, W. and Frost, G. and Staron, M.},
	date = {2020},
	note = {Publisher: Springer},
	keywords = {Software design, Open source software, Learning systems, Decision trees, Industrial research, Open source projects, Machine learning, Open systems, Software developer, Codes (symbols), Action research, Code review, Decision tree classifiers, Industrial sources, Measurement, Medium-sized companies, Static code analysis, xno},
	file = {Full Text:C\:\\Users\\michalm\\Zotero\\storage\\G8YVFBJ4\\Ochodek et al. - 2020 - Recognizing lines of code violating company-specif.pdf:application/pdf;Full Text:C\:\\Users\\michalm\\Zotero\\storage\\YDFJT9HT\\Ochodek et al. - 2020 - Recognizing lines of code violating company-specif.pdf:application/pdf}
}

@article{rodriguez-echeverria_suggesting_2021,
	title = {Suggesting model transformation repairs for rule-based languages using a contract-based testing approach},
	issn = {1619-1366},
	doi = {10.1007/s10270-021-00891-0},
	abstract = {Model transformations play an essential role in most model-driven software projects. As the size and complexity of model transformations increase, their reuse, evolution and maintenance become a challenge. This work further details the Model Transformation {TEst} Specification ({MoTES}) approach, which leverages contract-based model testing techniques to assist engineers in model transformation evolution and repairing. The main novelty of our approach is to use contract-based model transformation testing as a foundation to derive suggestions of concrete adaptation actions. {MoTES} uses contracts to specify the expected behaviour of the model transformation under test. These contracts are transformed into model transformations which act as oracles on input-output model pairs, previously generated by executing the transformation under test on provided input models. By further processing, the oracles' output model, precision and recall metrics are calculated for every output pattern (testing results). These metrics are then categorised to increase the user's ability to interpret and act on them. The {MoTES} approach defines 8 cases for precision and recall values classification (test result cases). As traceability information is retained from transformation rules to each output pattern, it is possible to classify each transformation rule involved according to its impact on the metrics, e.g. the number of true positives generated. The {MoTES} approach defines 37 cases for these classifications, with each one linked to a particular (abstract) action suggested on a rule, such as relaxation of the rules. A comprehensive evaluation of this approach is also presented, consisting of three case studies. Two previous case studies performed over two model transformations ({UML}2ER and E2M) are replicated to contrast {MoTES} with an existing model transformation fault localisation approach. An additional case study presents how {MoTES} helps with the evolution of an existing model transformation in the context of a reverse engineering project. Main evaluation results show that our approach can not only detect the errors introduced in the transformations but also localise the faulty rule and suggest the proper repair actions, which significantly reduce testers' effort. From a quantitative perspective, in the third case study, {MoTES} was able to indicate one faulty rule from 19 possibilities for each result case and suggest one or two repair actions from 6 possibilities for each faulty rule.},
	journaltitle = {{SOFTWARE} {AND} {SYSTEMS} {MODELING}},
	author = {Rodriguez-Echeverria, Roberto and Macias, Fernando and Rutle, Adrian and Conejero, Jose M.},
	date = {2021},
	keywords = {Testing, Precision and recall, Classification (of information), Comprehensive evaluation, Evaluation results, Model transformation, Repair, Reverse engineering, Rule-based language, Test specifications, Traceability information, Transformation rules, xno}
}

@article{shankar_optimization_2021,
	title = {Optimization of association rules using hybrid data mining technique},
	issn = {1614-5046},
	doi = {10.1007/s11334-021-00387-6},
	abstract = {Software quality has been the important area of interest for decades now in the {IT} sector and software firms. Defect prediction gives the tester the pointers as to where the bugs will most likely be hidden in the software product. Identifying and reporting the defect probe areas is the main job of software defect prediction techniques. Early detection of software defects during Software Development Life Cycle could lead to a reduction in cost of development, time involved in further testing activities and rework effort post-production and maintenance phase, thus resulting in more reliable software. Software metrics can be used for developing the defect prediction models. Several data mining techniques can be applied on the available open-source software datasets. These datasets are extracted from software programs. Such datasets made publicly available by National Aeronautics and Space Administration for their various softwares have been extensively used in software engineering-related research activities. These datasets contain information on associated Software Metrics at module level. The proposed idea is a novel hybrid data mining technique consisting of Clustering and Modified Apriori Algorithm that results in improved efficiency and reliability of Software Defect Prediction. This technique works by reducing the number of association rules generated. The results are achieved by using interestingness measure called spread. The paper also does a comparative analysis of the results obtained from the novel technique with the existing hybrid technique of Clustering and Apriori.},
	journaltitle = {{INNOVATIONS} {IN} {SYSTEMS} {AND} {SOFTWARE} {ENGINEERING}},
	author = {Shankar, Sahana P. and Naresh, E. and Agrawal, Harshit},
	date = {2021},
	keywords = {xno}
}